{"ast":null,"code":"import { LENGTH_DATE, LENGTH_MONTH, LENGTH_YEAR } from \"../../../../lib/date/constants\";\nimport { InternalDateComponentType } from \"../../../../lib/date/types\";\nexport var inputNumber = function inputNumber(type, prev, key, inputMode) {\n  var nextInputMode = false;\n  var nextValue;\n  var first = 10;\n  var length = LENGTH_YEAR;\n\n  if (type === InternalDateComponentType.Month) {\n    first = 1;\n    length = LENGTH_MONTH;\n  }\n\n  if (type === InternalDateComponentType.Date) {\n    first = 3;\n    length = LENGTH_DATE;\n  }\n\n  if (!inputMode) {\n    nextValue = key;\n    nextInputMode = Number(key) <= first;\n  } else {\n    nextValue = (\"\" + (prev === null ? '' : prev) + key).slice(-length);\n    nextInputMode = nextValue.length < length;\n  }\n\n  return {\n    nextValue: nextValue,\n    nextInputMode: nextInputMode\n  };\n};","map":{"version":3,"sources":["C:/Users/ravka/Desktop/react-typescript-task/node_modules/@skbkontur/react-ui/components/DateInput/helpers/inputNumber/inputNumber.js"],"names":["LENGTH_DATE","LENGTH_MONTH","LENGTH_YEAR","InternalDateComponentType","inputNumber","type","prev","key","inputMode","nextInputMode","nextValue","first","length","Month","Date","Number","slice"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,YAAtB,EAAoCC,WAApC,QAAuD,gCAAvD;AACA,SAASC,yBAAT,QAA0C,4BAA1C;AACA,OAAO,IAAIC,WAAW,GAAG,SAASA,WAAT,CAAqBC,IAArB,EAA2BC,IAA3B,EAAiCC,GAAjC,EAAsCC,SAAtC,EAAiD;AACxE,MAAIC,aAAa,GAAG,KAApB;AACA,MAAIC,SAAJ;AACA,MAAIC,KAAK,GAAG,EAAZ;AACA,MAAIC,MAAM,GAAGV,WAAb;;AAEA,MAAIG,IAAI,KAAKF,yBAAyB,CAACU,KAAvC,EAA8C;AAC5CF,IAAAA,KAAK,GAAG,CAAR;AACAC,IAAAA,MAAM,GAAGX,YAAT;AACD;;AAED,MAAII,IAAI,KAAKF,yBAAyB,CAACW,IAAvC,EAA6C;AAC3CH,IAAAA,KAAK,GAAG,CAAR;AACAC,IAAAA,MAAM,GAAGZ,WAAT;AACD;;AAED,MAAI,CAACQ,SAAL,EAAgB;AACdE,IAAAA,SAAS,GAAGH,GAAZ;AACAE,IAAAA,aAAa,GAAGM,MAAM,CAACR,GAAD,CAAN,IAAeI,KAA/B;AACD,GAHD,MAGO;AACLD,IAAAA,SAAS,GAAG,CAAC,MAAMJ,IAAI,KAAK,IAAT,GAAgB,EAAhB,GAAqBA,IAA3B,IAAmCC,GAApC,EAAyCS,KAAzC,CAA+C,CAACJ,MAAhD,CAAZ;AACAH,IAAAA,aAAa,GAAGC,SAAS,CAACE,MAAV,GAAmBA,MAAnC;AACD;;AAED,SAAO;AACLF,IAAAA,SAAS,EAAEA,SADN;AAELD,IAAAA,aAAa,EAAEA;AAFV,GAAP;AAID,CA5BM","sourcesContent":["import { LENGTH_DATE, LENGTH_MONTH, LENGTH_YEAR } from \"../../../../lib/date/constants\";\nimport { InternalDateComponentType } from \"../../../../lib/date/types\";\nexport var inputNumber = function inputNumber(type, prev, key, inputMode) {\n  var nextInputMode = false;\n  var nextValue;\n  var first = 10;\n  var length = LENGTH_YEAR;\n\n  if (type === InternalDateComponentType.Month) {\n    first = 1;\n    length = LENGTH_MONTH;\n  }\n\n  if (type === InternalDateComponentType.Date) {\n    first = 3;\n    length = LENGTH_DATE;\n  }\n\n  if (!inputMode) {\n    nextValue = key;\n    nextInputMode = Number(key) <= first;\n  } else {\n    nextValue = (\"\" + (prev === null ? '' : prev) + key).slice(-length);\n    nextInputMode = nextValue.length < length;\n  }\n\n  return {\n    nextValue: nextValue,\n    nextInputMode: nextInputMode\n  };\n};"]},"metadata":{},"sourceType":"module"}