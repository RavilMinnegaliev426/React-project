{"ast":null,"code":"import _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport React from 'react';\nimport { config } from \"../config\";\nimport * as CDS from \"../CalendarDateShape\";\nimport { MonthView } from \"../MonthView\";\nimport { DayCellView } from \"../DayCellView\";\nimport * as CalendarScrollEvents from \"../CalendarScrollEvents\";\nexport var Month = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(Month, _React$Component);\n\n  function Month() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;\n    _this.monthSelect = null;\n    _this.yearSelect = null;\n\n    _this.closeSelects = function () {\n      if (_this.monthSelect) {\n        _this.monthSelect.close();\n      }\n\n      if (_this.yearSelect) {\n        _this.yearSelect.close();\n      }\n    };\n\n    _this.monthRef = function (monthSelect) {\n      _this.monthSelect = monthSelect;\n    };\n\n    _this.yearRef = function (yearSelect) {\n      _this.yearSelect = yearSelect;\n    };\n\n    _this.handleMonthSelect = function (month) {\n      _this.props.onMonthYearChange(month, _this.props.month.year);\n    };\n\n    _this.handleYearSelect = function (year) {\n      _this.props.onMonthYearChange(_this.props.month.month, year);\n    };\n\n    return _this;\n  }\n\n  var _proto = Month.prototype;\n\n  _proto.shouldComponentUpdate = function shouldComponentUpdate(nextProps) {\n    if (this.props.top !== nextProps.top) {\n      return true;\n    }\n\n    if (!CDS.isEqual(nextProps.value, this.props.value)) {\n      return true;\n    }\n\n    if (!CDS.isEqual(nextProps.today, this.props.today)) {\n      return true;\n    }\n\n    if (!CDS.isEqual(nextProps.minDate, this.props.minDate)) {\n      return true;\n    }\n\n    if (!CDS.isEqual(nextProps.maxDate, this.props.maxDate)) {\n      return true;\n    }\n\n    return this.props.month !== nextProps.month;\n  };\n\n  _proto.componentDidMount = function componentDidMount() {\n    CalendarScrollEvents.addListener(this.closeSelects);\n  };\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        month = _this$props.month,\n        maxDate = _this$props.maxDate,\n        minDate = _this$props.minDate,\n        top = _this$props.top;\n    return React.createElement(MonthView, {\n      firstDayOffset: month.offset,\n      height: month.height,\n      isFirstInYear: month.isFirstInYear,\n      isLastInYear: month.isLastInYear,\n      maxDate: maxDate,\n      minDate: minDate,\n      month: month.month,\n      top: top,\n      year: month.year,\n      onMonthSelect: this.handleMonthSelect,\n      onYearSelect: this.handleYearSelect,\n      monthSelectRef: this.monthRef,\n      yearSelectRef: this.yearRef\n    }, this.renderCells());\n  };\n\n  _proto.renderCells = function renderCells() {\n    return React.createElement(MonthDayGrid, {\n      days: this.props.month.days,\n      offset: this.props.month.offset,\n      minDate: this.props.minDate,\n      maxDate: this.props.maxDate,\n      today: this.props.today,\n      value: this.props.value,\n      onDateClick: this.props.onDateClick,\n      isHoliday: this.props.isHoliday\n    });\n  };\n\n  return Month;\n}(React.Component);\n\nvar MonthDayGrid = /*#__PURE__*/function (_React$Component2) {\n  _inheritsLoose(MonthDayGrid, _React$Component2);\n\n  function MonthDayGrid() {\n    return _React$Component2.apply(this, arguments) || this;\n  }\n\n  var _proto2 = MonthDayGrid.prototype;\n\n  _proto2.shouldComponentUpdate = function shouldComponentUpdate(nextProps) {\n    if (!CDS.isEqual(nextProps.value, this.props.value)) {\n      return true;\n    }\n\n    if (!CDS.isEqual(nextProps.today, this.props.today)) {\n      return true;\n    }\n\n    if (!CDS.isEqual(nextProps.minDate, this.props.minDate)) {\n      return true;\n    }\n\n    if (!CDS.isEqual(nextProps.maxDate, this.props.maxDate)) {\n      return true;\n    }\n\n    return this.props.days !== nextProps.days;\n  };\n\n  _proto2.render = function render() {\n    var _this2 = this;\n\n    return React.createElement(\"div\", null, React.createElement(\"div\", {\n      style: {\n        width: this.props.offset * config.DAY_HEIGHT,\n        display: 'inline-block'\n      }\n    }), this.props.days.map(function (day) {\n      var isWeekend = _this2.props.isHoliday(day);\n\n      return React.createElement(DayCellView, {\n        date: day,\n        key: day.date + \".\" + day.month + \".\" + day.year,\n        minDate: _this2.props.minDate,\n        maxDate: _this2.props.maxDate,\n        today: _this2.props.today,\n        value: _this2.props.value,\n        isWeekend: isWeekend,\n        onDateClick: _this2.props.onDateClick\n      });\n    }));\n  };\n\n  return MonthDayGrid;\n}(React.Component);\n\nMonthDayGrid.defaultProps = {\n  isHoliday: function isHoliday(day) {\n    return day.isWeekend;\n  }\n};","map":{"version":3,"sources":["C:/Users/ravka/Desktop/react-typescript-task/node_modules/@skbkontur/react-ui/internal/Calendar/Month/Month.js"],"names":["_inheritsLoose","React","config","CDS","MonthView","DayCellView","CalendarScrollEvents","Month","_React$Component","_this","_len","arguments","length","args","Array","_key","call","apply","concat","monthSelect","yearSelect","closeSelects","close","monthRef","yearRef","handleMonthSelect","month","props","onMonthYearChange","year","handleYearSelect","_proto","prototype","shouldComponentUpdate","nextProps","top","isEqual","value","today","minDate","maxDate","componentDidMount","addListener","render","_this$props","createElement","firstDayOffset","offset","height","isFirstInYear","isLastInYear","onMonthSelect","onYearSelect","monthSelectRef","yearSelectRef","renderCells","MonthDayGrid","days","onDateClick","isHoliday","Component","_React$Component2","_proto2","_this2","style","width","DAY_HEIGHT","display","map","day","isWeekend","date","key","defaultProps"],"mappings":"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","sourcesContent":["import _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport React from 'react';\nimport { config } from \"../config\";\nimport * as CDS from \"../CalendarDateShape\";\nimport { MonthView } from \"../MonthView\";\nimport { DayCellView } from \"../DayCellView\";\nimport * as CalendarScrollEvents from \"../CalendarScrollEvents\";\nexport var Month =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(Month, _React$Component);\n\n  function Month() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;\n    _this.monthSelect = null;\n    _this.yearSelect = null;\n\n    _this.closeSelects = function () {\n      if (_this.monthSelect) {\n        _this.monthSelect.close();\n      }\n\n      if (_this.yearSelect) {\n        _this.yearSelect.close();\n      }\n    };\n\n    _this.monthRef = function (monthSelect) {\n      _this.monthSelect = monthSelect;\n    };\n\n    _this.yearRef = function (yearSelect) {\n      _this.yearSelect = yearSelect;\n    };\n\n    _this.handleMonthSelect = function (month) {\n      _this.props.onMonthYearChange(month, _this.props.month.year);\n    };\n\n    _this.handleYearSelect = function (year) {\n      _this.props.onMonthYearChange(_this.props.month.month, year);\n    };\n\n    return _this;\n  }\n\n  var _proto = Month.prototype;\n\n  _proto.shouldComponentUpdate = function shouldComponentUpdate(nextProps) {\n    if (this.props.top !== nextProps.top) {\n      return true;\n    }\n\n    if (!CDS.isEqual(nextProps.value, this.props.value)) {\n      return true;\n    }\n\n    if (!CDS.isEqual(nextProps.today, this.props.today)) {\n      return true;\n    }\n\n    if (!CDS.isEqual(nextProps.minDate, this.props.minDate)) {\n      return true;\n    }\n\n    if (!CDS.isEqual(nextProps.maxDate, this.props.maxDate)) {\n      return true;\n    }\n\n    return this.props.month !== nextProps.month;\n  };\n\n  _proto.componentDidMount = function componentDidMount() {\n    CalendarScrollEvents.addListener(this.closeSelects);\n  };\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        month = _this$props.month,\n        maxDate = _this$props.maxDate,\n        minDate = _this$props.minDate,\n        top = _this$props.top;\n    return React.createElement(MonthView, {\n      firstDayOffset: month.offset,\n      height: month.height,\n      isFirstInYear: month.isFirstInYear,\n      isLastInYear: month.isLastInYear,\n      maxDate: maxDate,\n      minDate: minDate,\n      month: month.month,\n      top: top,\n      year: month.year,\n      onMonthSelect: this.handleMonthSelect,\n      onYearSelect: this.handleYearSelect,\n      monthSelectRef: this.monthRef,\n      yearSelectRef: this.yearRef\n    }, this.renderCells());\n  };\n\n  _proto.renderCells = function renderCells() {\n    return React.createElement(MonthDayGrid, {\n      days: this.props.month.days,\n      offset: this.props.month.offset,\n      minDate: this.props.minDate,\n      maxDate: this.props.maxDate,\n      today: this.props.today,\n      value: this.props.value,\n      onDateClick: this.props.onDateClick,\n      isHoliday: this.props.isHoliday\n    });\n  };\n\n  return Month;\n}(React.Component);\n\nvar MonthDayGrid =\n/*#__PURE__*/\nfunction (_React$Component2) {\n  _inheritsLoose(MonthDayGrid, _React$Component2);\n\n  function MonthDayGrid() {\n    return _React$Component2.apply(this, arguments) || this;\n  }\n\n  var _proto2 = MonthDayGrid.prototype;\n\n  _proto2.shouldComponentUpdate = function shouldComponentUpdate(nextProps) {\n    if (!CDS.isEqual(nextProps.value, this.props.value)) {\n      return true;\n    }\n\n    if (!CDS.isEqual(nextProps.today, this.props.today)) {\n      return true;\n    }\n\n    if (!CDS.isEqual(nextProps.minDate, this.props.minDate)) {\n      return true;\n    }\n\n    if (!CDS.isEqual(nextProps.maxDate, this.props.maxDate)) {\n      return true;\n    }\n\n    return this.props.days !== nextProps.days;\n  };\n\n  _proto2.render = function render() {\n    var _this2 = this;\n\n    return React.createElement(\"div\", null, React.createElement(\"div\", {\n      style: {\n        width: this.props.offset * config.DAY_HEIGHT,\n        display: 'inline-block'\n      }\n    }), this.props.days.map(function (day) {\n      var isWeekend = _this2.props.isHoliday(day);\n\n      return React.createElement(DayCellView, {\n        date: day,\n        key: day.date + \".\" + day.month + \".\" + day.year,\n        minDate: _this2.props.minDate,\n        maxDate: _this2.props.maxDate,\n        today: _this2.props.today,\n        value: _this2.props.value,\n        isWeekend: isWeekend,\n        onDateClick: _this2.props.onDateClick\n      });\n    }));\n  };\n\n  return MonthDayGrid;\n}(React.Component);\n\nMonthDayGrid.defaultProps = {\n  isHoliday: function isHoliday(day) {\n    return day.isWeekend;\n  }\n};"]},"metadata":{},"sourceType":"module"}