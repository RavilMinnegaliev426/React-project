{"ast":null,"code":"import warning from 'warning';\nimport { clamp, extractColorParts, hue2rgb, parseHSLParts, parseRGBParts } from \"../ColorHelpers\";\nimport { ColorKeywords } from \"../ColorKeywords\";\nimport { ColorObject } from \"../ColorObject\";\nvar RGB_REGEX = /rgb\\(\\s*(\\d{1,3}(?:(?:\\.\\d+)?%)?)\\s*,\\s*(\\d{1,3}(?:(?:\\.\\d+)?%)?)\\s*,\\s*(\\d{1,3}(?:(?:\\.\\d+)?%)?)\\s*\\)/;\nvar RGBA_REGEX = /rgba\\(\\s*(\\d{1,3}(?:(?:\\.\\d+)?%)?)\\s*,\\s*(\\d{1,3}(?:(?:\\.\\d+)?%)?)\\s*,\\s*(\\d{1,3}(?:(?:\\.\\d+)?%)?)\\s*,\\s*(0|0\\.\\d+|1|1\\.0+|\\d{1,3}(?:(?:\\.\\d+)?%))\\s*\\)/;\nvar HSL_REGEX = /hsl\\(\\s*(\\d{1,3})\\s*,\\s*(0|0\\.\\d+|1|1\\.0+|\\d{1,3}(?:(?:\\.\\d+)?%))\\s*,\\s*(0|0\\.\\d+|1|1\\.0+|\\d{1,3}(?:(?:\\.\\d+)?%))\\s*\\)/;\nvar HSLA_REGEX = /hsla\\(\\s*(\\d{1,3})\\s*,\\s*(0|0\\.\\d+|1|1\\.0+|\\d{1,3}(?:(?:\\.\\d+)?%))\\s*,\\s*(0|0\\.\\d+|1|1\\.0+|\\d{1,3}(?:(?:\\.\\d+)?%))\\s*,\\s*(0|0\\.\\d+|1|1\\.0+|\\d{1,3}(?:(?:\\.\\d+)?%))\\s*\\)/;\nvar HEX_REGEX = /^#([0-9a-f]{3}|[0-9a-f]{6})$/;\nexport var ColorFactory = /*#__PURE__*/function () {\n  function ColorFactory() {}\n\n  ColorFactory.create = function create(input) {\n    if (!this.cache[input]) {\n      this.cache[input] = this.instantiate(input);\n    }\n\n    return this.cache[input];\n  };\n\n  ColorFactory.instantiate = function instantiate(input) {\n    if (typeof input !== 'string') {\n      warning(false, \"Invalid type of input (\" + typeof input + \"), expected a string. Returning transparent color\");\n      return new ColorObject([0, 0, 0], 1.0, 'transparent');\n    }\n\n    input = input.toLowerCase().trim();\n\n    if (input === 'transparent') {\n      return new ColorObject([0, 0, 0], 0, 'transparent');\n    } else if (this.isKeyword(input)) {\n      return this.fromKeyword(input);\n    } else if (input.startsWith('rgb')) {\n      var parts = extractColorParts(input, RGB_REGEX, RGBA_REGEX);\n\n      var _parseRGBParts = parseRGBParts(parts),\n          r = _parseRGBParts.r,\n          g = _parseRGBParts.g,\n          b = _parseRGBParts.b,\n          a = _parseRGBParts.a;\n\n      r = clamp(r, 255);\n      g = clamp(g, 255);\n      b = clamp(b, 255);\n      a = clamp(a, 1);\n      return this.fromRGB(r, g, b, a);\n    } else if (input.startsWith('hsl')) {\n      var _parts = extractColorParts(input, HSL_REGEX, HSLA_REGEX);\n\n      var _parseHSLParts = parseHSLParts(_parts),\n          h = _parseHSLParts.h,\n          s = _parseHSLParts.s,\n          l = _parseHSLParts.l,\n          _a = _parseHSLParts.a;\n\n      h = clamp(h, 360);\n      s = clamp(s, 1);\n      l = clamp(l, 1);\n      _a = clamp(_a, 1);\n      return this.fromHSL(h, s, l, _a);\n    }\n\n    return this.fromHex(input);\n  };\n\n  ColorFactory.isKeyword = function isKeyword(input) {\n    return Object.prototype.hasOwnProperty.call(ColorKeywords, input);\n  };\n\n  ColorFactory.fromKeyword = function fromKeyword(keyword) {\n    return this.fromHex(ColorKeywords[keyword], keyword);\n  };\n\n  ColorFactory.fromHex = function fromHex(hexString, type) {\n    if (type === void 0) {\n      type = 'hex';\n    }\n\n    if (!HEX_REGEX.test(hexString)) {\n      throw new Error(hexString + \" is not a valid hex color string\");\n    }\n\n    var colorCode = hexString.substring(1);\n    var rgb = [0, 0, 0];\n\n    if (colorCode.length === 6) {\n      colorCode.match(/.{2}/g).forEach(function (c, i) {\n        rgb[i] = parseInt(c, 16);\n      });\n    } else if (colorCode.length === 3) {\n      colorCode.split('').forEach(function (c, i) {\n        rgb[i] = parseInt(c + c, 16);\n      });\n    }\n\n    return new ColorObject(rgb, 1.0, type);\n  };\n\n  ColorFactory.fromRGB = function fromRGB(r, g, b, a) {\n    if (a === void 0) {\n      a = 1.0;\n    }\n\n    return new ColorObject([r, g, b], a, a < 1 ? 'rgba' : 'rgb');\n  };\n\n  ColorFactory.fromHSL = function fromHSL(h, s, l, a) {\n    if (a === void 0) {\n      a = 1.0;\n    }\n\n    if (s === 0) {\n      var gray = Math.round(l * 255);\n      return new ColorObject([gray, gray, gray], a, a < 1 ? 'hsla' : 'hsl');\n    }\n\n    var hDeg = h / 360;\n    var t1 = l < 0.5 ? l * (1 + s) : l + s - l * s;\n    var t2 = l * 2 - t1;\n    var r = hue2rgb(hDeg + 1 / 3, t1, t2);\n    var g = hue2rgb(hDeg, t1, t2);\n    var b = hue2rgb(hDeg - 1 / 3, t1, t2);\n    var rgb = [Math.round(r * 255), Math.round(g * 255), Math.round(b * 255)];\n    return new ColorObject(rgb, a, a < 1 ? 'hsla' : 'hsl');\n  };\n\n  return ColorFactory;\n}();\nColorFactory.cache = Object.create(null);","map":{"version":3,"sources":["C:/Users/ravka/Desktop/react-typescript-task/node_modules/@skbkontur/react-ui/lib/styles/ColorFactory/ColorFactory.js"],"names":["warning","clamp","extractColorParts","hue2rgb","parseHSLParts","parseRGBParts","ColorKeywords","ColorObject","RGB_REGEX","RGBA_REGEX","HSL_REGEX","HSLA_REGEX","HEX_REGEX","ColorFactory","create","input","cache","instantiate","toLowerCase","trim","isKeyword","fromKeyword","startsWith","parts","_parseRGBParts","r","g","b","a","fromRGB","_parts","_parseHSLParts","h","s","l","_a","fromHSL","fromHex","Object","prototype","hasOwnProperty","call","keyword","hexString","type","test","Error","colorCode","substring","rgb","length","match","forEach","c","i","parseInt","split","gray","Math","round","hDeg","t1","t2"],"mappings":"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","sourcesContent":["import warning from 'warning';\nimport { clamp, extractColorParts, hue2rgb, parseHSLParts, parseRGBParts } from \"../ColorHelpers\";\nimport { ColorKeywords } from \"../ColorKeywords\";\nimport { ColorObject } from \"../ColorObject\";\nvar RGB_REGEX = /rgb\\(\\s*(\\d{1,3}(?:(?:\\.\\d+)?%)?)\\s*,\\s*(\\d{1,3}(?:(?:\\.\\d+)?%)?)\\s*,\\s*(\\d{1,3}(?:(?:\\.\\d+)?%)?)\\s*\\)/;\nvar RGBA_REGEX = /rgba\\(\\s*(\\d{1,3}(?:(?:\\.\\d+)?%)?)\\s*,\\s*(\\d{1,3}(?:(?:\\.\\d+)?%)?)\\s*,\\s*(\\d{1,3}(?:(?:\\.\\d+)?%)?)\\s*,\\s*(0|0\\.\\d+|1|1\\.0+|\\d{1,3}(?:(?:\\.\\d+)?%))\\s*\\)/;\nvar HSL_REGEX = /hsl\\(\\s*(\\d{1,3})\\s*,\\s*(0|0\\.\\d+|1|1\\.0+|\\d{1,3}(?:(?:\\.\\d+)?%))\\s*,\\s*(0|0\\.\\d+|1|1\\.0+|\\d{1,3}(?:(?:\\.\\d+)?%))\\s*\\)/;\nvar HSLA_REGEX = /hsla\\(\\s*(\\d{1,3})\\s*,\\s*(0|0\\.\\d+|1|1\\.0+|\\d{1,3}(?:(?:\\.\\d+)?%))\\s*,\\s*(0|0\\.\\d+|1|1\\.0+|\\d{1,3}(?:(?:\\.\\d+)?%))\\s*,\\s*(0|0\\.\\d+|1|1\\.0+|\\d{1,3}(?:(?:\\.\\d+)?%))\\s*\\)/;\nvar HEX_REGEX = /^#([0-9a-f]{3}|[0-9a-f]{6})$/;\nexport var ColorFactory =\n/*#__PURE__*/\nfunction () {\n  function ColorFactory() {}\n\n  ColorFactory.create = function create(input) {\n    if (!this.cache[input]) {\n      this.cache[input] = this.instantiate(input);\n    }\n\n    return this.cache[input];\n  };\n\n  ColorFactory.instantiate = function instantiate(input) {\n    if (typeof input !== 'string') {\n      warning(false, \"Invalid type of input (\" + typeof input + \"), expected a string. Returning transparent color\");\n      return new ColorObject([0, 0, 0], 1.0, 'transparent');\n    }\n\n    input = input.toLowerCase().trim();\n\n    if (input === 'transparent') {\n      return new ColorObject([0, 0, 0], 0, 'transparent');\n    } else if (this.isKeyword(input)) {\n      return this.fromKeyword(input);\n    } else if (input.startsWith('rgb')) {\n      var parts = extractColorParts(input, RGB_REGEX, RGBA_REGEX);\n\n      var _parseRGBParts = parseRGBParts(parts),\n          r = _parseRGBParts.r,\n          g = _parseRGBParts.g,\n          b = _parseRGBParts.b,\n          a = _parseRGBParts.a;\n\n      r = clamp(r, 255);\n      g = clamp(g, 255);\n      b = clamp(b, 255);\n      a = clamp(a, 1);\n      return this.fromRGB(r, g, b, a);\n    } else if (input.startsWith('hsl')) {\n      var _parts = extractColorParts(input, HSL_REGEX, HSLA_REGEX);\n\n      var _parseHSLParts = parseHSLParts(_parts),\n          h = _parseHSLParts.h,\n          s = _parseHSLParts.s,\n          l = _parseHSLParts.l,\n          _a = _parseHSLParts.a;\n\n      h = clamp(h, 360);\n      s = clamp(s, 1);\n      l = clamp(l, 1);\n      _a = clamp(_a, 1);\n      return this.fromHSL(h, s, l, _a);\n    }\n\n    return this.fromHex(input);\n  };\n\n  ColorFactory.isKeyword = function isKeyword(input) {\n    return Object.prototype.hasOwnProperty.call(ColorKeywords, input);\n  };\n\n  ColorFactory.fromKeyword = function fromKeyword(keyword) {\n    return this.fromHex(ColorKeywords[keyword], keyword);\n  };\n\n  ColorFactory.fromHex = function fromHex(hexString, type) {\n    if (type === void 0) {\n      type = 'hex';\n    }\n\n    if (!HEX_REGEX.test(hexString)) {\n      throw new Error(hexString + \" is not a valid hex color string\");\n    }\n\n    var colorCode = hexString.substring(1);\n    var rgb = [0, 0, 0];\n\n    if (colorCode.length === 6) {\n      colorCode.match(/.{2}/g).forEach(function (c, i) {\n        rgb[i] = parseInt(c, 16);\n      });\n    } else if (colorCode.length === 3) {\n      colorCode.split('').forEach(function (c, i) {\n        rgb[i] = parseInt(c + c, 16);\n      });\n    }\n\n    return new ColorObject(rgb, 1.0, type);\n  };\n\n  ColorFactory.fromRGB = function fromRGB(r, g, b, a) {\n    if (a === void 0) {\n      a = 1.0;\n    }\n\n    return new ColorObject([r, g, b], a, a < 1 ? 'rgba' : 'rgb');\n  };\n\n  ColorFactory.fromHSL = function fromHSL(h, s, l, a) {\n    if (a === void 0) {\n      a = 1.0;\n    }\n\n    if (s === 0) {\n      var gray = Math.round(l * 255);\n      return new ColorObject([gray, gray, gray], a, a < 1 ? 'hsla' : 'hsl');\n    }\n\n    var hDeg = h / 360;\n    var t1 = l < 0.5 ? l * (1 + s) : l + s - l * s;\n    var t2 = l * 2 - t1;\n    var r = hue2rgb(hDeg + 1 / 3, t1, t2);\n    var g = hue2rgb(hDeg, t1, t2);\n    var b = hue2rgb(hDeg - 1 / 3, t1, t2);\n    var rgb = [Math.round(r * 255), Math.round(g * 255), Math.round(b * 255)];\n    return new ColorObject(rgb, a, a < 1 ? 'hsla' : 'hsl');\n  };\n\n  return ColorFactory;\n}();\nColorFactory.cache = Object.create(null);"]},"metadata":{},"sourceType":"module"}