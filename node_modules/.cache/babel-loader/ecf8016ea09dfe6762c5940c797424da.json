{"ast":null,"code":"import { getRandomDigit, getRandomElement, round } from \"../../utils\";\nimport { vehicleTypes } from \"./contracts\";\nconst marks = [\"BMW\", \"Lada\", \"Jeep\", \"KIA\", \"Subaru\", \"Toyota\", \"Volkswagen\"];\nconst titles = [\"M3\", \"M5\", \"Granta\", \"Kalina\", \"Polo\", \"Grand Cherokee\", \"Rio\", \"Spectra\", \"Impreza\", \"BRZ\", \"Corolla\", \"Golf\", \"Camry\"];\nexport function generateVehicle(length) {\n  return Array.from({\n    length\n  }).map((_, i) => {\n    const title = `${getRandomElement(marks)} ${getRandomElement(titles)}`;\n    const type = getRandomElement(vehicleTypes);\n    return {\n      id: i.toString(),\n      title,\n      type,\n      price: round(getRandomDigit(10000, 5000000))\n    };\n  });\n}","map":{"version":3,"sources":["C:/Users/ravka/Desktop/react-typescript-task/src/data/vehicles/mock.ts"],"names":["getRandomDigit","getRandomElement","round","vehicleTypes","marks","titles","generateVehicle","length","Array","from","map","_","i","title","type","id","toString","price"],"mappings":"AAAA,SAAQA,cAAR,EAAwBC,gBAAxB,EAA0CC,KAA1C,QAAsD,aAAtD;AACA,SAAiBC,YAAjB,QAAoC,aAApC;AAEA,MAAMC,KAAe,GAAG,CACpB,KADoB,EAEpB,MAFoB,EAGpB,MAHoB,EAIpB,KAJoB,EAKpB,QALoB,EAMpB,QANoB,EAOpB,YAPoB,CAAxB;AAUA,MAAMC,MAAgB,GAAG,CACrB,IADqB,EAErB,IAFqB,EAGrB,QAHqB,EAIrB,QAJqB,EAKrB,MALqB,EAMrB,gBANqB,EAOrB,KAPqB,EAQrB,SARqB,EASrB,SATqB,EAUrB,KAVqB,EAWrB,SAXqB,EAYrB,MAZqB,EAarB,OAbqB,CAAzB;AAgBA,OAAO,SAASC,eAAT,CAAyBC,MAAzB,EAAoD;AACvD,SAAOC,KAAK,CAACC,IAAN,CAAW;AAACF,IAAAA;AAAD,GAAX,EAAqBG,GAArB,CAAyB,CAACC,CAAD,EAAIC,CAAJ,KAAU;AACtC,UAAMC,KAAK,GAAI,GAAEZ,gBAAgB,CAACG,KAAD,CAAQ,IAAGH,gBAAgB,CAACI,MAAD,CAAS,EAArE;AACA,UAAMS,IAAI,GAAGb,gBAAgB,CAACE,YAAD,CAA7B;AACA,WAAO;AACHY,MAAAA,EAAE,EAAEH,CAAC,CAACI,QAAF,EADD;AAEHH,MAAAA,KAFG;AAGHC,MAAAA,IAHG;AAIHG,MAAAA,KAAK,EAAEf,KAAK,CAACF,cAAc,CAAC,KAAD,EAAS,OAAT,CAAf;AAJT,KAAP;AAMH,GATM,CAAP;AAUH","sourcesContent":["import {getRandomDigit, getRandomElement, round} from \"../../utils\";\nimport {Vehicle, vehicleTypes} from \"./contracts\";\n\nconst marks: string[] = [\n    \"BMW\",\n    \"Lada\",\n    \"Jeep\",\n    \"KIA\",\n    \"Subaru\",\n    \"Toyota\",\n    \"Volkswagen\"\n];\n\nconst titles: string[] = [\n    \"M3\",\n    \"M5\",\n    \"Granta\",\n    \"Kalina\",\n    \"Polo\",\n    \"Grand Cherokee\",\n    \"Rio\",\n    \"Spectra\",\n    \"Impreza\",\n    \"BRZ\",\n    \"Corolla\",\n    \"Golf\",\n    \"Camry\"\n];\n\nexport function generateVehicle(length: number): Vehicle[] {\n    return Array.from({length}).map((_, i) => {\n        const title = `${getRandomElement(marks)} ${getRandomElement(titles)}`;\n        const type = getRandomElement(vehicleTypes);\n        return {\n            id: i.toString(),\n            title,\n            type,\n            price: round(getRandomDigit(10_000, 5_000_000))\n        };\n    });\n}\n"]},"metadata":{},"sourceType":"module"}