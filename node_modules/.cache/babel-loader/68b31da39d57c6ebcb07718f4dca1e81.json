{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { MAX_ALLOWED_CHARS, MAX_SAFE_DIGITS } from \"../constants\";\nexport var CurrencyHelper = /*#__PURE__*/function () {\n  function CurrencyHelper() {}\n\n  CurrencyHelper.getOptions = function getOptions(options) {\n    return _extends({}, CurrencyHelper.defaultOptions, {}, options);\n  };\n\n  CurrencyHelper.getInfo = function getInfo(value, options) {\n    var raw = CurrencyHelper.unformatString(value);\n    var formatted = CurrencyHelper.formatString(value, options);\n    var cursorMap = CurrencyHelper.getCursorMap(formatted, options);\n    return {\n      raw: raw,\n      formatted: formatted,\n      cursorMap: cursorMap\n    };\n  };\n\n  CurrencyHelper.getCursorMap = function getCursorMap(formatted, formattingOptions) {\n    var options = CurrencyHelper.getOptions(formattingOptions);\n    var regexp = new RegExp(options.thousandsDelimiter);\n    var cursorMap = [];\n    var index = formatted.length;\n    var cursor = formatted.length;\n    var skip = 0;\n\n    while (index >= 0) {\n      cursorMap[index] = cursor;\n      var ignoredSymbol = regexp.exec(formatted[index - 1]);\n\n      if (ignoredSymbol) {\n        ++skip;\n      } else {\n        cursor = cursor - skip - 1;\n        skip = 0;\n      }\n\n      --index;\n    }\n\n    return cursorMap;\n  };\n\n  CurrencyHelper.format = function format(value, options) {\n    if (value == null) {\n      return '';\n    }\n\n    return CurrencyHelper.formatString(value.toString(), options);\n  };\n\n  CurrencyHelper.parse = function parse(value) {\n    var cleaned = CurrencyHelper.unformatString(value);\n\n    if (!cleaned) {\n      return null;\n    }\n\n    var destructed = CurrencyHelper.destructString(cleaned);\n\n    if (!destructed) {\n      return null;\n    }\n\n    var result = destructed.sign + (destructed.integer || '0') + (destructed.delimiter || '.') + (destructed.fraction || '0');\n    return parseFloat(result);\n  };\n\n  CurrencyHelper.unformatString = function unformatString(value) {\n    return value.replace(/\\s/g, '').replace(',', '.').replace(/[\\u2212\\u002D\\uFE63\\uFF0D\\u2012\\u2013\\u2014\\u2015]/g, '-');\n  };\n\n  CurrencyHelper.formatForClipboard = function formatForClipboard(value) {\n    return CurrencyHelper.unformatString(value).replace('.', ',');\n  };\n\n  CurrencyHelper.formatString = function formatString(value, formattingOptions) {\n    var options = CurrencyHelper.getOptions(formattingOptions);\n    value = CurrencyHelper.unformatString(value);\n    var destructed = CurrencyHelper.destructString(value) || {\n      sign: '',\n      integer: '',\n      delimiter: '',\n      fraction: ''\n    };\n    var sign = destructed.sign,\n        integer = destructed.integer,\n        delimiter = destructed.delimiter;\n    var fraction = destructed.fraction;\n    var fractionDigits = fraction.length;\n\n    if (options.hideTrailingZeros) {\n      fraction = fraction.replace(/0+$/, '');\n      fractionDigits = fraction.length;\n    } else if (options.fractionDigits !== null) {\n      fractionDigits = options.fractionDigits;\n    }\n\n    var parts = [];\n    var blockSize = 3;\n    var start = (integer.length - 1) % blockSize - blockSize + 1;\n\n    for (var i = start; i < integer.length; i += blockSize) {\n      parts.push(integer.substring(Math.max(i, 0), i + blockSize));\n    }\n\n    var result = parts.join(options.thousandsDelimiter);\n\n    if (delimiter || fractionDigits) {\n      result += ',';\n      result += fraction.padEnd(Math.min(fractionDigits, MAX_SAFE_DIGITS), '0');\n    }\n\n    if (sign) {\n      result = options.minusSign + result;\n    }\n\n    return result;\n  };\n\n  CurrencyHelper.isValidString = function isValidString(value, options) {\n    value = CurrencyHelper.unformatString(value);\n    var destructed = CurrencyHelper.destructString(value);\n\n    if (!destructed) {\n      return false;\n    }\n\n    var sign = destructed.sign,\n        integer = destructed.integer,\n        delimiter = destructed.delimiter,\n        fraction = destructed.fraction;\n\n    if (options.unsigned && sign) {\n      return false;\n    }\n\n    if (options.fractionDigits === 0 && delimiter) {\n      return false;\n    }\n\n    var integerDigits = integer === '0' ? 0 : integer.length;\n    var fractionDigits = fraction.length;\n\n    if (options.integerDigits != null && integerDigits > options.integerDigits) {\n      return false;\n    }\n\n    if (options.integerDigits == null && integerDigits > MAX_SAFE_DIGITS - (options.fractionDigits || 0)) {\n      return false;\n    }\n\n    if (options.fractionDigits != null && fractionDigits > options.fractionDigits) {\n      return false;\n    }\n\n    return integerDigits + fractionDigits <= MAX_SAFE_DIGITS;\n  };\n\n  CurrencyHelper.extractValid = function extractValid(value, options) {\n    value = CurrencyHelper.unformatString(value);\n    var match = /[-.\\d]+/.exec(value);\n\n    if (!match) {\n      return '';\n    }\n\n    var token = match[0].substr(0, MAX_ALLOWED_CHARS);\n\n    for (var i = token.length; i >= 0; --i) {\n      var result = token.substr(0, i);\n\n      if (CurrencyHelper.isValidString(result, options)) {\n        return result;\n      }\n    }\n\n    return '';\n  };\n\n  CurrencyHelper.destructString = function destructString(value) {\n    var match = /^(-)?(\\d*)?(\\.)?(\\d*)?$/.exec(value);\n\n    if (!match) {\n      return null;\n    }\n\n    var _match$ = match[1],\n        sign = _match$ === void 0 ? '' : _match$,\n        _match$2 = match[2],\n        integer = _match$2 === void 0 ? '' : _match$2,\n        _match$3 = match[3],\n        delimiter = _match$3 === void 0 ? '' : _match$3,\n        _match$4 = match[4],\n        fraction = _match$4 === void 0 ? '' : _match$4;\n    return {\n      sign: sign,\n      integer: integer,\n      delimiter: delimiter,\n      fraction: fraction\n    };\n  };\n\n  return CurrencyHelper;\n}();\nCurrencyHelper.defaultOptions = {\n  fractionDigits: null,\n  hideTrailingZeros: false,\n  thousandsDelimiter: String.fromCharCode(0x2009),\n  minusSign: String.fromCharCode(0x2212)\n};","map":{"version":3,"sources":["C:/Users/ravka/Desktop/react-typescript-task/node_modules/@skbkontur/react-ui/components/CurrencyInput/CurrencyHelper/CurrencyHelper.js"],"names":["_extends","MAX_ALLOWED_CHARS","MAX_SAFE_DIGITS","CurrencyHelper","getOptions","options","defaultOptions","getInfo","value","raw","unformatString","formatted","formatString","cursorMap","getCursorMap","formattingOptions","regexp","RegExp","thousandsDelimiter","index","length","cursor","skip","ignoredSymbol","exec","format","toString","parse","cleaned","destructed","destructString","result","sign","integer","delimiter","fraction","parseFloat","replace","formatForClipboard","fractionDigits","hideTrailingZeros","parts","blockSize","start","i","push","substring","Math","max","join","padEnd","min","minusSign","isValidString","unsigned","integerDigits","extractValid","match","token","substr","_match$","_match$2","_match$3","_match$4","String","fromCharCode"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { MAX_ALLOWED_CHARS, MAX_SAFE_DIGITS } from \"../constants\";\nexport var CurrencyHelper =\n/*#__PURE__*/\nfunction () {\n  function CurrencyHelper() {}\n\n  CurrencyHelper.getOptions = function getOptions(options) {\n    return _extends({}, CurrencyHelper.defaultOptions, {}, options);\n  };\n\n  CurrencyHelper.getInfo = function getInfo(value, options) {\n    var raw = CurrencyHelper.unformatString(value);\n    var formatted = CurrencyHelper.formatString(value, options);\n    var cursorMap = CurrencyHelper.getCursorMap(formatted, options);\n    return {\n      raw: raw,\n      formatted: formatted,\n      cursorMap: cursorMap\n    };\n  };\n\n  CurrencyHelper.getCursorMap = function getCursorMap(formatted, formattingOptions) {\n    var options = CurrencyHelper.getOptions(formattingOptions);\n    var regexp = new RegExp(options.thousandsDelimiter);\n    var cursorMap = [];\n    var index = formatted.length;\n    var cursor = formatted.length;\n    var skip = 0;\n\n    while (index >= 0) {\n      cursorMap[index] = cursor;\n      var ignoredSymbol = regexp.exec(formatted[index - 1]);\n\n      if (ignoredSymbol) {\n        ++skip;\n      } else {\n        cursor = cursor - skip - 1;\n        skip = 0;\n      }\n\n      --index;\n    }\n\n    return cursorMap;\n  };\n\n  CurrencyHelper.format = function format(value, options) {\n    if (value == null) {\n      return '';\n    }\n\n    return CurrencyHelper.formatString(value.toString(), options);\n  };\n\n  CurrencyHelper.parse = function parse(value) {\n    var cleaned = CurrencyHelper.unformatString(value);\n\n    if (!cleaned) {\n      return null;\n    }\n\n    var destructed = CurrencyHelper.destructString(cleaned);\n\n    if (!destructed) {\n      return null;\n    }\n\n    var result = destructed.sign + (destructed.integer || '0') + (destructed.delimiter || '.') + (destructed.fraction || '0');\n    return parseFloat(result);\n  };\n\n  CurrencyHelper.unformatString = function unformatString(value) {\n    return value.replace(/\\s/g, '').replace(',', '.').replace(/[\\u2212\\u002D\\uFE63\\uFF0D\\u2012\\u2013\\u2014\\u2015]/g, '-');\n  };\n\n  CurrencyHelper.formatForClipboard = function formatForClipboard(value) {\n    return CurrencyHelper.unformatString(value).replace('.', ',');\n  };\n\n  CurrencyHelper.formatString = function formatString(value, formattingOptions) {\n    var options = CurrencyHelper.getOptions(formattingOptions);\n    value = CurrencyHelper.unformatString(value);\n    var destructed = CurrencyHelper.destructString(value) || {\n      sign: '',\n      integer: '',\n      delimiter: '',\n      fraction: ''\n    };\n    var sign = destructed.sign,\n        integer = destructed.integer,\n        delimiter = destructed.delimiter;\n    var fraction = destructed.fraction;\n    var fractionDigits = fraction.length;\n\n    if (options.hideTrailingZeros) {\n      fraction = fraction.replace(/0+$/, '');\n      fractionDigits = fraction.length;\n    } else if (options.fractionDigits !== null) {\n      fractionDigits = options.fractionDigits;\n    }\n\n    var parts = [];\n    var blockSize = 3;\n    var start = (integer.length - 1) % blockSize - blockSize + 1;\n\n    for (var i = start; i < integer.length; i += blockSize) {\n      parts.push(integer.substring(Math.max(i, 0), i + blockSize));\n    }\n\n    var result = parts.join(options.thousandsDelimiter);\n\n    if (delimiter || fractionDigits) {\n      result += ',';\n      result += fraction.padEnd(Math.min(fractionDigits, MAX_SAFE_DIGITS), '0');\n    }\n\n    if (sign) {\n      result = options.minusSign + result;\n    }\n\n    return result;\n  };\n\n  CurrencyHelper.isValidString = function isValidString(value, options) {\n    value = CurrencyHelper.unformatString(value);\n    var destructed = CurrencyHelper.destructString(value);\n\n    if (!destructed) {\n      return false;\n    }\n\n    var sign = destructed.sign,\n        integer = destructed.integer,\n        delimiter = destructed.delimiter,\n        fraction = destructed.fraction;\n\n    if (options.unsigned && sign) {\n      return false;\n    }\n\n    if (options.fractionDigits === 0 && delimiter) {\n      return false;\n    }\n\n    var integerDigits = integer === '0' ? 0 : integer.length;\n    var fractionDigits = fraction.length;\n\n    if (options.integerDigits != null && integerDigits > options.integerDigits) {\n      return false;\n    }\n\n    if (options.integerDigits == null && integerDigits > MAX_SAFE_DIGITS - (options.fractionDigits || 0)) {\n      return false;\n    }\n\n    if (options.fractionDigits != null && fractionDigits > options.fractionDigits) {\n      return false;\n    }\n\n    return integerDigits + fractionDigits <= MAX_SAFE_DIGITS;\n  };\n\n  CurrencyHelper.extractValid = function extractValid(value, options) {\n    value = CurrencyHelper.unformatString(value);\n    var match = /[-.\\d]+/.exec(value);\n\n    if (!match) {\n      return '';\n    }\n\n    var token = match[0].substr(0, MAX_ALLOWED_CHARS);\n\n    for (var i = token.length; i >= 0; --i) {\n      var result = token.substr(0, i);\n\n      if (CurrencyHelper.isValidString(result, options)) {\n        return result;\n      }\n    }\n\n    return '';\n  };\n\n  CurrencyHelper.destructString = function destructString(value) {\n    var match = /^(-)?(\\d*)?(\\.)?(\\d*)?$/.exec(value);\n\n    if (!match) {\n      return null;\n    }\n\n    var _match$ = match[1],\n        sign = _match$ === void 0 ? '' : _match$,\n        _match$2 = match[2],\n        integer = _match$2 === void 0 ? '' : _match$2,\n        _match$3 = match[3],\n        delimiter = _match$3 === void 0 ? '' : _match$3,\n        _match$4 = match[4],\n        fraction = _match$4 === void 0 ? '' : _match$4;\n    return {\n      sign: sign,\n      integer: integer,\n      delimiter: delimiter,\n      fraction: fraction\n    };\n  };\n\n  return CurrencyHelper;\n}();\nCurrencyHelper.defaultOptions = {\n  fractionDigits: null,\n  hideTrailingZeros: false,\n  thousandsDelimiter: String.fromCharCode(0x2009),\n  minusSign: String.fromCharCode(0x2212)\n};"]},"metadata":{},"sourceType":"module"}