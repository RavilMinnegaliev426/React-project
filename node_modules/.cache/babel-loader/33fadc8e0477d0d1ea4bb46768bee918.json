{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\n/**\r\n                                     * Контейнер, расстояние между элементами в котором равно `gap`.\r\n                                     */\n\nexport var Gapped = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(Gapped, _React$Component);\n\n  function Gapped() {\n    return _React$Component.apply(this, arguments) || this;\n  }\n\n  var _proto = Gapped.prototype;\n\n  _proto.render = function render() {\n    if (this.props.vertical) {\n      return this.renderVertical();\n    }\n\n    return this.renderHorizontal();\n  };\n\n  _proto.renderVertical = function renderVertical() {\n    var subsequentItemStyle = {\n      paddingTop: this.props.gap\n    };\n    var isFirst = true;\n    var children = React.Children.map(this.props.children, function (child) {\n      if (!child) {\n        return child;\n      }\n\n      var style = isFirst ? undefined : subsequentItemStyle;\n      isFirst = false;\n      return React.createElement(\"div\", {\n        style: style\n      }, child);\n    });\n    return React.createElement(\"div\", null, children);\n  };\n\n  _proto.renderHorizontal = function renderHorizontal() {\n    var _this$props = this.props,\n        gap = _this$props.gap,\n        children = _this$props.children,\n        verticalAlign = _this$props.verticalAlign,\n        wrap = _this$props.wrap;\n\n    var itemStyle = _extends({\n      display: 'inline-block',\n      verticalAlign: verticalAlign\n    }, wrap ? {\n      marginLeft: gap,\n      marginTop: gap\n    } : {});\n\n    var rootStyle = wrap ? {\n      paddingTop: 1\n    } : {};\n    var contStyle = wrap ? {\n      marginTop: -gap - 1,\n      marginLeft: -gap\n    } : {\n      whiteSpace: 'nowrap'\n    };\n    return React.createElement(\"div\", {\n      style: rootStyle\n    }, React.createElement(\"div\", {\n      style: contStyle\n    }, React.Children.map(children, function (child, index) {\n      if (!child) {\n        return child;\n      }\n\n      var marginLeft = index === 0 ? undefined : gap;\n      return React.createElement(\"span\", {\n        style: _extends({\n          marginLeft: marginLeft\n        }, itemStyle)\n      }, child);\n    })));\n  };\n\n  return Gapped;\n}(React.Component);\nGapped.__KONTUR_REACT_UI__ = 'Gapped';\nGapped.propTypes = {\n  /**\r\n   * Расстояние между элементами.\r\n   */\n  gap: PropTypes.number,\n\n  /**\r\n   * Располагать элементы вертикально.\r\n   */\n  vertical: PropTypes.bool,\n\n  /**\r\n   * Вертикальное выравнивание элементов.\r\n   */\n  verticalAlign: PropTypes.oneOf(['top', 'middle', 'baseline', 'bottom'])\n};\nGapped.defaultProps = {\n  gap: 10,\n  wrap: false,\n  vertical: false,\n  verticalAlign: 'baseline'\n};","map":{"version":3,"sources":["C:/Users/ravka/Desktop/react-typescript-task/node_modules/@skbkontur/react-ui/components/Gapped/Gapped/Gapped.js"],"names":["_extends","_inheritsLoose","React","PropTypes","Gapped","_React$Component","apply","arguments","_proto","prototype","render","props","vertical","renderVertical","renderHorizontal","subsequentItemStyle","paddingTop","gap","isFirst","children","Children","map","child","style","undefined","createElement","_this$props","verticalAlign","wrap","itemStyle","display","marginLeft","marginTop","rootStyle","contStyle","whiteSpace","index","Component","__KONTUR_REACT_UI__","propTypes","number","bool","oneOf","defaultProps"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\n/**\r\n                                     * Контейнер, расстояние между элементами в котором равно `gap`.\r\n                                     */\n\nexport var Gapped =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(Gapped, _React$Component);\n\n  function Gapped() {\n    return _React$Component.apply(this, arguments) || this;\n  }\n\n  var _proto = Gapped.prototype;\n\n  _proto.render = function render() {\n    if (this.props.vertical) {\n      return this.renderVertical();\n    }\n\n    return this.renderHorizontal();\n  };\n\n  _proto.renderVertical = function renderVertical() {\n    var subsequentItemStyle = {\n      paddingTop: this.props.gap\n    };\n    var isFirst = true;\n    var children = React.Children.map(this.props.children, function (child) {\n      if (!child) {\n        return child;\n      }\n\n      var style = isFirst ? undefined : subsequentItemStyle;\n      isFirst = false;\n      return React.createElement(\"div\", {\n        style: style\n      }, child);\n    });\n    return React.createElement(\"div\", null, children);\n  };\n\n  _proto.renderHorizontal = function renderHorizontal() {\n    var _this$props = this.props,\n        gap = _this$props.gap,\n        children = _this$props.children,\n        verticalAlign = _this$props.verticalAlign,\n        wrap = _this$props.wrap;\n\n    var itemStyle = _extends({\n      display: 'inline-block',\n      verticalAlign: verticalAlign\n    }, wrap ? {\n      marginLeft: gap,\n      marginTop: gap\n    } : {});\n\n    var rootStyle = wrap ? {\n      paddingTop: 1\n    } : {};\n    var contStyle = wrap ? {\n      marginTop: -gap - 1,\n      marginLeft: -gap\n    } : {\n      whiteSpace: 'nowrap'\n    };\n    return React.createElement(\"div\", {\n      style: rootStyle\n    }, React.createElement(\"div\", {\n      style: contStyle\n    }, React.Children.map(children, function (child, index) {\n      if (!child) {\n        return child;\n      }\n\n      var marginLeft = index === 0 ? undefined : gap;\n      return React.createElement(\"span\", {\n        style: _extends({\n          marginLeft: marginLeft\n        }, itemStyle)\n      }, child);\n    })));\n  };\n\n  return Gapped;\n}(React.Component);\nGapped.__KONTUR_REACT_UI__ = 'Gapped';\nGapped.propTypes = {\n  /**\r\n   * Расстояние между элементами.\r\n   */\n  gap: PropTypes.number,\n\n  /**\r\n   * Располагать элементы вертикально.\r\n   */\n  vertical: PropTypes.bool,\n\n  /**\r\n   * Вертикальное выравнивание элементов.\r\n   */\n  verticalAlign: PropTypes.oneOf(['top', 'middle', 'baseline', 'bottom'])\n};\nGapped.defaultProps = {\n  gap: 10,\n  wrap: false,\n  vertical: false,\n  verticalAlign: 'baseline'\n};"]},"metadata":{},"sourceType":"module"}