{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { isKeyCapsLock } from \"../../../lib/events/keyboard/identifiers\";\nimport { KeyboardEventCodes as Codes } from \"../../../lib/events/keyboard/KeyboardEventCodes\";\nimport { Input } from \"../../Input\";\nimport { EyeClosedIcon, EyeOpenedIcon } from \"../../../internal/icons/16px\";\nimport { isIE11 } from \"../../../lib/utils\";\nimport { jsStyles } from \"../PasswordInput.styles\";\n/**\r\n                                                    * Компонент для ввода пароля\r\n                                                    */\n\nexport var PasswordInput = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(PasswordInput, _React$Component);\n\n  function PasswordInput() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;\n    _this.state = {\n      visible: false,\n      capsLockEnabled: false\n    };\n    _this.input = void 0;\n\n    _this.focus = function () {\n      if (_this.input) {\n        _this.input.focus();\n      }\n    };\n\n    _this.blur = function () {\n      _this.handleBlur();\n    };\n\n    _this.handleKeyPress = function (e) {\n      var _this$props = _this.props,\n          onKeyPress = _this$props.onKeyPress,\n          detectCapsLock = _this$props.detectCapsLock;\n\n      if (onKeyPress) {\n        onKeyPress(e);\n      }\n\n      if (!detectCapsLock) {\n        return;\n      }\n\n      var capsLockEnabled = e.getModifierState(Codes.CapsLock);\n\n      _this.setState({\n        capsLockEnabled: capsLockEnabled\n      });\n    };\n\n    _this.handleKeydown = function (e) {\n      var _assertThisInitialize = _assertThisInitialized(_this),\n          _assertThisInitialize2 = _assertThisInitialize.props,\n          detectCapsLock = _assertThisInitialize2.detectCapsLock,\n          onKeyDown = _assertThisInitialize2.onKeyDown,\n          capsLockEnabled = _assertThisInitialize.state.capsLockEnabled;\n\n      if (onKeyDown) {\n        onKeyDown(e);\n      }\n\n      if (!detectCapsLock) {\n        return;\n      }\n\n      if (isKeyCapsLock(e) && capsLockEnabled != null) {\n        _this.setState({\n          capsLockEnabled: !capsLockEnabled\n        });\n      }\n    };\n\n    _this.handleToggleVisibility = function () {\n      _this.setState(function (prevState) {\n        return {\n          visible: !prevState.visible\n        };\n      }, _this.handleFocus);\n    };\n\n    _this.handleFocus = function () {\n      if (_this.input) {\n        _this.input.focus();\n      }\n    };\n\n    _this.handleBlur = function () {\n      if (_this.input) {\n        _this.input.blur();\n      }\n    };\n\n    _this.renderEye = function () {\n      var capsLockEnabled = _this.state.capsLockEnabled;\n      return React.createElement(\"span\", {\n        className: jsStyles.iconWrapper()\n      }, capsLockEnabled && React.createElement(\"span\", {\n        className: jsStyles.capsLockDetector()\n      }), React.createElement(\"span\", {\n        \"data-tid\": \"PasswordInputEyeIcon\",\n        className: jsStyles.toggleVisibility(),\n        onClick: _this.handleToggleVisibility\n      }, _this.state.visible ? React.createElement(EyeOpenedIcon, {\n        size: 14\n      }) : React.createElement(EyeClosedIcon, {\n        size: 14\n      })));\n    };\n\n    _this.refInput = function (element) {\n      _this.input = element;\n    };\n\n    return _this;\n  }\n\n  var _proto = PasswordInput.prototype;\n\n  _proto.UNSAFE_componentWillMount = function UNSAFE_componentWillMount() {\n    if (this.props.detectCapsLock) {\n      this.setState({\n        capsLockEnabled: null\n      });\n    } // @ts-ignore\n\n\n    if (isIE11 && !window.document.msCapsLockWarningOff) {\n      // turns off default ie capslock warning\n      // @ts-ignore\n      window.document.msCapsLockWarningOff = true;\n    }\n  };\n\n  _proto.render = function render() {\n    return React.createElement(\"div\", {\n      className: jsStyles.root()\n    }, this.renderInput());\n  }\n  /**\r\n   * @public\r\n   */\n  ;\n\n  _proto.renderInput = function renderInput() {\n    var _this$props2 = this.props,\n        detectCapsLock = _this$props2.detectCapsLock,\n        props = _objectWithoutPropertiesLoose(_this$props2, [\"detectCapsLock\"]);\n\n    var inputProps = _extends({}, props, {\n      onKeyDown: this.handleKeydown,\n      onKeyPress: this.handleKeyPress,\n      rightIcon: this.renderEye()\n    });\n\n    return React.createElement(Input, _extends({\n      ref: this.refInput,\n      type: this.state.visible ? 'text' : 'password'\n    }, inputProps));\n  };\n\n  return PasswordInput;\n}(React.Component);\nPasswordInput.__KONTUR_REACT_UI__ = 'PasswordInput';\nPasswordInput.propTypes = {\n  /**\r\n   * Включает CapsLock детектор\r\n   */\n  detectCapsLock: PropTypes.bool\n};\nPasswordInput.defaultProps = {\n  size: 'small'\n};","map":{"version":3,"sources":["C:/Users/ravka/Desktop/react-typescript-task/node_modules/@skbkontur/react-ui/components/PasswordInput/PasswordInput/PasswordInput.js"],"names":["_extends","_objectWithoutPropertiesLoose","_assertThisInitialized","_inheritsLoose","React","PropTypes","isKeyCapsLock","KeyboardEventCodes","Codes","Input","EyeClosedIcon","EyeOpenedIcon","isIE11","jsStyles","PasswordInput","_React$Component","_this","_len","arguments","length","args","Array","_key","call","apply","concat","state","visible","capsLockEnabled","input","focus","blur","handleBlur","handleKeyPress","e","_this$props","props","onKeyPress","detectCapsLock","getModifierState","CapsLock","setState","handleKeydown","_assertThisInitialize","_assertThisInitialize2","onKeyDown","handleToggleVisibility","prevState","handleFocus","renderEye","createElement","className","iconWrapper","capsLockDetector","toggleVisibility","onClick","size","refInput","element","_proto","prototype","UNSAFE_componentWillMount","window","document","msCapsLockWarningOff","render","root","renderInput","_this$props2","inputProps","rightIcon","ref","type","Component","__KONTUR_REACT_UI__","propTypes","bool","defaultProps"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { isKeyCapsLock } from \"../../../lib/events/keyboard/identifiers\";\nimport { KeyboardEventCodes as Codes } from \"../../../lib/events/keyboard/KeyboardEventCodes\";\nimport { Input } from \"../../Input\";\nimport { EyeClosedIcon, EyeOpenedIcon } from \"../../../internal/icons/16px\";\nimport { isIE11 } from \"../../../lib/utils\";\nimport { jsStyles } from \"../PasswordInput.styles\";\n/**\r\n                                                    * Компонент для ввода пароля\r\n                                                    */\n\nexport var PasswordInput =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(PasswordInput, _React$Component);\n\n  function PasswordInput() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;\n    _this.state = {\n      visible: false,\n      capsLockEnabled: false\n    };\n    _this.input = void 0;\n\n    _this.focus = function () {\n      if (_this.input) {\n        _this.input.focus();\n      }\n    };\n\n    _this.blur = function () {\n      _this.handleBlur();\n    };\n\n    _this.handleKeyPress = function (e) {\n      var _this$props = _this.props,\n          onKeyPress = _this$props.onKeyPress,\n          detectCapsLock = _this$props.detectCapsLock;\n\n      if (onKeyPress) {\n        onKeyPress(e);\n      }\n\n      if (!detectCapsLock) {\n        return;\n      }\n\n      var capsLockEnabled = e.getModifierState(Codes.CapsLock);\n\n      _this.setState({\n        capsLockEnabled: capsLockEnabled\n      });\n    };\n\n    _this.handleKeydown = function (e) {\n      var _assertThisInitialize = _assertThisInitialized(_this),\n          _assertThisInitialize2 = _assertThisInitialize.props,\n          detectCapsLock = _assertThisInitialize2.detectCapsLock,\n          onKeyDown = _assertThisInitialize2.onKeyDown,\n          capsLockEnabled = _assertThisInitialize.state.capsLockEnabled;\n\n      if (onKeyDown) {\n        onKeyDown(e);\n      }\n\n      if (!detectCapsLock) {\n        return;\n      }\n\n      if (isKeyCapsLock(e) && capsLockEnabled != null) {\n        _this.setState({\n          capsLockEnabled: !capsLockEnabled\n        });\n      }\n    };\n\n    _this.handleToggleVisibility = function () {\n      _this.setState(function (prevState) {\n        return {\n          visible: !prevState.visible\n        };\n      }, _this.handleFocus);\n    };\n\n    _this.handleFocus = function () {\n      if (_this.input) {\n        _this.input.focus();\n      }\n    };\n\n    _this.handleBlur = function () {\n      if (_this.input) {\n        _this.input.blur();\n      }\n    };\n\n    _this.renderEye = function () {\n      var capsLockEnabled = _this.state.capsLockEnabled;\n      return React.createElement(\"span\", {\n        className: jsStyles.iconWrapper()\n      }, capsLockEnabled && React.createElement(\"span\", {\n        className: jsStyles.capsLockDetector()\n      }), React.createElement(\"span\", {\n        \"data-tid\": \"PasswordInputEyeIcon\",\n        className: jsStyles.toggleVisibility(),\n        onClick: _this.handleToggleVisibility\n      }, _this.state.visible ? React.createElement(EyeOpenedIcon, {\n        size: 14\n      }) : React.createElement(EyeClosedIcon, {\n        size: 14\n      })));\n    };\n\n    _this.refInput = function (element) {\n      _this.input = element;\n    };\n\n    return _this;\n  }\n\n  var _proto = PasswordInput.prototype;\n\n  _proto.UNSAFE_componentWillMount = function UNSAFE_componentWillMount() {\n    if (this.props.detectCapsLock) {\n      this.setState({\n        capsLockEnabled: null\n      });\n    } // @ts-ignore\n\n\n    if (isIE11 && !window.document.msCapsLockWarningOff) {\n      // turns off default ie capslock warning\n      // @ts-ignore\n      window.document.msCapsLockWarningOff = true;\n    }\n  };\n\n  _proto.render = function render() {\n    return React.createElement(\"div\", {\n      className: jsStyles.root()\n    }, this.renderInput());\n  }\n  /**\r\n   * @public\r\n   */\n  ;\n\n  _proto.renderInput = function renderInput() {\n    var _this$props2 = this.props,\n        detectCapsLock = _this$props2.detectCapsLock,\n        props = _objectWithoutPropertiesLoose(_this$props2, [\"detectCapsLock\"]);\n\n    var inputProps = _extends({}, props, {\n      onKeyDown: this.handleKeydown,\n      onKeyPress: this.handleKeyPress,\n      rightIcon: this.renderEye()\n    });\n\n    return React.createElement(Input, _extends({\n      ref: this.refInput,\n      type: this.state.visible ? 'text' : 'password'\n    }, inputProps));\n  };\n\n  return PasswordInput;\n}(React.Component);\nPasswordInput.__KONTUR_REACT_UI__ = 'PasswordInput';\nPasswordInput.propTypes = {\n  /**\r\n   * Включает CapsLock детектор\r\n   */\n  detectCapsLock: PropTypes.bool\n};\nPasswordInput.defaultProps = {\n  size: 'small'\n};"]},"metadata":{},"sourceType":"module"}