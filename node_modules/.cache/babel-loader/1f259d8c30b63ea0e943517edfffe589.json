{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ravka\\\\Desktop\\\\react-typescript-task\\\\src\\\\components\\\\VehicleTypeSelect.tsx\";\nimport React from \"react\";\nimport { vehicleTypes, vehicleTypeTitles } from \"../data/vehicles/contracts\";\nimport { Select } from \"@skbkontur/react-ui\";\nconst items = [[-1, \"Все\"], Select.SEP(), ...vehicleTypes.map(x => [x, vehicleTypeTitles[x]])];\nexport const VehicleTypeSelect = ({\n  value,\n  onChange\n}) => {\n  return /*#__PURE__*/React.createElement(Select, {\n    items: items,\n    value: value != null ? value : -1,\n    onValueChange: x => onChange(x === -1 ? null : x),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }\n  });\n};","map":{"version":3,"sources":["C:/Users/ravka/Desktop/react-typescript-task/src/components/VehicleTypeSelect.tsx"],"names":["React","vehicleTypes","vehicleTypeTitles","Select","items","SEP","map","x","VehicleTypeSelect","value","onChange"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAEEC,YAFF,EAGEC,iBAHF,QAIO,4BAJP;AAKA,SAASC,MAAT,QAAuB,qBAAvB;AAOA,MAAMC,KAAmC,GAAG,CAC1C,CAAC,CAAC,CAAF,EAAoB,KAApB,CAD0C,EAE1CD,MAAM,CAACE,GAAP,EAF0C,EAG1C,GAAGJ,YAAY,CAACK,GAAb,CAAyCC,CAAD,IAAO,CAACA,CAAD,EAAIL,iBAAiB,CAACK,CAAD,CAArB,CAA/C,CAHuC,CAA5C;AAMA,OAAO,MAAMC,iBAAmD,GAAG,CAAC;AAClEC,EAAAA,KADkE;AAElEC,EAAAA;AAFkE,CAAD,KAG7D;AACJ,sBACE,oBAAC,MAAD;AACE,IAAA,KAAK,EAAEN,KADT;AAEE,IAAA,KAAK,EAAEK,KAAK,IAAI,IAAT,GAAgBA,KAAhB,GAAyB,CAAC,CAFnC;AAGE,IAAA,aAAa,EAAGF,CAAD,IAAYG,QAAQ,CAACH,CAAC,KAAK,CAAC,CAAP,GAAW,IAAX,GAAkBA,CAAnB,CAHrC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAOD,CAXM","sourcesContent":["import React from \"react\";\nimport {\n  VehicleType,\n  vehicleTypes,\n  vehicleTypeTitles,\n} from \"../data/vehicles/contracts\";\nimport { Select } from \"@skbkontur/react-ui\";\n\nexport interface VehicleTypeSelectProps {\n  value: VehicleType | null;\n  onChange: (value: VehicleType | null) => void;\n}\n\nconst items: Array<[VehicleType, string]> = [\n  [-1 as VehicleType, \"Все\"],\n  Select.SEP() as any,\n  ...vehicleTypes.map<[VehicleType, string]>((x) => [x, vehicleTypeTitles[x]]),\n];\n\nexport const VehicleTypeSelect: React.FC<VehicleTypeSelectProps> = ({\n  value,\n  onChange,\n}) => {\n  return (\n    <Select\n      items={items}\n      value={value != null ? value : (-1 as VehicleType)}\n      onValueChange={(x: any) => onChange(x === -1 ? null : x)}\n    />\n  );\n};\n"]},"metadata":{},"sourceType":"module"}