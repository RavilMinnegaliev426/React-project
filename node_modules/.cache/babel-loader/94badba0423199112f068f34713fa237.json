{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { CHAR_PAD, defaultDateComponentsOrder, defaultDateComponentsSeparator, emptyDateComponents, LENGTH_DATE, LENGTH_MONTH, LENGTH_SEPARATOR, LENGTH_YEAR, RE_ORDER_DMY, RE_ORDER_MDY, RE_ORDER_YMD } from \"../constants\";\nimport { InternalDateValidator } from \"../InternalDateValidator\";\nimport { InternalDateComponentType, InternalDateOrder, InternalDateSeparator } from \"../types\";\nexport var InternalDateTransformer = /*#__PURE__*/function () {\n  function InternalDateTransformer() {}\n\n  InternalDateTransformer.dateToFragments = function dateToFragments(components, settings) {\n    if (settings === void 0) {\n      settings = {};\n    }\n\n    var _settings = settings,\n        _settings$order = _settings.order,\n        order = _settings$order === void 0 ? defaultDateComponentsOrder : _settings$order,\n        _settings$separator = _settings.separator,\n        separator = _settings$separator === void 0 ? defaultDateComponentsSeparator : _settings$separator,\n        _settings$withSeparat = _settings.withSeparator,\n        withSeparator = _settings$withSeparat === void 0 ? false : _settings$withSeparat,\n        _settings$withPad = _settings.withPad,\n        withPad = _settings$withPad === void 0 ? false : _settings$withPad,\n        pad = _settings.pad;\n    var year = {\n      type: InternalDateComponentType.Year,\n      value: components.year,\n      length: LENGTH_YEAR\n    };\n    var month = {\n      type: InternalDateComponentType.Month,\n      value: components.month,\n      length: LENGTH_MONTH\n    };\n    var date = {\n      type: InternalDateComponentType.Date,\n      value: components.date,\n      length: LENGTH_DATE\n    };\n    var fragments = [];\n\n    if (order === InternalDateOrder.YMD) {\n      fragments.push(year, month, date);\n    } else if (order === InternalDateOrder.MDY) {\n      fragments.push(month, date, year);\n    } else if (order === InternalDateOrder.DMY) {\n      fragments.push(date, month, year);\n    }\n\n    if (withPad) {\n      year.valueWithPad = InternalDateTransformer.padYear(year.value, pad);\n      month.valueWithPad = InternalDateTransformer.padMonth(month.value, pad);\n      date.valueWithPad = InternalDateTransformer.padDate(date.value, pad);\n    }\n\n    year.isValid = InternalDateValidator.testParseToNumber(year.value);\n    month.isValid = InternalDateValidator.testParseToNumber(month.value);\n    date.isValid = InternalDateValidator.testParseToNumber(date.value);\n\n    if (withSeparator) {\n      var separatorFragment = {\n        type: InternalDateComponentType.Separator,\n        value: separator,\n        length: LENGTH_SEPARATOR\n      };\n      fragments.splice(1, 0, separatorFragment);\n      fragments.splice(3, 0, separatorFragment);\n    }\n\n    return fragments;\n  };\n\n  InternalDateTransformer.parseValueToDate = function parseValueToDate(value, order) {\n    if (order === void 0) {\n      order = defaultDateComponentsOrder;\n    }\n\n    if (!value) {\n      return null;\n    }\n\n    var re = order === InternalDateOrder.MDY ? RE_ORDER_MDY : order === InternalDateOrder.DMY ? RE_ORDER_DMY : RE_ORDER_YMD;\n\n    if (!re.test(value)) {\n      return null;\n    }\n\n    var match = re.exec(value);\n\n    var dateComponents = _extends({}, emptyDateComponents);\n\n    if (match) {\n      var matchFinished = match.slice(1).map(function (item) {\n        return InternalDateValidator.testParseToNumber(item) ? Number(item) : null;\n      });\n\n      if (order === InternalDateOrder.YMD) {\n        dateComponents.year = matchFinished[0];\n        dateComponents.month = matchFinished[1];\n        dateComponents.date = matchFinished[2];\n      } else if (order === InternalDateOrder.MDY) {\n        dateComponents.year = matchFinished[2];\n        dateComponents.month = matchFinished[0];\n        dateComponents.date = matchFinished[1];\n      } else if (order === InternalDateOrder.DMY) {\n        dateComponents.year = matchFinished[2];\n        dateComponents.month = matchFinished[1];\n        dateComponents.date = matchFinished[0];\n      }\n    }\n\n    return dateComponents;\n  };\n\n  InternalDateTransformer.dateComponentsStringToNumber = function dateComponentsStringToNumber(componentsRaw) {\n    if (componentsRaw === null) {\n      return {\n        year: 0,\n        month: 0,\n        date: 0\n      };\n    }\n\n    var year = componentsRaw.year,\n        month = componentsRaw.month,\n        date = componentsRaw.date;\n    return {\n      year: Number(year),\n      month: Number(month),\n      date: Number(date)\n    };\n  };\n\n  InternalDateTransformer.dateToInternalString = function dateToInternalString(components) {\n    return InternalDateTransformer.dateToFragments(components, {\n      withPad: true,\n      withSeparator: false,\n      order: InternalDateOrder.DMY\n    }).filter(function (_ref) {\n      var value = _ref.value;\n      return value !== null;\n    }).map(function (_ref2) {\n      var valueWithPad = _ref2.valueWithPad;\n      return valueWithPad;\n    }).join(InternalDateSeparator.Dot);\n  };\n\n  return InternalDateTransformer;\n}();\n\nInternalDateTransformer.padStart = function (value, length, pad) {\n  if (pad === void 0) {\n    pad = CHAR_PAD;\n  }\n\n  return String(value || '').padStart(length, pad);\n};\n\nInternalDateTransformer.padYear = function (year, pad) {\n  return InternalDateTransformer.padStart(year, LENGTH_YEAR, pad);\n};\n\nInternalDateTransformer.padMonth = function (month, pad) {\n  return InternalDateTransformer.padStart(month, LENGTH_MONTH, pad);\n};\n\nInternalDateTransformer.padDate = function (date, pad) {\n  return InternalDateTransformer.padStart(date, LENGTH_DATE, pad);\n};\n\nInternalDateTransformer.padDateComponent = function (type, value, pad) {\n  if (type === InternalDateComponentType.Year) {\n    return InternalDateTransformer.padYear(value, pad);\n  } else if (type === InternalDateComponentType.Month) {\n    return InternalDateTransformer.padMonth(value, pad);\n  } else if (type === InternalDateComponentType.Date) {\n    return InternalDateTransformer.padDate(value, pad);\n  }\n\n  return '';\n};","map":{"version":3,"sources":["C:/Users/ravka/Desktop/react-typescript-task/node_modules/@skbkontur/react-ui/lib/date/InternalDateTransformer/InternalDateTransformer.js"],"names":["_extends","CHAR_PAD","defaultDateComponentsOrder","defaultDateComponentsSeparator","emptyDateComponents","LENGTH_DATE","LENGTH_MONTH","LENGTH_SEPARATOR","LENGTH_YEAR","RE_ORDER_DMY","RE_ORDER_MDY","RE_ORDER_YMD","InternalDateValidator","InternalDateComponentType","InternalDateOrder","InternalDateSeparator","InternalDateTransformer","dateToFragments","components","settings","_settings","_settings$order","order","_settings$separator","separator","_settings$withSeparat","withSeparator","_settings$withPad","withPad","pad","year","type","Year","value","length","month","Month","date","Date","fragments","YMD","push","MDY","DMY","valueWithPad","padYear","padMonth","padDate","isValid","testParseToNumber","separatorFragment","Separator","splice","parseValueToDate","re","test","match","exec","dateComponents","matchFinished","slice","map","item","Number","dateComponentsStringToNumber","componentsRaw","dateToInternalString","filter","_ref","_ref2","join","Dot","padStart","String","padDateComponent"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { CHAR_PAD, defaultDateComponentsOrder, defaultDateComponentsSeparator, emptyDateComponents, LENGTH_DATE, LENGTH_MONTH, LENGTH_SEPARATOR, LENGTH_YEAR, RE_ORDER_DMY, RE_ORDER_MDY, RE_ORDER_YMD } from \"../constants\";\nimport { InternalDateValidator } from \"../InternalDateValidator\";\nimport { InternalDateComponentType, InternalDateOrder, InternalDateSeparator } from \"../types\";\nexport var InternalDateTransformer =\n/*#__PURE__*/\nfunction () {\n  function InternalDateTransformer() {}\n\n  InternalDateTransformer.dateToFragments = function dateToFragments(components, settings) {\n    if (settings === void 0) {\n      settings = {};\n    }\n\n    var _settings = settings,\n        _settings$order = _settings.order,\n        order = _settings$order === void 0 ? defaultDateComponentsOrder : _settings$order,\n        _settings$separator = _settings.separator,\n        separator = _settings$separator === void 0 ? defaultDateComponentsSeparator : _settings$separator,\n        _settings$withSeparat = _settings.withSeparator,\n        withSeparator = _settings$withSeparat === void 0 ? false : _settings$withSeparat,\n        _settings$withPad = _settings.withPad,\n        withPad = _settings$withPad === void 0 ? false : _settings$withPad,\n        pad = _settings.pad;\n    var year = {\n      type: InternalDateComponentType.Year,\n      value: components.year,\n      length: LENGTH_YEAR\n    };\n    var month = {\n      type: InternalDateComponentType.Month,\n      value: components.month,\n      length: LENGTH_MONTH\n    };\n    var date = {\n      type: InternalDateComponentType.Date,\n      value: components.date,\n      length: LENGTH_DATE\n    };\n    var fragments = [];\n\n    if (order === InternalDateOrder.YMD) {\n      fragments.push(year, month, date);\n    } else if (order === InternalDateOrder.MDY) {\n      fragments.push(month, date, year);\n    } else if (order === InternalDateOrder.DMY) {\n      fragments.push(date, month, year);\n    }\n\n    if (withPad) {\n      year.valueWithPad = InternalDateTransformer.padYear(year.value, pad);\n      month.valueWithPad = InternalDateTransformer.padMonth(month.value, pad);\n      date.valueWithPad = InternalDateTransformer.padDate(date.value, pad);\n    }\n\n    year.isValid = InternalDateValidator.testParseToNumber(year.value);\n    month.isValid = InternalDateValidator.testParseToNumber(month.value);\n    date.isValid = InternalDateValidator.testParseToNumber(date.value);\n\n    if (withSeparator) {\n      var separatorFragment = {\n        type: InternalDateComponentType.Separator,\n        value: separator,\n        length: LENGTH_SEPARATOR\n      };\n      fragments.splice(1, 0, separatorFragment);\n      fragments.splice(3, 0, separatorFragment);\n    }\n\n    return fragments;\n  };\n\n  InternalDateTransformer.parseValueToDate = function parseValueToDate(value, order) {\n    if (order === void 0) {\n      order = defaultDateComponentsOrder;\n    }\n\n    if (!value) {\n      return null;\n    }\n\n    var re = order === InternalDateOrder.MDY ? RE_ORDER_MDY : order === InternalDateOrder.DMY ? RE_ORDER_DMY : RE_ORDER_YMD;\n\n    if (!re.test(value)) {\n      return null;\n    }\n\n    var match = re.exec(value);\n\n    var dateComponents = _extends({}, emptyDateComponents);\n\n    if (match) {\n      var matchFinished = match.slice(1).map(function (item) {\n        return InternalDateValidator.testParseToNumber(item) ? Number(item) : null;\n      });\n\n      if (order === InternalDateOrder.YMD) {\n        dateComponents.year = matchFinished[0];\n        dateComponents.month = matchFinished[1];\n        dateComponents.date = matchFinished[2];\n      } else if (order === InternalDateOrder.MDY) {\n        dateComponents.year = matchFinished[2];\n        dateComponents.month = matchFinished[0];\n        dateComponents.date = matchFinished[1];\n      } else if (order === InternalDateOrder.DMY) {\n        dateComponents.year = matchFinished[2];\n        dateComponents.month = matchFinished[1];\n        dateComponents.date = matchFinished[0];\n      }\n    }\n\n    return dateComponents;\n  };\n\n  InternalDateTransformer.dateComponentsStringToNumber = function dateComponentsStringToNumber(componentsRaw) {\n    if (componentsRaw === null) {\n      return {\n        year: 0,\n        month: 0,\n        date: 0\n      };\n    }\n\n    var year = componentsRaw.year,\n        month = componentsRaw.month,\n        date = componentsRaw.date;\n    return {\n      year: Number(year),\n      month: Number(month),\n      date: Number(date)\n    };\n  };\n\n  InternalDateTransformer.dateToInternalString = function dateToInternalString(components) {\n    return InternalDateTransformer.dateToFragments(components, {\n      withPad: true,\n      withSeparator: false,\n      order: InternalDateOrder.DMY\n    }).filter(function (_ref) {\n      var value = _ref.value;\n      return value !== null;\n    }).map(function (_ref2) {\n      var valueWithPad = _ref2.valueWithPad;\n      return valueWithPad;\n    }).join(InternalDateSeparator.Dot);\n  };\n\n  return InternalDateTransformer;\n}();\n\nInternalDateTransformer.padStart = function (value, length, pad) {\n  if (pad === void 0) {\n    pad = CHAR_PAD;\n  }\n\n  return String(value || '').padStart(length, pad);\n};\n\nInternalDateTransformer.padYear = function (year, pad) {\n  return InternalDateTransformer.padStart(year, LENGTH_YEAR, pad);\n};\n\nInternalDateTransformer.padMonth = function (month, pad) {\n  return InternalDateTransformer.padStart(month, LENGTH_MONTH, pad);\n};\n\nInternalDateTransformer.padDate = function (date, pad) {\n  return InternalDateTransformer.padStart(date, LENGTH_DATE, pad);\n};\n\nInternalDateTransformer.padDateComponent = function (type, value, pad) {\n  if (type === InternalDateComponentType.Year) {\n    return InternalDateTransformer.padYear(value, pad);\n  } else if (type === InternalDateComponentType.Month) {\n    return InternalDateTransformer.padMonth(value, pad);\n  } else if (type === InternalDateComponentType.Date) {\n    return InternalDateTransformer.padDate(value, pad);\n  }\n\n  return '';\n};"]},"metadata":{},"sourceType":"module"}