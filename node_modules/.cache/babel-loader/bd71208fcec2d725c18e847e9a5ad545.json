{"ast":null,"code":"import requestAnimationFrame, { cancel as cancelAnimationFrame } from 'raf';\nimport { stepper } from \"../stepper\";\n\nvar noop = function noop() {\n  /* do nothing */\n};\n\nexport var Animation = function Animation() {\n  var animating = false;\n  var currentPosition = 0;\n  var currentVelocity = 0;\n  var rafId = 0;\n  var target = 0;\n  var deltaHandler = noop;\n  var animationEndHandler = noop;\n\n  function reset() {\n    currentVelocity = 0;\n    currentPosition = 0;\n    target = 0;\n    animating = false;\n    deltaHandler = noop;\n    animationEndHandler = noop;\n  }\n\n  function inProgress() {\n    return animating;\n  }\n\n  function cancel() {\n    cancelAnimationFrame(rafId);\n    reset();\n  }\n\n  function finish() {\n    animationEndHandler();\n    cancel();\n  }\n\n  function animate(amount, onDelta, onEnd) {\n    if (onEnd === void 0) {\n      onEnd = noop;\n    }\n\n    target += amount;\n    deltaHandler = onDelta;\n    animationEndHandler = onEnd;\n\n    var animateInternal = function animateInternal() {\n      animating = true;\n\n      var _stepper = stepper(currentPosition, currentVelocity, target),\n          nextPosition = _stepper[0],\n          nextVelocity = _stepper[1];\n\n      var delta = nextPosition - currentPosition;\n      deltaHandler(delta);\n\n      if (nextPosition === target && nextVelocity === 0) {\n        animationEndHandler();\n        reset();\n        return;\n      }\n\n      currentPosition = nextPosition;\n      currentVelocity = nextVelocity;\n      rafId = requestAnimationFrame(animateInternal);\n    };\n\n    if (!inProgress()) {\n      animateInternal();\n    }\n  }\n\n  return {\n    animate: animate,\n    inProgress: inProgress,\n    cancel: cancel,\n    finish: finish\n  };\n};","map":{"version":3,"sources":["C:/Users/ravka/Desktop/react-typescript-task/node_modules/@skbkontur/react-ui/lib/animation/index/index.js"],"names":["requestAnimationFrame","cancel","cancelAnimationFrame","stepper","noop","Animation","animating","currentPosition","currentVelocity","rafId","target","deltaHandler","animationEndHandler","reset","inProgress","finish","animate","amount","onDelta","onEnd","animateInternal","_stepper","nextPosition","nextVelocity","delta"],"mappings":"AAAA,OAAOA,qBAAP,IAAgCC,MAAM,IAAIC,oBAA1C,QAAsE,KAAtE;AACA,SAASC,OAAT,QAAwB,YAAxB;;AAEA,IAAIC,IAAI,GAAG,SAASA,IAAT,GAAgB;AACzB;AACD,CAFD;;AAIA,OAAO,IAAIC,SAAS,GAAG,SAASA,SAAT,GAAqB;AAC1C,MAAIC,SAAS,GAAG,KAAhB;AACA,MAAIC,eAAe,GAAG,CAAtB;AACA,MAAIC,eAAe,GAAG,CAAtB;AACA,MAAIC,KAAK,GAAG,CAAZ;AACA,MAAIC,MAAM,GAAG,CAAb;AACA,MAAIC,YAAY,GAAGP,IAAnB;AACA,MAAIQ,mBAAmB,GAAGR,IAA1B;;AAEA,WAASS,KAAT,GAAiB;AACfL,IAAAA,eAAe,GAAG,CAAlB;AACAD,IAAAA,eAAe,GAAG,CAAlB;AACAG,IAAAA,MAAM,GAAG,CAAT;AACAJ,IAAAA,SAAS,GAAG,KAAZ;AACAK,IAAAA,YAAY,GAAGP,IAAf;AACAQ,IAAAA,mBAAmB,GAAGR,IAAtB;AACD;;AAED,WAASU,UAAT,GAAsB;AACpB,WAAOR,SAAP;AACD;;AAED,WAASL,MAAT,GAAkB;AAChBC,IAAAA,oBAAoB,CAACO,KAAD,CAApB;AACAI,IAAAA,KAAK;AACN;;AAED,WAASE,MAAT,GAAkB;AAChBH,IAAAA,mBAAmB;AACnBX,IAAAA,MAAM;AACP;;AAED,WAASe,OAAT,CAAiBC,MAAjB,EAAyBC,OAAzB,EAAkCC,KAAlC,EAAyC;AACvC,QAAIA,KAAK,KAAK,KAAK,CAAnB,EAAsB;AACpBA,MAAAA,KAAK,GAAGf,IAAR;AACD;;AAEDM,IAAAA,MAAM,IAAIO,MAAV;AACAN,IAAAA,YAAY,GAAGO,OAAf;AACAN,IAAAA,mBAAmB,GAAGO,KAAtB;;AAEA,QAAIC,eAAe,GAAG,SAASA,eAAT,GAA2B;AAC/Cd,MAAAA,SAAS,GAAG,IAAZ;;AAEA,UAAIe,QAAQ,GAAGlB,OAAO,CAACI,eAAD,EAAkBC,eAAlB,EAAmCE,MAAnC,CAAtB;AAAA,UACIY,YAAY,GAAGD,QAAQ,CAAC,CAAD,CAD3B;AAAA,UAEIE,YAAY,GAAGF,QAAQ,CAAC,CAAD,CAF3B;;AAIA,UAAIG,KAAK,GAAGF,YAAY,GAAGf,eAA3B;AACAI,MAAAA,YAAY,CAACa,KAAD,CAAZ;;AAEA,UAAIF,YAAY,KAAKZ,MAAjB,IAA2Ba,YAAY,KAAK,CAAhD,EAAmD;AACjDX,QAAAA,mBAAmB;AACnBC,QAAAA,KAAK;AACL;AACD;;AAEDN,MAAAA,eAAe,GAAGe,YAAlB;AACAd,MAAAA,eAAe,GAAGe,YAAlB;AACAd,MAAAA,KAAK,GAAGT,qBAAqB,CAACoB,eAAD,CAA7B;AACD,KAnBD;;AAqBA,QAAI,CAACN,UAAU,EAAf,EAAmB;AACjBM,MAAAA,eAAe;AAChB;AACF;;AAED,SAAO;AACLJ,IAAAA,OAAO,EAAEA,OADJ;AAELF,IAAAA,UAAU,EAAEA,UAFP;AAGLb,IAAAA,MAAM,EAAEA,MAHH;AAILc,IAAAA,MAAM,EAAEA;AAJH,GAAP;AAMD,CAzEM","sourcesContent":["import requestAnimationFrame, { cancel as cancelAnimationFrame } from 'raf';\nimport { stepper } from \"../stepper\";\n\nvar noop = function noop() {\n  /* do nothing */\n};\n\nexport var Animation = function Animation() {\n  var animating = false;\n  var currentPosition = 0;\n  var currentVelocity = 0;\n  var rafId = 0;\n  var target = 0;\n  var deltaHandler = noop;\n  var animationEndHandler = noop;\n\n  function reset() {\n    currentVelocity = 0;\n    currentPosition = 0;\n    target = 0;\n    animating = false;\n    deltaHandler = noop;\n    animationEndHandler = noop;\n  }\n\n  function inProgress() {\n    return animating;\n  }\n\n  function cancel() {\n    cancelAnimationFrame(rafId);\n    reset();\n  }\n\n  function finish() {\n    animationEndHandler();\n    cancel();\n  }\n\n  function animate(amount, onDelta, onEnd) {\n    if (onEnd === void 0) {\n      onEnd = noop;\n    }\n\n    target += amount;\n    deltaHandler = onDelta;\n    animationEndHandler = onEnd;\n\n    var animateInternal = function animateInternal() {\n      animating = true;\n\n      var _stepper = stepper(currentPosition, currentVelocity, target),\n          nextPosition = _stepper[0],\n          nextVelocity = _stepper[1];\n\n      var delta = nextPosition - currentPosition;\n      deltaHandler(delta);\n\n      if (nextPosition === target && nextVelocity === 0) {\n        animationEndHandler();\n        reset();\n        return;\n      }\n\n      currentPosition = nextPosition;\n      currentVelocity = nextVelocity;\n      rafId = requestAnimationFrame(animateInternal);\n    };\n\n    if (!inProgress()) {\n      animateInternal();\n    }\n  }\n\n  return {\n    animate: animate,\n    inProgress: inProgress,\n    cancel: cancel,\n    finish: finish\n  };\n};"]},"metadata":{},"sourceType":"module"}