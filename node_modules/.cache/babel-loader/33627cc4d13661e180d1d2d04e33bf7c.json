{"ast":null,"code":"import { clamp, floatFromPercent } from \"../ColorHelpers\";\nimport { ColorFactory } from \"../ColorFactory\";\nvar DEFAULT_DARK = ColorFactory.create('#000');\nvar DEFAULT_LIGHT = ColorFactory.create('#fff');\nvar ColorFunctionsCache = Object.create(null);\n\nvar buildCacheKey = function buildCacheKey(name) {\n  for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    args[_key - 1] = arguments[_key];\n  }\n\n  return name + \"(\" + args.join() + \")\";\n};\n\nvar shiftColor = function shiftColor(colorString, a, sign, method) {\n  if (!colorString) {\n    return '';\n  }\n\n  if (colorString.toLowerCase() === 'transparent') {\n    return 'transparent';\n  }\n\n  var amount;\n\n  if (typeof a === 'string') {\n    amount = a.endsWith('%') ? floatFromPercent(a) : parseFloat(a);\n  } else {\n    amount = a;\n  }\n\n  amount = clamp(amount, 1);\n  var color = ColorFactory.create(colorString);\n  var hsl = color.toHSL();\n\n  if (sign === '+') {\n    hsl.l += method === 'relative' ? hsl.l * amount : amount;\n  } else {\n    hsl.l -= method === 'relative' ? hsl.l * amount : amount;\n  }\n\n  hsl.l = clamp(hsl.l);\n  var newColor;\n\n  if (color.alpha < 1) {\n    newColor = ColorFactory.create(\"hsla(\" + hsl.h + \", \" + hsl.s + \", \" + hsl.l + \", \" + hsl.a + \")\");\n  } else {\n    newColor = ColorFactory.create(\"hsl(\" + hsl.h + \", \" + hsl.s + \", \" + hsl.l + \")\");\n  }\n\n  return newColor.toColorString(color.type);\n};\n\nexport function lighten(colorString, amount, method) {\n  var key = buildCacheKey('lighten', colorString, amount, method);\n\n  if (ColorFunctionsCache[key] === undefined) {\n    ColorFunctionsCache[key] = shiftColor(colorString, amount, '+', method);\n    return ColorFunctionsCache[key];\n  }\n\n  return ColorFunctionsCache[key];\n}\nexport function darken(colorString, amount, method) {\n  var key = buildCacheKey('darken', colorString, amount, method);\n\n  if (ColorFunctionsCache[key] === undefined) {\n    ColorFunctionsCache[key] = shiftColor(colorString, amount, '-', method);\n    return ColorFunctionsCache[key];\n  }\n\n  return ColorFunctionsCache[key];\n}\nexport function contrast(colorString, darkString, lightString, threshold) {\n  if (threshold === void 0) {\n    threshold = 0.43;\n  }\n\n  var key = buildCacheKey('contrast', colorString, darkString, lightString, threshold);\n\n  if (!colorString) {\n    ColorFunctionsCache[key] = '';\n  }\n\n  if (ColorFunctionsCache[key] === undefined) {\n    var color = ColorFactory.create(colorString);\n    var dark = typeof darkString === 'undefined' ? DEFAULT_DARK : ColorFactory.create(darkString);\n    var light = typeof lightString === 'undefined' ? DEFAULT_LIGHT : ColorFactory.create(lightString); // Figure out which is actually light and dark:\n\n    if (dark.luma() > light.luma()) {\n      var _ref = [light, dark];\n      dark = _ref[0];\n      light = _ref[1];\n    }\n\n    if (color.luma() < threshold) {\n      ColorFunctionsCache[key] = light.alpha < 1 ? light.toRGBString() : light.toHEXString();\n    } else {\n      ColorFunctionsCache[key] = dark.alpha < 1 ? dark.toRGBString() : dark.toHEXString();\n    }\n  }\n\n  return ColorFunctionsCache[key];\n}\nexport var red = function red(colorString) {\n  var color = ColorFactory.create(colorString);\n  return color.rgb[0];\n};\nexport var green = function green(colorString) {\n  var color = ColorFactory.create(colorString);\n  return color.rgb[1];\n};\nexport var blue = function blue(colorString) {\n  var color = ColorFactory.create(colorString);\n  return color.rgb[2];\n};\nexport var alpha = function alpha(colorString) {\n  var color = ColorFactory.create(colorString);\n  return color.alpha;\n};\nexport var isValid = function isValid(colorString) {\n  try {\n    ColorFactory.create(colorString);\n    return true;\n  } catch (e) {\n    return false;\n  }\n};\nexport var fade = function fade(colorString, alpha) {\n  var key = buildCacheKey('fade', colorString, alpha);\n\n  if (ColorFunctionsCache[key] === undefined) {\n    var color = ColorFactory.create(colorString);\n    color.alpha = alpha;\n    ColorFunctionsCache[key] = color.toColorString(color.type === 'hex' ? 'rgba' : color.type);\n  }\n\n  return ColorFunctionsCache[key];\n};","map":{"version":3,"sources":["C:/Users/ravka/Desktop/react-typescript-task/node_modules/@skbkontur/react-ui/lib/styles/ColorFunctions/ColorFunctions.js"],"names":["clamp","floatFromPercent","ColorFactory","DEFAULT_DARK","create","DEFAULT_LIGHT","ColorFunctionsCache","Object","buildCacheKey","name","_len","arguments","length","args","Array","_key","join","shiftColor","colorString","a","sign","method","toLowerCase","amount","endsWith","parseFloat","color","hsl","toHSL","l","newColor","alpha","h","s","toColorString","type","lighten","key","undefined","darken","contrast","darkString","lightString","threshold","dark","light","luma","_ref","toRGBString","toHEXString","red","rgb","green","blue","isValid","e","fade"],"mappings":"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","sourcesContent":["import { clamp, floatFromPercent } from \"../ColorHelpers\";\nimport { ColorFactory } from \"../ColorFactory\";\nvar DEFAULT_DARK = ColorFactory.create('#000');\nvar DEFAULT_LIGHT = ColorFactory.create('#fff');\nvar ColorFunctionsCache = Object.create(null);\n\nvar buildCacheKey = function buildCacheKey(name) {\n  for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    args[_key - 1] = arguments[_key];\n  }\n\n  return name + \"(\" + args.join() + \")\";\n};\n\nvar shiftColor = function shiftColor(colorString, a, sign, method) {\n  if (!colorString) {\n    return '';\n  }\n\n  if (colorString.toLowerCase() === 'transparent') {\n    return 'transparent';\n  }\n\n  var amount;\n\n  if (typeof a === 'string') {\n    amount = a.endsWith('%') ? floatFromPercent(a) : parseFloat(a);\n  } else {\n    amount = a;\n  }\n\n  amount = clamp(amount, 1);\n  var color = ColorFactory.create(colorString);\n  var hsl = color.toHSL();\n\n  if (sign === '+') {\n    hsl.l += method === 'relative' ? hsl.l * amount : amount;\n  } else {\n    hsl.l -= method === 'relative' ? hsl.l * amount : amount;\n  }\n\n  hsl.l = clamp(hsl.l);\n  var newColor;\n\n  if (color.alpha < 1) {\n    newColor = ColorFactory.create(\"hsla(\" + hsl.h + \", \" + hsl.s + \", \" + hsl.l + \", \" + hsl.a + \")\");\n  } else {\n    newColor = ColorFactory.create(\"hsl(\" + hsl.h + \", \" + hsl.s + \", \" + hsl.l + \")\");\n  }\n\n  return newColor.toColorString(color.type);\n};\n\nexport function lighten(colorString, amount, method) {\n  var key = buildCacheKey('lighten', colorString, amount, method);\n\n  if (ColorFunctionsCache[key] === undefined) {\n    ColorFunctionsCache[key] = shiftColor(colorString, amount, '+', method);\n    return ColorFunctionsCache[key];\n  }\n\n  return ColorFunctionsCache[key];\n}\nexport function darken(colorString, amount, method) {\n  var key = buildCacheKey('darken', colorString, amount, method);\n\n  if (ColorFunctionsCache[key] === undefined) {\n    ColorFunctionsCache[key] = shiftColor(colorString, amount, '-', method);\n    return ColorFunctionsCache[key];\n  }\n\n  return ColorFunctionsCache[key];\n}\nexport function contrast(colorString, darkString, lightString, threshold) {\n  if (threshold === void 0) {\n    threshold = 0.43;\n  }\n\n  var key = buildCacheKey('contrast', colorString, darkString, lightString, threshold);\n\n  if (!colorString) {\n    ColorFunctionsCache[key] = '';\n  }\n\n  if (ColorFunctionsCache[key] === undefined) {\n    var color = ColorFactory.create(colorString);\n    var dark = typeof darkString === 'undefined' ? DEFAULT_DARK : ColorFactory.create(darkString);\n    var light = typeof lightString === 'undefined' ? DEFAULT_LIGHT : ColorFactory.create(lightString); // Figure out which is actually light and dark:\n\n    if (dark.luma() > light.luma()) {\n      var _ref = [light, dark];\n      dark = _ref[0];\n      light = _ref[1];\n    }\n\n    if (color.luma() < threshold) {\n      ColorFunctionsCache[key] = light.alpha < 1 ? light.toRGBString() : light.toHEXString();\n    } else {\n      ColorFunctionsCache[key] = dark.alpha < 1 ? dark.toRGBString() : dark.toHEXString();\n    }\n  }\n\n  return ColorFunctionsCache[key];\n}\nexport var red = function red(colorString) {\n  var color = ColorFactory.create(colorString);\n  return color.rgb[0];\n};\nexport var green = function green(colorString) {\n  var color = ColorFactory.create(colorString);\n  return color.rgb[1];\n};\nexport var blue = function blue(colorString) {\n  var color = ColorFactory.create(colorString);\n  return color.rgb[2];\n};\nexport var alpha = function alpha(colorString) {\n  var color = ColorFactory.create(colorString);\n  return color.alpha;\n};\nexport var isValid = function isValid(colorString) {\n  try {\n    ColorFactory.create(colorString);\n    return true;\n  } catch (e) {\n    return false;\n  }\n};\nexport var fade = function fade(colorString, alpha) {\n  var key = buildCacheKey('fade', colorString, alpha);\n\n  if (ColorFunctionsCache[key] === undefined) {\n    var color = ColorFactory.create(colorString);\n    color.alpha = alpha;\n    ColorFunctionsCache[key] = color.toColorString(color.type === 'hex' ? 'rgba' : color.type);\n  }\n\n  return ColorFunctionsCache[key];\n};"]},"metadata":{},"sourceType":"module"}