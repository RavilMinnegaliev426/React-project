{"ast":null,"code":"import React from 'react';\nexport function reactGetTextContent(rootReactNode) {\n  var result = '';\n\n  var getText = function getText(reactNode) {\n    if (typeof reactNode === 'string' || typeof reactNode === 'number') {\n      result += reactNode.toString();\n    } else if (Array.isArray(reactNode)) {\n      reactNode.forEach(function (node) {\n        return getText(node);\n      });\n    } else if (React.isValidElement(reactNode) && reactNode.props) {\n      // @ts-ignore\n      var children = reactNode.props.children;\n      getText(children);\n    }\n  };\n\n  getText(rootReactNode);\n  return result;\n}","map":{"version":3,"sources":["C:/Users/ravka/Desktop/react-typescript-task/node_modules/@skbkontur/react-ui/lib/reactGetTextContent/reactGetTextContent.js"],"names":["React","reactGetTextContent","rootReactNode","result","getText","reactNode","toString","Array","isArray","forEach","node","isValidElement","props","children"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,SAASC,mBAAT,CAA6BC,aAA7B,EAA4C;AACjD,MAAIC,MAAM,GAAG,EAAb;;AAEA,MAAIC,OAAO,GAAG,SAASA,OAAT,CAAiBC,SAAjB,EAA4B;AACxC,QAAI,OAAOA,SAAP,KAAqB,QAArB,IAAiC,OAAOA,SAAP,KAAqB,QAA1D,EAAoE;AAClEF,MAAAA,MAAM,IAAIE,SAAS,CAACC,QAAV,EAAV;AACD,KAFD,MAEO,IAAIC,KAAK,CAACC,OAAN,CAAcH,SAAd,CAAJ,EAA8B;AACnCA,MAAAA,SAAS,CAACI,OAAV,CAAkB,UAAUC,IAAV,EAAgB;AAChC,eAAON,OAAO,CAACM,IAAD,CAAd;AACD,OAFD;AAGD,KAJM,MAIA,IAAIV,KAAK,CAACW,cAAN,CAAqBN,SAArB,KAAmCA,SAAS,CAACO,KAAjD,EAAwD;AAC7D;AACA,UAAIC,QAAQ,GAAGR,SAAS,CAACO,KAAV,CAAgBC,QAA/B;AACAT,MAAAA,OAAO,CAACS,QAAD,CAAP;AACD;AACF,GAZD;;AAcAT,EAAAA,OAAO,CAACF,aAAD,CAAP;AACA,SAAOC,MAAP;AACD","sourcesContent":["import React from 'react';\nexport function reactGetTextContent(rootReactNode) {\n  var result = '';\n\n  var getText = function getText(reactNode) {\n    if (typeof reactNode === 'string' || typeof reactNode === 'number') {\n      result += reactNode.toString();\n    } else if (Array.isArray(reactNode)) {\n      reactNode.forEach(function (node) {\n        return getText(node);\n      });\n    } else if (React.isValidElement(reactNode) && reactNode.props) {\n      // @ts-ignore\n      var children = reactNode.props.children;\n      getText(children);\n    }\n  };\n\n  getText(rootReactNode);\n  return result;\n}"]},"metadata":{},"sourceType":"module"}