{"ast":null,"code":"import EventEmitter from 'eventemitter3';\nexport var ModalStack = /*#__PURE__*/function () {\n  function ModalStack() {}\n\n  ModalStack.add = function add(component, onChange) {\n    var _ModalStack$getStackI = ModalStack.getStackInfo(),\n        emitter = _ModalStack$getStackI.emitter,\n        mounted = _ModalStack$getStackI.mounted;\n\n    mounted.unshift(component);\n\n    var changeHandler = function changeHandler() {\n      return onChange([].concat(mounted));\n    };\n\n    emitter.addListener('change', changeHandler);\n    emitter.emit('change');\n    return {\n      remove: function remove() {\n        emitter.removeListener('change', changeHandler);\n      }\n    };\n  };\n\n  ModalStack.remove = function remove(component) {\n    var _ModalStack$getStackI2 = ModalStack.getStackInfo(),\n        emitter = _ModalStack$getStackI2.emitter,\n        mounted = _ModalStack$getStackI2.mounted;\n\n    var index = mounted.indexOf(component);\n\n    if (index !== -1) {\n      mounted.splice(index, 1);\n    }\n\n    emitter.emit('change');\n  };\n\n  ModalStack.getStackInfo = function getStackInfo() {\n    var globalWithStack = global;\n    return globalWithStack.__ReactUIStackInfo || (globalWithStack.__ReactUIStackInfo = {\n      emitter: new EventEmitter(),\n      mounted: []\n    });\n  };\n\n  return ModalStack;\n}();","map":{"version":3,"sources":["C:/Users/ravka/Desktop/react-typescript-task/node_modules/@skbkontur/react-ui/lib/ModalStack/ModalStack.js"],"names":["EventEmitter","ModalStack","add","component","onChange","_ModalStack$getStackI","getStackInfo","emitter","mounted","unshift","changeHandler","concat","addListener","emit","remove","removeListener","_ModalStack$getStackI2","index","indexOf","splice","globalWithStack","global","__ReactUIStackInfo"],"mappings":"AAAA,OAAOA,YAAP,MAAyB,eAAzB;AACA,OAAO,IAAIC,UAAU,GACrB,aACA,YAAY;AACV,WAASA,UAAT,GAAsB,CAAE;;AAExBA,EAAAA,UAAU,CAACC,GAAX,GAAiB,SAASA,GAAT,CAAaC,SAAb,EAAwBC,QAAxB,EAAkC;AACjD,QAAIC,qBAAqB,GAAGJ,UAAU,CAACK,YAAX,EAA5B;AAAA,QACIC,OAAO,GAAGF,qBAAqB,CAACE,OADpC;AAAA,QAEIC,OAAO,GAAGH,qBAAqB,CAACG,OAFpC;;AAIAA,IAAAA,OAAO,CAACC,OAAR,CAAgBN,SAAhB;;AAEA,QAAIO,aAAa,GAAG,SAASA,aAAT,GAAyB;AAC3C,aAAON,QAAQ,CAAC,GAAGO,MAAH,CAAUH,OAAV,CAAD,CAAf;AACD,KAFD;;AAIAD,IAAAA,OAAO,CAACK,WAAR,CAAoB,QAApB,EAA8BF,aAA9B;AACAH,IAAAA,OAAO,CAACM,IAAR,CAAa,QAAb;AACA,WAAO;AACLC,MAAAA,MAAM,EAAE,SAASA,MAAT,GAAkB;AACxBP,QAAAA,OAAO,CAACQ,cAAR,CAAuB,QAAvB,EAAiCL,aAAjC;AACD;AAHI,KAAP;AAKD,GAlBD;;AAoBAT,EAAAA,UAAU,CAACa,MAAX,GAAoB,SAASA,MAAT,CAAgBX,SAAhB,EAA2B;AAC7C,QAAIa,sBAAsB,GAAGf,UAAU,CAACK,YAAX,EAA7B;AAAA,QACIC,OAAO,GAAGS,sBAAsB,CAACT,OADrC;AAAA,QAEIC,OAAO,GAAGQ,sBAAsB,CAACR,OAFrC;;AAIA,QAAIS,KAAK,GAAGT,OAAO,CAACU,OAAR,CAAgBf,SAAhB,CAAZ;;AAEA,QAAIc,KAAK,KAAK,CAAC,CAAf,EAAkB;AAChBT,MAAAA,OAAO,CAACW,MAAR,CAAeF,KAAf,EAAsB,CAAtB;AACD;;AAEDV,IAAAA,OAAO,CAACM,IAAR,CAAa,QAAb;AACD,GAZD;;AAcAZ,EAAAA,UAAU,CAACK,YAAX,GAA0B,SAASA,YAAT,GAAwB;AAChD,QAAIc,eAAe,GAAGC,MAAtB;AACA,WAAOD,eAAe,CAACE,kBAAhB,KAAuCF,eAAe,CAACE,kBAAhB,GAAqC;AACjFf,MAAAA,OAAO,EAAE,IAAIP,YAAJ,EADwE;AAEjFQ,MAAAA,OAAO,EAAE;AAFwE,KAA5E,CAAP;AAID,GAND;;AAQA,SAAOP,UAAP;AACD,CA9CD,EAFO","sourcesContent":["import EventEmitter from 'eventemitter3';\nexport var ModalStack =\n/*#__PURE__*/\nfunction () {\n  function ModalStack() {}\n\n  ModalStack.add = function add(component, onChange) {\n    var _ModalStack$getStackI = ModalStack.getStackInfo(),\n        emitter = _ModalStack$getStackI.emitter,\n        mounted = _ModalStack$getStackI.mounted;\n\n    mounted.unshift(component);\n\n    var changeHandler = function changeHandler() {\n      return onChange([].concat(mounted));\n    };\n\n    emitter.addListener('change', changeHandler);\n    emitter.emit('change');\n    return {\n      remove: function remove() {\n        emitter.removeListener('change', changeHandler);\n      }\n    };\n  };\n\n  ModalStack.remove = function remove(component) {\n    var _ModalStack$getStackI2 = ModalStack.getStackInfo(),\n        emitter = _ModalStack$getStackI2.emitter,\n        mounted = _ModalStack$getStackI2.mounted;\n\n    var index = mounted.indexOf(component);\n\n    if (index !== -1) {\n      mounted.splice(index, 1);\n    }\n\n    emitter.emit('change');\n  };\n\n  ModalStack.getStackInfo = function getStackInfo() {\n    var globalWithStack = global;\n    return globalWithStack.__ReactUIStackInfo || (globalWithStack.__ReactUIStackInfo = {\n      emitter: new EventEmitter(),\n      mounted: []\n    });\n  };\n\n  return ModalStack;\n}();"]},"metadata":{},"sourceType":"module"}