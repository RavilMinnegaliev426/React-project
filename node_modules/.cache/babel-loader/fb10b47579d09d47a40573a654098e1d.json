{"ast":null,"code":"import createEmotion from 'create-emotion';\nimport extraScopePlugin from 'stylis-plugin-extra-scope';\nimport { Upgrade } from \"../../Upgrades\";\nvar PREFIX = 'react-ui';\nvar scope = new Array(Upgrade.getSpecificityLevel()).fill(\".\" + PREFIX).join('');\n\nvar _createEmotion = createEmotion({\n  key: PREFIX,\n  stylisPlugins: scope ? [extraScopePlugin(scope)] : undefined\n}),\n    flush = _createEmotion.flush,\n    hydrate = _createEmotion.hydrate,\n    cx = _createEmotion.cx,\n    merge = _createEmotion.merge,\n    getRegisteredStyles = _createEmotion.getRegisteredStyles,\n    injectGlobal = _createEmotion.injectGlobal,\n    keyframes = _createEmotion.keyframes,\n    css = _createEmotion.css,\n    sheet = _createEmotion.sheet,\n    cache = _createEmotion.cache;\n\nexport { flush, hydrate, cx, merge, getRegisteredStyles, injectGlobal, keyframes, css, sheet, cache };\nexport var cssName = function cssName(className) {\n  return \".\" + className;\n};\n\nfunction isZeroArgs(fn) {\n  return fn.length == 0;\n}\n\nvar memoize = function memoize(fn) {\n  if (isZeroArgs(fn)) {\n    var isCalled = false;\n    var result;\n    return function () {\n      if (!isCalled) {\n        isCalled = true;\n        result = fn();\n      }\n\n      return result;\n    };\n  }\n\n  var cache = new WeakMap();\n  return function (arg) {\n    if (!cache.has(arg)) cache.set(arg, fn(arg));\n    return cache.get(arg);\n  };\n};\n\nexport var memoizeStyle = function memoizeStyle(styles) {\n  Object.keys(styles).forEach(function (className) {\n    return styles[className] = memoize(styles[className]);\n  });\n  return styles;\n};","map":{"version":3,"sources":["C:/Users/ravka/Desktop/react-typescript-task/node_modules/@skbkontur/react-ui/lib/theming/Emotion/Emotion.js"],"names":["createEmotion","extraScopePlugin","Upgrade","PREFIX","scope","Array","getSpecificityLevel","fill","join","_createEmotion","key","stylisPlugins","undefined","flush","hydrate","cx","merge","getRegisteredStyles","injectGlobal","keyframes","css","sheet","cache","cssName","className","isZeroArgs","fn","length","memoize","isCalled","result","WeakMap","arg","has","set","get","memoizeStyle","styles","Object","keys","forEach"],"mappings":"AAAA,OAAOA,aAAP,MAA0B,gBAA1B;AACA,OAAOC,gBAAP,MAA6B,2BAA7B;AACA,SAASC,OAAT,QAAwB,gBAAxB;AACA,IAAIC,MAAM,GAAG,UAAb;AACA,IAAIC,KAAK,GAAG,IAAIC,KAAJ,CAAUH,OAAO,CAACI,mBAAR,EAAV,EAAyCC,IAAzC,CAA8C,MAAMJ,MAApD,EAA4DK,IAA5D,CAAiE,EAAjE,CAAZ;;AAEA,IAAIC,cAAc,GAAGT,aAAa,CAAC;AACjCU,EAAAA,GAAG,EAAEP,MAD4B;AAEjCQ,EAAAA,aAAa,EAAEP,KAAK,GAAG,CAACH,gBAAgB,CAACG,KAAD,CAAjB,CAAH,GAA+BQ;AAFlB,CAAD,CAAlC;AAAA,IAIIC,KAAK,GAAGJ,cAAc,CAACI,KAJ3B;AAAA,IAKIC,OAAO,GAAGL,cAAc,CAACK,OAL7B;AAAA,IAMIC,EAAE,GAAGN,cAAc,CAACM,EANxB;AAAA,IAOIC,KAAK,GAAGP,cAAc,CAACO,KAP3B;AAAA,IAQIC,mBAAmB,GAAGR,cAAc,CAACQ,mBARzC;AAAA,IASIC,YAAY,GAAGT,cAAc,CAACS,YATlC;AAAA,IAUIC,SAAS,GAAGV,cAAc,CAACU,SAV/B;AAAA,IAWIC,GAAG,GAAGX,cAAc,CAACW,GAXzB;AAAA,IAYIC,KAAK,GAAGZ,cAAc,CAACY,KAZ3B;AAAA,IAaIC,KAAK,GAAGb,cAAc,CAACa,KAb3B;;AAeA,SAAST,KAAT,EAAgBC,OAAhB,EAAyBC,EAAzB,EAA6BC,KAA7B,EAAoCC,mBAApC,EAAyDC,YAAzD,EAAuEC,SAAvE,EAAkFC,GAAlF,EAAuFC,KAAvF,EAA8FC,KAA9F;AACA,OAAO,IAAIC,OAAO,GAAG,SAASA,OAAT,CAAiBC,SAAjB,EAA4B;AAC/C,SAAO,MAAMA,SAAb;AACD,CAFM;;AAIP,SAASC,UAAT,CAAoBC,EAApB,EAAwB;AACtB,SAAOA,EAAE,CAACC,MAAH,IAAa,CAApB;AACD;;AAED,IAAIC,OAAO,GAAG,SAASA,OAAT,CAAiBF,EAAjB,EAAqB;AACjC,MAAID,UAAU,CAACC,EAAD,CAAd,EAAoB;AAClB,QAAIG,QAAQ,GAAG,KAAf;AACA,QAAIC,MAAJ;AACA,WAAO,YAAY;AACjB,UAAI,CAACD,QAAL,EAAe;AACbA,QAAAA,QAAQ,GAAG,IAAX;AACAC,QAAAA,MAAM,GAAGJ,EAAE,EAAX;AACD;;AAED,aAAOI,MAAP;AACD,KAPD;AAQD;;AAED,MAAIR,KAAK,GAAG,IAAIS,OAAJ,EAAZ;AACA,SAAO,UAAUC,GAAV,EAAe;AACpB,QAAI,CAACV,KAAK,CAACW,GAAN,CAAUD,GAAV,CAAL,EAAqBV,KAAK,CAACY,GAAN,CAAUF,GAAV,EAAeN,EAAE,CAACM,GAAD,CAAjB;AACrB,WAAOV,KAAK,CAACa,GAAN,CAAUH,GAAV,CAAP;AACD,GAHD;AAID,CAnBD;;AAqBA,OAAO,IAAII,YAAY,GAAG,SAASA,YAAT,CAAsBC,MAAtB,EAA8B;AACtDC,EAAAA,MAAM,CAACC,IAAP,CAAYF,MAAZ,EAAoBG,OAApB,CAA4B,UAAUhB,SAAV,EAAqB;AAC/C,WAAOa,MAAM,CAACb,SAAD,CAAN,GAAoBI,OAAO,CAACS,MAAM,CAACb,SAAD,CAAP,CAAlC;AACD,GAFD;AAGA,SAAOa,MAAP;AACD,CALM","sourcesContent":["import createEmotion from 'create-emotion';\nimport extraScopePlugin from 'stylis-plugin-extra-scope';\nimport { Upgrade } from \"../../Upgrades\";\nvar PREFIX = 'react-ui';\nvar scope = new Array(Upgrade.getSpecificityLevel()).fill(\".\" + PREFIX).join('');\n\nvar _createEmotion = createEmotion({\n  key: PREFIX,\n  stylisPlugins: scope ? [extraScopePlugin(scope)] : undefined\n}),\n    flush = _createEmotion.flush,\n    hydrate = _createEmotion.hydrate,\n    cx = _createEmotion.cx,\n    merge = _createEmotion.merge,\n    getRegisteredStyles = _createEmotion.getRegisteredStyles,\n    injectGlobal = _createEmotion.injectGlobal,\n    keyframes = _createEmotion.keyframes,\n    css = _createEmotion.css,\n    sheet = _createEmotion.sheet,\n    cache = _createEmotion.cache;\n\nexport { flush, hydrate, cx, merge, getRegisteredStyles, injectGlobal, keyframes, css, sheet, cache };\nexport var cssName = function cssName(className) {\n  return \".\" + className;\n};\n\nfunction isZeroArgs(fn) {\n  return fn.length == 0;\n}\n\nvar memoize = function memoize(fn) {\n  if (isZeroArgs(fn)) {\n    var isCalled = false;\n    var result;\n    return function () {\n      if (!isCalled) {\n        isCalled = true;\n        result = fn();\n      }\n\n      return result;\n    };\n  }\n\n  var cache = new WeakMap();\n  return function (arg) {\n    if (!cache.has(arg)) cache.set(arg, fn(arg));\n    return cache.get(arg);\n  };\n};\n\nexport var memoizeStyle = function memoizeStyle(styles) {\n  Object.keys(styles).forEach(function (className) {\n    return styles[className] = memoize(styles[className]);\n  });\n  return styles;\n};"]},"metadata":{},"sourceType":"module"}