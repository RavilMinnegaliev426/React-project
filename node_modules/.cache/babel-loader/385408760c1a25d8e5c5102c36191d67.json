{"ast":null,"code":"import { memo } from \"../../../lib/memo\";\nimport { config } from \"../config\";\nimport { DayCellViewModel } from \"../DayCellViewModel\";\nexport var MonthViewModel = // FIXME: shouldbe readonly\n// FIXME: shouldbe readonly\nfunction MonthViewModel(month, year) {\n  this.daysCount = void 0;\n  this.offset = void 0;\n  this.month = void 0;\n  this.year = void 0;\n  this.height = void 0;\n  this.days = void 0;\n  this.isLastInYear = void 0;\n  this.isFirstInYear = void 0;\n\n  if (month < 0) {\n    year -= Math.ceil(-month / 12);\n    month = 12 + month % 12;\n  }\n\n  if (month > 11) {\n    year += Math.floor(month / 12);\n    month %= 12;\n  }\n\n  var daysCount = getMonthsDays(month, year);\n  var offset = getMonthOffset(month, year);\n  this.daysCount = daysCount;\n  this.offset = offset;\n  this.month = month;\n  this.year = year;\n  this.height = getMonthHeight(daysCount, offset);\n  this.isLastInYear = month === 11;\n  this.isFirstInYear = month === 0;\n  this.days = Array.from({\n    length: daysCount\n  }, function (_, i) {\n    var isWeekend = (i + getMonthOffset(month, year)) % 7 >= 5;\n    return DayCellViewModel.create(i + 1, month, year, isWeekend);\n  });\n};\nMonthViewModel.create = memo(function (month, year) {\n  return new MonthViewModel(month, year);\n});\nvar getMonthHeight = memo(function (daysCount, offset) {\n  return Math.ceil((daysCount + offset) / 7) * config.DAY_HEIGHT + config.MONTH_TITLE_OFFSET_HEIGHT + config.MONTH_BOTTOM_MARGIN;\n});\nvar getMonthsDays = memo(function (month, year) {\n  return new Date(year, month + 1, 0).getDate();\n});\nvar getMonthOffset = memo(function (month, year) {\n  var day = new Date(year, month, 1).getDay() - 1;\n\n  if (day === -1) {\n    return 6;\n  }\n\n  return day;\n});","map":{"version":3,"sources":["C:/Users/ravka/Desktop/react-typescript-task/node_modules/@skbkontur/react-ui/internal/Calendar/MonthViewModel/MonthViewModel.js"],"names":["memo","config","DayCellViewModel","MonthViewModel","month","year","daysCount","offset","height","days","isLastInYear","isFirstInYear","Math","ceil","floor","getMonthsDays","getMonthOffset","getMonthHeight","Array","from","length","_","i","isWeekend","create","DAY_HEIGHT","MONTH_TITLE_OFFSET_HEIGHT","MONTH_BOTTOM_MARGIN","Date","getDate","day","getDay"],"mappings":"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","sourcesContent":["import { memo } from \"../../../lib/memo\";\nimport { config } from \"../config\";\nimport { DayCellViewModel } from \"../DayCellViewModel\";\nexport var MonthViewModel = // FIXME: shouldbe readonly\n// FIXME: shouldbe readonly\nfunction MonthViewModel(month, year) {\n  this.daysCount = void 0;\n  this.offset = void 0;\n  this.month = void 0;\n  this.year = void 0;\n  this.height = void 0;\n  this.days = void 0;\n  this.isLastInYear = void 0;\n  this.isFirstInYear = void 0;\n\n  if (month < 0) {\n    year -= Math.ceil(-month / 12);\n    month = 12 + month % 12;\n  }\n\n  if (month > 11) {\n    year += Math.floor(month / 12);\n    month %= 12;\n  }\n\n  var daysCount = getMonthsDays(month, year);\n  var offset = getMonthOffset(month, year);\n  this.daysCount = daysCount;\n  this.offset = offset;\n  this.month = month;\n  this.year = year;\n  this.height = getMonthHeight(daysCount, offset);\n  this.isLastInYear = month === 11;\n  this.isFirstInYear = month === 0;\n  this.days = Array.from({\n    length: daysCount\n  }, function (_, i) {\n    var isWeekend = (i + getMonthOffset(month, year)) % 7 >= 5;\n    return DayCellViewModel.create(i + 1, month, year, isWeekend);\n  });\n};\nMonthViewModel.create = memo(function (month, year) {\n  return new MonthViewModel(month, year);\n});\nvar getMonthHeight = memo(function (daysCount, offset) {\n  return Math.ceil((daysCount + offset) / 7) * config.DAY_HEIGHT + config.MONTH_TITLE_OFFSET_HEIGHT + config.MONTH_BOTTOM_MARGIN;\n});\nvar getMonthsDays = memo(function (month, year) {\n  return new Date(year, month + 1, 0).getDate();\n});\nvar getMonthOffset = memo(function (month, year) {\n  var day = new Date(year, month, 1).getDay() - 1;\n\n  if (day === -1) {\n    return 6;\n  }\n\n  return day;\n});"]},"metadata":{},"sourceType":"module"}