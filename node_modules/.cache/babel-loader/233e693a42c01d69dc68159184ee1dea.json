{"ast":null,"code":"import _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport { FiasEstateStatuses, FiasFields, FiasStructureStatuses } from \"../../types\";\nimport { abbreviations } from \"../../constants/abbreviations\";\nexport var FiasAddressElement = /*#__PURE__*/function () {\n  // Types (abbrevs) that match fields labels\n  function FiasAddressElement(type, name, data) {\n    var _this = this;\n\n    this.type = type;\n    this.name = name;\n    this.data = data;\n\n    this.isTypeMatchField = function (field) {\n      var data = _this.data;\n\n      if (data && data.abbreviation) {\n        return FiasAddressElement.MATCHING_TYPES[data.abbreviation] === field;\n      }\n\n      return false;\n    };\n\n    this.removeData = function () {\n      delete _this.data;\n    };\n\n    this.isEqualTo = function (element) {\n      if (element && element.fiasId) {\n        return _this.fiasId === element.fiasId;\n      }\n\n      return false;\n    };\n  }\n\n  var _proto = FiasAddressElement.prototype;\n\n  _proto.getText = function getText(withoutType) {\n    if (withoutType === void 0) {\n      withoutType = false;\n    }\n\n    var name = this.name,\n        data = this.data;\n    var result = '';\n\n    if (!name) {\n      return '';\n    }\n\n    if (data) {\n      var abbreviation = data.abbreviation;\n\n      if (abbreviation) {\n        var _type = !withoutType ? abbreviations[abbreviation] || abbreviation : '';\n\n        switch (abbreviation) {\n          case 'Чувашия':\n            result = _type + \" \\u0427\\u0443\\u0432\\u0430\\u0448\\u0438\\u044F\";\n            break;\n\n          case 'АО':\n            {\n              var text = name;\n\n              if (name !== 'Ханты-Мансийский Автономный округ - Югра') {\n                text += \" \" + _type;\n              }\n\n              result = text;\n              break;\n            }\n\n          case 'Аобл':\n          case 'край':\n          case 'обл':\n            result = name + \" \" + _type;\n            break;\n\n          case 'п':\n            result = !withoutType ? (this.type === FiasFields.district ? 'поселение' : 'поселок') + \" \" + name : \"\" + name;\n            break;\n\n          default:\n            result = _type + \" \" + name;\n        }\n      }\n\n      if (this.type === FiasFields.stead) {\n        result = ' ' + data.number;\n      }\n\n      if (this.type === FiasFields.house) {\n        if (data.estateStatus !== FiasEstateStatuses.None) {\n          switch (data.estateStatus) {\n            case FiasEstateStatuses.Hold:\n              result = result + \" \\u0432\\u043B\\u0430\\u0434\\u0435\\u043D\\u0438\\u0435\";\n              break;\n\n            case FiasEstateStatuses.House:\n              result = result + \" \\u0434\\u043E\\u043C\";\n              break;\n\n            case FiasEstateStatuses.HouseHold:\n              result = result + \" \\u0434\\u043E\\u043C\\u043E\\u0432\\u043B\\u0430\\u0434\\u0435\\u043D\\u0438\\u0435\";\n              break;\n          }\n        }\n\n        if (data.number) {\n          result = result + \" \" + data.number;\n        }\n\n        if (data.structureStatus && data.structureStatus !== FiasStructureStatuses.None && data.structureNumber) {\n          switch (data.structureStatus) {\n            case FiasStructureStatuses.Structure:\n              result = result + \" \\u0441\\u0442\\u0440\\u043E\\u0435\\u043D\\u0438\\u0435 \" + data.structureNumber;\n              break;\n\n            case FiasStructureStatuses.Construction:\n              result = result + \" c\\u043E\\u043E\\u0440\\u0443\\u0436\\u0435\\u043D\\u0438\\u0435 \" + data.structureNumber;\n              break;\n\n            case FiasStructureStatuses.Liter:\n              result = result + \" \\u043B\\u0438\\u0442\\u0435\\u0440\\u0430 \" + data.structureNumber;\n              break;\n          }\n        }\n\n        if (data.buildingNumber) {\n          result = result + \" \\u043A\\u043E\\u0440\\u043F\\u0443\\u0441 \" + data.buildingNumber;\n        }\n      }\n\n      if (this.type === FiasFields.room) {\n        if (data) {\n          result = \"\\u043A\\u0432\\u0430\\u0440\\u0442\\u0438\\u0440\\u0430 \" + name;\n        } else {\n          result = name;\n        }\n      }\n    }\n\n    return result.trim() || name;\n  };\n\n  _createClass(FiasAddressElement, [{\n    key: \"isFederalCity\",\n    get: function get() {\n      if (!this.fiasId) {\n        return false;\n      }\n\n      return FiasAddressElement.FEDERAL_CITIES.includes(this.fiasId);\n    }\n  }, {\n    key: \"fiasData\",\n    get: function get() {\n      if (this.data && this.data.data) {\n        return this.data.data;\n      }\n    }\n  }, {\n    key: \"fiasId\",\n    get: function get() {\n      if (this.data) {\n        return this.data.fiasId;\n      }\n    }\n  }, {\n    key: \"verifiableData\",\n    get: function get() {\n      var type = this.type,\n          data = this.data;\n\n      if (data) {\n        var _name = data.name,\n            abbreviation = data.abbreviation,\n            number = data.number,\n            structureNumber = data.structureNumber,\n            buildingNumber = data.buildingNumber,\n            structureStatus = data.structureStatus;\n\n        switch (type) {\n          case FiasFields.house:\n            return {\n              number: number,\n              structureNumber: structureNumber,\n              structureStatus: structureStatus,\n              buildingNumber: buildingNumber\n            };\n\n          default:\n            return {\n              name: _name,\n              abbreviation: abbreviation\n            };\n        }\n      }\n\n      return {\n        name: this.name\n      };\n    }\n  }]);\n\n  return FiasAddressElement;\n}();\nFiasAddressElement.MATCHING_TYPES = {\n  'р-н': FiasFields.district,\n  г: FiasFields.city,\n  нп: FiasFields.settlement,\n  ул: FiasFields.street\n};\nFiasAddressElement.FEDERAL_CITIES = ['0c5b2444-70a0-4932-980c-b4dc0d3f02b5', // Москва\n'c2deb16a-0330-4f05-821f-1d09c93331e6', // Санкт-Петербург\n'6fdecb78-893a-4e3f-a5ba-aa062459463b', // Севастополь\n'63ed1a35-4be6-4564-a1ec-0c51f7383314' // Байконур\n];","map":{"version":3,"sources":["C:/Users/ravka/Desktop/react-typescript-task/node_modules/@skbkontur/react-ui/components/Fias/models/FiasAddressElement/FiasAddressElement.js"],"names":["_createClass","FiasEstateStatuses","FiasFields","FiasStructureStatuses","abbreviations","FiasAddressElement","type","name","data","_this","isTypeMatchField","field","abbreviation","MATCHING_TYPES","removeData","isEqualTo","element","fiasId","_proto","prototype","getText","withoutType","result","_type","text","district","stead","number","house","estateStatus","None","Hold","House","HouseHold","structureStatus","structureNumber","Structure","Construction","Liter","buildingNumber","room","trim","key","get","FEDERAL_CITIES","includes","_name","г","city","нп","settlement","ул","street"],"mappings":"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","sourcesContent":["import _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport { FiasEstateStatuses, FiasFields, FiasStructureStatuses } from \"../../types\";\nimport { abbreviations } from \"../../constants/abbreviations\";\nexport var FiasAddressElement =\n/*#__PURE__*/\nfunction () {\n  // Types (abbrevs) that match fields labels\n  function FiasAddressElement(type, name, data) {\n    var _this = this;\n\n    this.type = type;\n    this.name = name;\n    this.data = data;\n\n    this.isTypeMatchField = function (field) {\n      var data = _this.data;\n\n      if (data && data.abbreviation) {\n        return FiasAddressElement.MATCHING_TYPES[data.abbreviation] === field;\n      }\n\n      return false;\n    };\n\n    this.removeData = function () {\n      delete _this.data;\n    };\n\n    this.isEqualTo = function (element) {\n      if (element && element.fiasId) {\n        return _this.fiasId === element.fiasId;\n      }\n\n      return false;\n    };\n  }\n\n  var _proto = FiasAddressElement.prototype;\n\n  _proto.getText = function getText(withoutType) {\n    if (withoutType === void 0) {\n      withoutType = false;\n    }\n\n    var name = this.name,\n        data = this.data;\n    var result = '';\n\n    if (!name) {\n      return '';\n    }\n\n    if (data) {\n      var abbreviation = data.abbreviation;\n\n      if (abbreviation) {\n        var _type = !withoutType ? abbreviations[abbreviation] || abbreviation : '';\n\n        switch (abbreviation) {\n          case 'Чувашия':\n            result = _type + \" \\u0427\\u0443\\u0432\\u0430\\u0448\\u0438\\u044F\";\n            break;\n\n          case 'АО':\n            {\n              var text = name;\n\n              if (name !== 'Ханты-Мансийский Автономный округ - Югра') {\n                text += \" \" + _type;\n              }\n\n              result = text;\n              break;\n            }\n\n          case 'Аобл':\n          case 'край':\n          case 'обл':\n            result = name + \" \" + _type;\n            break;\n\n          case 'п':\n            result = !withoutType ? (this.type === FiasFields.district ? 'поселение' : 'поселок') + \" \" + name : \"\" + name;\n            break;\n\n          default:\n            result = _type + \" \" + name;\n        }\n      }\n\n      if (this.type === FiasFields.stead) {\n        result = ' ' + data.number;\n      }\n\n      if (this.type === FiasFields.house) {\n        if (data.estateStatus !== FiasEstateStatuses.None) {\n          switch (data.estateStatus) {\n            case FiasEstateStatuses.Hold:\n              result = result + \" \\u0432\\u043B\\u0430\\u0434\\u0435\\u043D\\u0438\\u0435\";\n              break;\n\n            case FiasEstateStatuses.House:\n              result = result + \" \\u0434\\u043E\\u043C\";\n              break;\n\n            case FiasEstateStatuses.HouseHold:\n              result = result + \" \\u0434\\u043E\\u043C\\u043E\\u0432\\u043B\\u0430\\u0434\\u0435\\u043D\\u0438\\u0435\";\n              break;\n          }\n        }\n\n        if (data.number) {\n          result = result + \" \" + data.number;\n        }\n\n        if (data.structureStatus && data.structureStatus !== FiasStructureStatuses.None && data.structureNumber) {\n          switch (data.structureStatus) {\n            case FiasStructureStatuses.Structure:\n              result = result + \" \\u0441\\u0442\\u0440\\u043E\\u0435\\u043D\\u0438\\u0435 \" + data.structureNumber;\n              break;\n\n            case FiasStructureStatuses.Construction:\n              result = result + \" c\\u043E\\u043E\\u0440\\u0443\\u0436\\u0435\\u043D\\u0438\\u0435 \" + data.structureNumber;\n              break;\n\n            case FiasStructureStatuses.Liter:\n              result = result + \" \\u043B\\u0438\\u0442\\u0435\\u0440\\u0430 \" + data.structureNumber;\n              break;\n          }\n        }\n\n        if (data.buildingNumber) {\n          result = result + \" \\u043A\\u043E\\u0440\\u043F\\u0443\\u0441 \" + data.buildingNumber;\n        }\n      }\n\n      if (this.type === FiasFields.room) {\n        if (data) {\n          result = \"\\u043A\\u0432\\u0430\\u0440\\u0442\\u0438\\u0440\\u0430 \" + name;\n        } else {\n          result = name;\n        }\n      }\n    }\n\n    return result.trim() || name;\n  };\n\n  _createClass(FiasAddressElement, [{\n    key: \"isFederalCity\",\n    get: function get() {\n      if (!this.fiasId) {\n        return false;\n      }\n\n      return FiasAddressElement.FEDERAL_CITIES.includes(this.fiasId);\n    }\n  }, {\n    key: \"fiasData\",\n    get: function get() {\n      if (this.data && this.data.data) {\n        return this.data.data;\n      }\n    }\n  }, {\n    key: \"fiasId\",\n    get: function get() {\n      if (this.data) {\n        return this.data.fiasId;\n      }\n    }\n  }, {\n    key: \"verifiableData\",\n    get: function get() {\n      var type = this.type,\n          data = this.data;\n\n      if (data) {\n        var _name = data.name,\n            abbreviation = data.abbreviation,\n            number = data.number,\n            structureNumber = data.structureNumber,\n            buildingNumber = data.buildingNumber,\n            structureStatus = data.structureStatus;\n\n        switch (type) {\n          case FiasFields.house:\n            return {\n              number: number,\n              structureNumber: structureNumber,\n              structureStatus: structureStatus,\n              buildingNumber: buildingNumber\n            };\n\n          default:\n            return {\n              name: _name,\n              abbreviation: abbreviation\n            };\n        }\n      }\n\n      return {\n        name: this.name\n      };\n    }\n  }]);\n\n  return FiasAddressElement;\n}();\nFiasAddressElement.MATCHING_TYPES = {\n  'р-н': FiasFields.district,\n  г: FiasFields.city,\n  нп: FiasFields.settlement,\n  ул: FiasFields.street\n};\nFiasAddressElement.FEDERAL_CITIES = ['0c5b2444-70a0-4932-980c-b4dc0d3f02b5', // Москва\n'c2deb16a-0330-4f05-821f-1d09c93331e6', // Санкт-Петербург\n'6fdecb78-893a-4e3f-a5ba-aa062459463b', // Севастополь\n'63ed1a35-4be6-4564-a1ec-0c51f7383314' // Байконур\n];"]},"metadata":{},"sourceType":"module"}