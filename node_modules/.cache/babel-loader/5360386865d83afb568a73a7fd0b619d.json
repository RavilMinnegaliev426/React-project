{"ast":null,"code":"import { config } from \"../config\";\nimport { MonthViewModel } from \"../MonthViewModel\";\nexport var calculateScrollPosition = function calculateScrollPosition(months, scrollPosition, deltaY) {\n  var scrollDirection = deltaY > 0 ? 1 : -1;\n  var nextScrollPosition = scrollPosition - deltaY;\n  var nextMonths = months;\n  var firstMonth = months[0];\n\n  if (scrollDirection < 0 && nextScrollPosition >= firstMonth.height) {\n    do {\n      nextScrollPosition -= nextMonths[0].height;\n      nextMonths = getMonths(firstMonth.month, firstMonth.year);\n    } while (nextScrollPosition >= nextMonths[0].height);\n  }\n\n  var lastMonth = months[months.length - 1];\n\n  if (scrollDirection > 0 && nextScrollPosition < 0) {\n    do {\n      nextScrollPosition += nextMonths[1].height;\n      nextMonths = getMonths(lastMonth.month, lastMonth.year);\n    } while (nextScrollPosition < 0);\n  }\n\n  return {\n    scrollPosition: nextScrollPosition,\n    months: nextMonths,\n    scrollDirection: scrollDirection\n  };\n};\nexport var applyDelta = function applyDelta(deltaY) {\n  return function (_ref, _ref2) {\n    var scrollPosition = _ref.scrollPosition,\n        months = _ref.months;\n    var minDate = _ref2.minDate,\n        maxDate = _ref2.maxDate;\n    var scrollDirection = deltaY > 0 ? 1 : -1;\n    var isMinDateExceeded = minDate && scrollDirection < 0 && minDate.year * 12 + minDate.month > months[0].year * 12 + months[0].month;\n    var isMaxDateExceeded = maxDate && scrollDirection > 0 && maxDate.year * 12 + maxDate.month < months[1].year * 12 + months[1].month;\n\n    if (isMinDateExceeded) {\n      return {\n        scrollPosition: 0,\n        scrollDirection: scrollDirection\n      };\n    }\n\n    if (isMaxDateExceeded) {\n      return {\n        scrollPosition: months[2].height,\n        scrollDirection: scrollDirection\n      };\n    }\n\n    return calculateScrollPosition(months, scrollPosition, deltaY);\n  };\n};\nexport var isMonthVisible = function isMonthVisible(top, month) {\n  return top < config.WRAPPER_HEIGHT && top > -month.height;\n};\nexport var getMonthsHeight = function getMonthsHeight(months) {\n  return months.reduce(function (a, b) {\n    return a + b.height;\n  }, 0);\n};\nexport var getMonths = function getMonths(month, year) {\n  return [-1, 0, 1].map(function (x) {\n    return MonthViewModel.create(month + x, year);\n  });\n};","map":{"version":3,"sources":["C:/Users/ravka/Desktop/react-typescript-task/node_modules/@skbkontur/react-ui/internal/Calendar/CalendarUtils/CalendarUtils.js"],"names":["config","MonthViewModel","calculateScrollPosition","months","scrollPosition","deltaY","scrollDirection","nextScrollPosition","nextMonths","firstMonth","height","getMonths","month","year","lastMonth","length","applyDelta","_ref","_ref2","minDate","maxDate","isMinDateExceeded","isMaxDateExceeded","isMonthVisible","top","WRAPPER_HEIGHT","getMonthsHeight","reduce","a","b","map","x","create"],"mappings":"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","sourcesContent":["import { config } from \"../config\";\nimport { MonthViewModel } from \"../MonthViewModel\";\nexport var calculateScrollPosition = function calculateScrollPosition(months, scrollPosition, deltaY) {\n  var scrollDirection = deltaY > 0 ? 1 : -1;\n  var nextScrollPosition = scrollPosition - deltaY;\n  var nextMonths = months;\n  var firstMonth = months[0];\n\n  if (scrollDirection < 0 && nextScrollPosition >= firstMonth.height) {\n    do {\n      nextScrollPosition -= nextMonths[0].height;\n      nextMonths = getMonths(firstMonth.month, firstMonth.year);\n    } while (nextScrollPosition >= nextMonths[0].height);\n  }\n\n  var lastMonth = months[months.length - 1];\n\n  if (scrollDirection > 0 && nextScrollPosition < 0) {\n    do {\n      nextScrollPosition += nextMonths[1].height;\n      nextMonths = getMonths(lastMonth.month, lastMonth.year);\n    } while (nextScrollPosition < 0);\n  }\n\n  return {\n    scrollPosition: nextScrollPosition,\n    months: nextMonths,\n    scrollDirection: scrollDirection\n  };\n};\nexport var applyDelta = function applyDelta(deltaY) {\n  return function (_ref, _ref2) {\n    var scrollPosition = _ref.scrollPosition,\n        months = _ref.months;\n    var minDate = _ref2.minDate,\n        maxDate = _ref2.maxDate;\n    var scrollDirection = deltaY > 0 ? 1 : -1;\n    var isMinDateExceeded = minDate && scrollDirection < 0 && minDate.year * 12 + minDate.month > months[0].year * 12 + months[0].month;\n    var isMaxDateExceeded = maxDate && scrollDirection > 0 && maxDate.year * 12 + maxDate.month < months[1].year * 12 + months[1].month;\n\n    if (isMinDateExceeded) {\n      return {\n        scrollPosition: 0,\n        scrollDirection: scrollDirection\n      };\n    }\n\n    if (isMaxDateExceeded) {\n      return {\n        scrollPosition: months[2].height,\n        scrollDirection: scrollDirection\n      };\n    }\n\n    return calculateScrollPosition(months, scrollPosition, deltaY);\n  };\n};\nexport var isMonthVisible = function isMonthVisible(top, month) {\n  return top < config.WRAPPER_HEIGHT && top > -month.height;\n};\nexport var getMonthsHeight = function getMonthsHeight(months) {\n  return months.reduce(function (a, b) {\n    return a + b.height;\n  }, 0);\n};\nexport var getMonths = function getMonths(month, year) {\n  return [-1, 0, 1].map(function (x) {\n    return MonthViewModel.create(month + x, year);\n  });\n};"]},"metadata":{},"sourceType":"module"}