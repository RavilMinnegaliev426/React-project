{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport React from 'react';\nimport { ArrowChevronDownIcon } from \"../../../internal/icons/16px\";\nimport { TopBarDropdown } from \"../TopBarDropdown\";\nimport { jsStyles } from \"../TopBar.styles\";\n/**\r\n                                             * Дропдаун с организациями\r\n                                             *\r\n                                             * @visibleName TopBar.OrganizationsDropdown\r\n                                             */\n\nexport var TopBarOrganizations = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(TopBarOrganizations, _React$Component);\n\n  function TopBarOrganizations() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;\n    _this.state = {\n      captionWhiteSpace: 'normal',\n      minWidth: null\n    };\n    _this._caption = void 0;\n    _this._comment = void 0;\n\n    _this._getCaptionRef = function (element) {\n      _this._caption = element;\n    };\n\n    _this._getCommentRef = function (element) {\n      _this._comment = element;\n    };\n\n    return _this;\n  }\n\n  var _proto = TopBarOrganizations.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    this._recalculateWidth();\n  };\n\n  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {\n    if (prevProps.caption !== this.props.caption) {\n      this._recalculateWidth();\n    }\n  };\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        caption = _this$props.caption,\n        comment = _this$props.comment;\n    var title = React.createElement(\"div\", null, React.createElement(\"span\", {\n      className: jsStyles.organizationsTitle(),\n      style: {\n        paddingRight: this._comment ? this._comment.offsetWidth + 30 : undefined\n      }\n    }, React.createElement(\"span\", {\n      ref: this._getCaptionRef\n    }, caption), comment && React.createElement(\"span\", {\n      className: jsStyles.organizationsComment(),\n      ref: this._getCommentRef\n    }, comment), React.createElement(\"span\", {\n      className: jsStyles.organizationsArrow()\n    }, React.createElement(ArrowChevronDownIcon, {\n      color: \"#aaa\",\n      size: 14\n    }))), React.createElement(\"div\", {\n      className: jsStyles.organizationsTitleDummy(),\n      style: {\n        whiteSpace: this.state.captionWhiteSpace\n      }\n    }, React.createElement(\"span\", null, caption), comment && React.createElement(\"span\", {\n      className: jsStyles.organizationsCommentDummy()\n    }, comment)));\n    return React.createElement(TopBarDropdown, _extends({}, this.props, {\n      label: title,\n      minWidth: this.state.minWidth\n    }), this.props.children);\n  };\n\n  _proto._recalculateWidth = function _recalculateWidth() {\n    var commentWidth = this._comment ? this._comment.offsetWidth : 0;\n\n    if (!this._caption) {\n      return;\n    } // 360 is minWidth from guides. Apply it when content is bigger.\n    // 315 is because of 15px left padding and 30px arrow.\n\n\n    if (this._caption.offsetWidth + commentWidth > 315) {\n      this.setState({\n        captionWhiteSpace: 'normal',\n        minWidth: 360\n      });\n    } else {\n      this.setState({\n        captionWhiteSpace: 'nowrap',\n        minWidth: null\n      });\n    }\n  };\n\n  return TopBarOrganizations;\n}(React.Component);\nTopBarOrganizations.__KONTUR_REACT_UI__ = 'TopBarOrganizations';","map":{"version":3,"sources":["C:/Users/ravka/Desktop/react-typescript-task/node_modules/@skbkontur/react-ui/components/TopBar/TopBarOrganizations/TopBarOrganizations.js"],"names":["_extends","_inheritsLoose","React","ArrowChevronDownIcon","TopBarDropdown","jsStyles","TopBarOrganizations","_React$Component","_this","_len","arguments","length","args","Array","_key","call","apply","concat","state","captionWhiteSpace","minWidth","_caption","_comment","_getCaptionRef","element","_getCommentRef","_proto","prototype","componentDidMount","_recalculateWidth","componentDidUpdate","prevProps","caption","props","render","_this$props","comment","title","createElement","className","organizationsTitle","style","paddingRight","offsetWidth","undefined","ref","organizationsComment","organizationsArrow","color","size","organizationsTitleDummy","whiteSpace","organizationsCommentDummy","label","children","commentWidth","setState","Component","__KONTUR_REACT_UI__"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport React from 'react';\nimport { ArrowChevronDownIcon } from \"../../../internal/icons/16px\";\nimport { TopBarDropdown } from \"../TopBarDropdown\";\nimport { jsStyles } from \"../TopBar.styles\";\n/**\r\n                                             * Дропдаун с организациями\r\n                                             *\r\n                                             * @visibleName TopBar.OrganizationsDropdown\r\n                                             */\n\nexport var TopBarOrganizations =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(TopBarOrganizations, _React$Component);\n\n  function TopBarOrganizations() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;\n    _this.state = {\n      captionWhiteSpace: 'normal',\n      minWidth: null\n    };\n    _this._caption = void 0;\n    _this._comment = void 0;\n\n    _this._getCaptionRef = function (element) {\n      _this._caption = element;\n    };\n\n    _this._getCommentRef = function (element) {\n      _this._comment = element;\n    };\n\n    return _this;\n  }\n\n  var _proto = TopBarOrganizations.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    this._recalculateWidth();\n  };\n\n  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {\n    if (prevProps.caption !== this.props.caption) {\n      this._recalculateWidth();\n    }\n  };\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        caption = _this$props.caption,\n        comment = _this$props.comment;\n    var title = React.createElement(\"div\", null, React.createElement(\"span\", {\n      className: jsStyles.organizationsTitle(),\n      style: {\n        paddingRight: this._comment ? this._comment.offsetWidth + 30 : undefined\n      }\n    }, React.createElement(\"span\", {\n      ref: this._getCaptionRef\n    }, caption), comment && React.createElement(\"span\", {\n      className: jsStyles.organizationsComment(),\n      ref: this._getCommentRef\n    }, comment), React.createElement(\"span\", {\n      className: jsStyles.organizationsArrow()\n    }, React.createElement(ArrowChevronDownIcon, {\n      color: \"#aaa\",\n      size: 14\n    }))), React.createElement(\"div\", {\n      className: jsStyles.organizationsTitleDummy(),\n      style: {\n        whiteSpace: this.state.captionWhiteSpace\n      }\n    }, React.createElement(\"span\", null, caption), comment && React.createElement(\"span\", {\n      className: jsStyles.organizationsCommentDummy()\n    }, comment)));\n    return React.createElement(TopBarDropdown, _extends({}, this.props, {\n      label: title,\n      minWidth: this.state.minWidth\n    }), this.props.children);\n  };\n\n  _proto._recalculateWidth = function _recalculateWidth() {\n    var commentWidth = this._comment ? this._comment.offsetWidth : 0;\n\n    if (!this._caption) {\n      return;\n    } // 360 is minWidth from guides. Apply it when content is bigger.\n    // 315 is because of 15px left padding and 30px arrow.\n\n\n    if (this._caption.offsetWidth + commentWidth > 315) {\n      this.setState({\n        captionWhiteSpace: 'normal',\n        minWidth: 360\n      });\n    } else {\n      this.setState({\n        captionWhiteSpace: 'nowrap',\n        minWidth: null\n      });\n    }\n  };\n\n  return TopBarOrganizations;\n}(React.Component);\nTopBarOrganizations.__KONTUR_REACT_UI__ = 'TopBarOrganizations';"]},"metadata":{},"sourceType":"module"}