{"ast":null,"code":"import * as Keyboard from \"../../../lib/events/keyboard/identifiers\";\nimport { KeyboardActionExctracterBuilder } from \"../../../lib/extractKeyboardAction\";\nexport var CURRENCY_INPUT_ACTIONS = {\n  Unknown: 0,\n  Ignore: 1,\n  MoveCursorLeft: 11,\n  MoveCursorRight: 12,\n  Home: 13,\n  End: 14,\n  ExtendSelectionLeft: 21,\n  ExtendSelectionRight: 22,\n  FullSelection: 23,\n  ExtendSelectionToStart: 24,\n  ExtendSelectionToEnd: 25,\n  Backspace: 31,\n  Delete: 32,\n  Submit: 33\n};\nexport var extractAction = new KeyboardActionExctracterBuilder().add(CURRENCY_INPUT_ACTIONS.Submit, Keyboard.isKeyEnter).add(CURRENCY_INPUT_ACTIONS.ExtendSelectionLeft, Keyboard.isModShift(Keyboard.isKeyArrowLeft)).add(CURRENCY_INPUT_ACTIONS.ExtendSelectionRight, Keyboard.isModShift(Keyboard.isKeyArrowRight)).add(CURRENCY_INPUT_ACTIONS.FullSelection, Keyboard.isShortcutSelectAll).add(CURRENCY_INPUT_ACTIONS.ExtendSelectionToStart, Keyboard.isModShift(Keyboard.isKeyHome)).add(CURRENCY_INPUT_ACTIONS.ExtendSelectionToEnd, Keyboard.isModShift(Keyboard.isKeyEnd)).add(CURRENCY_INPUT_ACTIONS.MoveCursorLeft, Keyboard.isKeyArrowLeft).add(CURRENCY_INPUT_ACTIONS.MoveCursorRight, Keyboard.isKeyArrowRight).add(CURRENCY_INPUT_ACTIONS.Home, Keyboard.isUnmodified(Keyboard.isKeyHome)).add(CURRENCY_INPUT_ACTIONS.End, Keyboard.isUnmodified(Keyboard.isKeyEnd)).add(CURRENCY_INPUT_ACTIONS.Backspace, Keyboard.isKeyBackspace).add(CURRENCY_INPUT_ACTIONS.Delete, Keyboard.isKeyDelete).add(CURRENCY_INPUT_ACTIONS.Ignore, function (e) {\n  return Keyboard.isModified()(e) || Keyboard.isKeyTab(e);\n}).build(CURRENCY_INPUT_ACTIONS.Unknown);","map":{"version":3,"sources":["C:/Users/ravka/Desktop/react-typescript-task/node_modules/@skbkontur/react-ui/components/CurrencyInput/CurrencyInputKeyboardActions/CurrencyInputKeyboardActions.js"],"names":["Keyboard","KeyboardActionExctracterBuilder","CURRENCY_INPUT_ACTIONS","Unknown","Ignore","MoveCursorLeft","MoveCursorRight","Home","End","ExtendSelectionLeft","ExtendSelectionRight","FullSelection","ExtendSelectionToStart","ExtendSelectionToEnd","Backspace","Delete","Submit","extractAction","add","isKeyEnter","isModShift","isKeyArrowLeft","isKeyArrowRight","isShortcutSelectAll","isKeyHome","isKeyEnd","isUnmodified","isKeyBackspace","isKeyDelete","e","isModified","isKeyTab","build"],"mappings":"AAAA,OAAO,KAAKA,QAAZ,MAA0B,0CAA1B;AACA,SAASC,+BAAT,QAAgD,oCAAhD;AACA,OAAO,IAAIC,sBAAsB,GAAG;AAClCC,EAAAA,OAAO,EAAE,CADyB;AAElCC,EAAAA,MAAM,EAAE,CAF0B;AAGlCC,EAAAA,cAAc,EAAE,EAHkB;AAIlCC,EAAAA,eAAe,EAAE,EAJiB;AAKlCC,EAAAA,IAAI,EAAE,EAL4B;AAMlCC,EAAAA,GAAG,EAAE,EAN6B;AAOlCC,EAAAA,mBAAmB,EAAE,EAPa;AAQlCC,EAAAA,oBAAoB,EAAE,EARY;AASlCC,EAAAA,aAAa,EAAE,EATmB;AAUlCC,EAAAA,sBAAsB,EAAE,EAVU;AAWlCC,EAAAA,oBAAoB,EAAE,EAXY;AAYlCC,EAAAA,SAAS,EAAE,EAZuB;AAalCC,EAAAA,MAAM,EAAE,EAb0B;AAclCC,EAAAA,MAAM,EAAE;AAd0B,CAA7B;AAgBP,OAAO,IAAIC,aAAa,GAAG,IAAIhB,+BAAJ,GAAsCiB,GAAtC,CAA0ChB,sBAAsB,CAACc,MAAjE,EAAyEhB,QAAQ,CAACmB,UAAlF,EAA8FD,GAA9F,CAAkGhB,sBAAsB,CAACO,mBAAzH,EAA8IT,QAAQ,CAACoB,UAAT,CAAoBpB,QAAQ,CAACqB,cAA7B,CAA9I,EAA4LH,GAA5L,CAAgMhB,sBAAsB,CAACQ,oBAAvN,EAA6OV,QAAQ,CAACoB,UAAT,CAAoBpB,QAAQ,CAACsB,eAA7B,CAA7O,EAA4RJ,GAA5R,CAAgShB,sBAAsB,CAACS,aAAvT,EAAsUX,QAAQ,CAACuB,mBAA/U,EAAoWL,GAApW,CAAwWhB,sBAAsB,CAACU,sBAA/X,EAAuZZ,QAAQ,CAACoB,UAAT,CAAoBpB,QAAQ,CAACwB,SAA7B,CAAvZ,EAAgcN,GAAhc,CAAochB,sBAAsB,CAACW,oBAA3d,EAAifb,QAAQ,CAACoB,UAAT,CAAoBpB,QAAQ,CAACyB,QAA7B,CAAjf,EAAyhBP,GAAzhB,CAA6hBhB,sBAAsB,CAACG,cAApjB,EAAokBL,QAAQ,CAACqB,cAA7kB,EAA6lBH,GAA7lB,CAAimBhB,sBAAsB,CAACI,eAAxnB,EAAyoBN,QAAQ,CAACsB,eAAlpB,EAAmqBJ,GAAnqB,CAAuqBhB,sBAAsB,CAACK,IAA9rB,EAAosBP,QAAQ,CAAC0B,YAAT,CAAsB1B,QAAQ,CAACwB,SAA/B,CAApsB,EAA+uBN,GAA/uB,CAAmvBhB,sBAAsB,CAACM,GAA1wB,EAA+wBR,QAAQ,CAAC0B,YAAT,CAAsB1B,QAAQ,CAACyB,QAA/B,CAA/wB,EAAyzBP,GAAzzB,CAA6zBhB,sBAAsB,CAACY,SAAp1B,EAA+1Bd,QAAQ,CAAC2B,cAAx2B,EAAw3BT,GAAx3B,CAA43BhB,sBAAsB,CAACa,MAAn5B,EAA25Bf,QAAQ,CAAC4B,WAAp6B,EAAi7BV,GAAj7B,CAAq7BhB,sBAAsB,CAACE,MAA58B,EAAo9B,UAAUyB,CAAV,EAAa;AAC1/B,SAAO7B,QAAQ,CAAC8B,UAAT,GAAsBD,CAAtB,KAA4B7B,QAAQ,CAAC+B,QAAT,CAAkBF,CAAlB,CAAnC;AACD,CAF0B,EAExBG,KAFwB,CAElB9B,sBAAsB,CAACC,OAFL,CAApB","sourcesContent":["import * as Keyboard from \"../../../lib/events/keyboard/identifiers\";\nimport { KeyboardActionExctracterBuilder } from \"../../../lib/extractKeyboardAction\";\nexport var CURRENCY_INPUT_ACTIONS = {\n  Unknown: 0,\n  Ignore: 1,\n  MoveCursorLeft: 11,\n  MoveCursorRight: 12,\n  Home: 13,\n  End: 14,\n  ExtendSelectionLeft: 21,\n  ExtendSelectionRight: 22,\n  FullSelection: 23,\n  ExtendSelectionToStart: 24,\n  ExtendSelectionToEnd: 25,\n  Backspace: 31,\n  Delete: 32,\n  Submit: 33\n};\nexport var extractAction = new KeyboardActionExctracterBuilder().add(CURRENCY_INPUT_ACTIONS.Submit, Keyboard.isKeyEnter).add(CURRENCY_INPUT_ACTIONS.ExtendSelectionLeft, Keyboard.isModShift(Keyboard.isKeyArrowLeft)).add(CURRENCY_INPUT_ACTIONS.ExtendSelectionRight, Keyboard.isModShift(Keyboard.isKeyArrowRight)).add(CURRENCY_INPUT_ACTIONS.FullSelection, Keyboard.isShortcutSelectAll).add(CURRENCY_INPUT_ACTIONS.ExtendSelectionToStart, Keyboard.isModShift(Keyboard.isKeyHome)).add(CURRENCY_INPUT_ACTIONS.ExtendSelectionToEnd, Keyboard.isModShift(Keyboard.isKeyEnd)).add(CURRENCY_INPUT_ACTIONS.MoveCursorLeft, Keyboard.isKeyArrowLeft).add(CURRENCY_INPUT_ACTIONS.MoveCursorRight, Keyboard.isKeyArrowRight).add(CURRENCY_INPUT_ACTIONS.Home, Keyboard.isUnmodified(Keyboard.isKeyHome)).add(CURRENCY_INPUT_ACTIONS.End, Keyboard.isUnmodified(Keyboard.isKeyEnd)).add(CURRENCY_INPUT_ACTIONS.Backspace, Keyboard.isKeyBackspace).add(CURRENCY_INPUT_ACTIONS.Delete, Keyboard.isKeyDelete).add(CURRENCY_INPUT_ACTIONS.Ignore, function (e) {\n  return Keyboard.isModified()(e) || Keyboard.isKeyTab(e);\n}).build(CURRENCY_INPUT_ACTIONS.Unknown);"]},"metadata":{},"sourceType":"module"}