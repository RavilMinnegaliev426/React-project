{"ast":null,"code":"import _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport React from 'react';\nimport { PopupMenu } from \"../../../internal/PopupMenu\";\nimport { isProductionEnv } from \"../../../lib/currentEnvironment\";\n/**\r\n                                                                 * Меню, раскрывающееся по клику на переданный в ```caption``` элемент.\r\n                                                                 * Положение зависит от переданного массива ```positions``` и работает так:\r\n                                                                 * первое значаение в массиве - дефолтная позиция, меню раскрывается так, если ничего не мешает ему раскрыться,\r\n                                                                 * если раскрыться в данной позиции не получается - берется следующие значение, и так далее.\r\n                                                                 * Если меню должно раскрываться только в одну сторону - передаем в ```positions``` массив с одним элементом.\r\n                                                                 * Если ```positions``` передан или передан пустой массив, используются все возможные положения.\r\n                                                                 */\n\nexport var TooltipMenu = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(TooltipMenu, _React$Component);\n\n  function TooltipMenu(props) {\n    var _this;\n\n    _this = _React$Component.call(this, props) || this;\n\n    if (!props.caption && !isProductionEnv) {\n      throw new Error('Prop \"caption\" is required!!!');\n    }\n\n    return _this;\n  }\n\n  var _proto = TooltipMenu.prototype;\n\n  _proto.render = function render() {\n    if (!this.props.caption) {\n      return null;\n    }\n\n    return React.createElement(PopupMenu, {\n      menuMaxHeight: this.props.menuMaxHeight,\n      menuWidth: this.props.menuWidth,\n      caption: this.props.caption,\n      header: this.props.header,\n      footer: this.props.footer,\n      positions: this.props.positions,\n      popupHasPin: true,\n      popupMargin: 10,\n      popupPinOffset: 15,\n      disableAnimations: this.props.disableAnimations\n    }, this.props.children);\n  };\n\n  return TooltipMenu;\n}(React.Component);\nTooltipMenu.__KONTUR_REACT_UI__ = 'TooltipMenu';\nTooltipMenu.defaultProps = {\n  disableAnimations: Boolean(process.env.enableReactTesting)\n};","map":{"version":3,"sources":["C:/Users/ravka/Desktop/react-typescript-task/node_modules/@skbkontur/react-ui/components/TooltipMenu/TooltipMenu/TooltipMenu.js"],"names":["_inheritsLoose","React","PopupMenu","isProductionEnv","TooltipMenu","_React$Component","props","_this","call","caption","Error","_proto","prototype","render","createElement","menuMaxHeight","menuWidth","header","footer","positions","popupHasPin","popupMargin","popupPinOffset","disableAnimations","children","Component","__KONTUR_REACT_UI__","defaultProps","Boolean","process","env","enableReactTesting"],"mappings":"AAAA,OAAOA,cAAP,MAA2B,0CAA3B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,6BAA1B;AACA,SAASC,eAAT,QAAgC,iCAAhC;AACA;;;;;;;;;AASA,OAAO,IAAIC,WAAW,GACtB,aACA,UAAUC,gBAAV,EAA4B;AAC1BL,EAAAA,cAAc,CAACI,WAAD,EAAcC,gBAAd,CAAd;;AAEA,WAASD,WAAT,CAAqBE,KAArB,EAA4B;AAC1B,QAAIC,KAAJ;;AAEAA,IAAAA,KAAK,GAAGF,gBAAgB,CAACG,IAAjB,CAAsB,IAAtB,EAA4BF,KAA5B,KAAsC,IAA9C;;AAEA,QAAI,CAACA,KAAK,CAACG,OAAP,IAAkB,CAACN,eAAvB,EAAwC;AACtC,YAAM,IAAIO,KAAJ,CAAU,+BAAV,CAAN;AACD;;AAED,WAAOH,KAAP;AACD;;AAED,MAAII,MAAM,GAAGP,WAAW,CAACQ,SAAzB;;AAEAD,EAAAA,MAAM,CAACE,MAAP,GAAgB,SAASA,MAAT,GAAkB;AAChC,QAAI,CAAC,KAAKP,KAAL,CAAWG,OAAhB,EAAyB;AACvB,aAAO,IAAP;AACD;;AAED,WAAOR,KAAK,CAACa,aAAN,CAAoBZ,SAApB,EAA+B;AACpCa,MAAAA,aAAa,EAAE,KAAKT,KAAL,CAAWS,aADU;AAEpCC,MAAAA,SAAS,EAAE,KAAKV,KAAL,CAAWU,SAFc;AAGpCP,MAAAA,OAAO,EAAE,KAAKH,KAAL,CAAWG,OAHgB;AAIpCQ,MAAAA,MAAM,EAAE,KAAKX,KAAL,CAAWW,MAJiB;AAKpCC,MAAAA,MAAM,EAAE,KAAKZ,KAAL,CAAWY,MALiB;AAMpCC,MAAAA,SAAS,EAAE,KAAKb,KAAL,CAAWa,SANc;AAOpCC,MAAAA,WAAW,EAAE,IAPuB;AAQpCC,MAAAA,WAAW,EAAE,EARuB;AASpCC,MAAAA,cAAc,EAAE,EAToB;AAUpCC,MAAAA,iBAAiB,EAAE,KAAKjB,KAAL,CAAWiB;AAVM,KAA/B,EAWJ,KAAKjB,KAAL,CAAWkB,QAXP,CAAP;AAYD,GAjBD;;AAmBA,SAAOpB,WAAP;AACD,CArCD,CAqCEH,KAAK,CAACwB,SArCR,CAFO;AAwCPrB,WAAW,CAACsB,mBAAZ,GAAkC,aAAlC;AACAtB,WAAW,CAACuB,YAAZ,GAA2B;AACzBJ,EAAAA,iBAAiB,EAAEK,OAAO,CAACC,OAAO,CAACC,GAAR,CAAYC,kBAAb;AADD,CAA3B","sourcesContent":["import _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport React from 'react';\nimport { PopupMenu } from \"../../../internal/PopupMenu\";\nimport { isProductionEnv } from \"../../../lib/currentEnvironment\";\n/**\r\n                                                                 * Меню, раскрывающееся по клику на переданный в ```caption``` элемент.\r\n                                                                 * Положение зависит от переданного массива ```positions``` и работает так:\r\n                                                                 * первое значаение в массиве - дефолтная позиция, меню раскрывается так, если ничего не мешает ему раскрыться,\r\n                                                                 * если раскрыться в данной позиции не получается - берется следующие значение, и так далее.\r\n                                                                 * Если меню должно раскрываться только в одну сторону - передаем в ```positions``` массив с одним элементом.\r\n                                                                 * Если ```positions``` передан или передан пустой массив, используются все возможные положения.\r\n                                                                 */\n\nexport var TooltipMenu =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(TooltipMenu, _React$Component);\n\n  function TooltipMenu(props) {\n    var _this;\n\n    _this = _React$Component.call(this, props) || this;\n\n    if (!props.caption && !isProductionEnv) {\n      throw new Error('Prop \"caption\" is required!!!');\n    }\n\n    return _this;\n  }\n\n  var _proto = TooltipMenu.prototype;\n\n  _proto.render = function render() {\n    if (!this.props.caption) {\n      return null;\n    }\n\n    return React.createElement(PopupMenu, {\n      menuMaxHeight: this.props.menuMaxHeight,\n      menuWidth: this.props.menuWidth,\n      caption: this.props.caption,\n      header: this.props.header,\n      footer: this.props.footer,\n      positions: this.props.positions,\n      popupHasPin: true,\n      popupMargin: 10,\n      popupPinOffset: 15,\n      disableAnimations: this.props.disableAnimations\n    }, this.props.children);\n  };\n\n  return TooltipMenu;\n}(React.Component);\nTooltipMenu.__KONTUR_REACT_UI__ = 'TooltipMenu';\nTooltipMenu.defaultProps = {\n  disableAnimations: Boolean(process.env.enableReactTesting)\n};"]},"metadata":{},"sourceType":"module"}