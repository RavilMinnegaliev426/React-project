{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport React from 'react';\nimport ReactInputMask from 'react-input-mask';\nimport { ThemeContext } from \"../../../lib/theming/ThemeContext\";\nimport { jsStyles } from \"../MaskedInput.styles\";\nexport var MaskedInput = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(MaskedInput, _React$Component);\n\n  function MaskedInput(_props) {\n    var _this;\n\n    _this = _React$Component.call(this, _props) || this;\n    _this.input = null;\n    _this.theme = void 0;\n    _this.reactInputMask = null;\n\n    _this.getValue = function (props) {\n      var value = props.value,\n          defaultValue = props.defaultValue;\n      return value !== undefined ? value.toString() : defaultValue !== undefined ? defaultValue.toString() : '';\n    };\n\n    _this.refInput = function (input) {\n      _this.input = input;\n    };\n\n    _this.refMaskedInput = function (reactInputMask) {\n      _this.reactInputMask = reactInputMask;\n    };\n\n    _this.handleChange = function (event) {\n      if (event.target.value === _this.state.value) {\n        _this.handleUnexpectedInput();\n      } else {\n        _this.setState({\n          value: event.target.value\n        });\n\n        if (_this.props.onValueChange) {\n          _this.props.onValueChange(event.target.value);\n        }\n\n        if (_this.props.onChange) {\n          _this.props.onChange(event);\n        }\n      }\n    };\n\n    _this.handleFocus = function (event) {\n      _this.setState({\n        focused: true\n      });\n\n      if (_this.props.onFocus) {\n        _this.props.onFocus(event);\n      }\n    };\n\n    _this.handleBlur = function (event) {\n      _this.setState({\n        focused: false\n      });\n\n      if (_this.props.onBlur) {\n        _this.props.onBlur(event);\n      }\n    };\n\n    _this.preprocess = function (newState, oldState, userInput, options) {\n      var visibleMaskChars = new Array(options.mask.length).fill(_this.props.maskChar);\n\n      if (newState.value !== oldState.value && userInput === null) {\n        _this.setState({\n          value: newState.value\n        });\n      }\n\n      options.mask.split('').forEach(function (_char, index) {\n        if (options.permanents.includes(index)) {\n          visibleMaskChars[index] = _char;\n        }\n\n        if (newState.value[index]) {\n          visibleMaskChars[index] = newState.value[index];\n        }\n      });\n      var emptyValue = visibleMaskChars.join('');\n\n      if (_this.state.emptyValue !== emptyValue) {\n        _this.setState({\n          emptyValue: emptyValue\n        });\n      }\n\n      return newState;\n    };\n\n    _this.isMaskVisible = function () {\n      return _this.props.alwaysShowMask || _this.state.focused;\n    };\n\n    _this.handleUnexpectedInput = function () {\n      if (_this.props.onUnexpectedInput) {\n        _this.props.onUnexpectedInput(_this.state.value);\n      }\n    };\n\n    _this.state = {\n      value: _this.getValue(_props),\n      emptyValue: '',\n      focused: false\n    };\n    return _this;\n  }\n\n  var _proto = MaskedInput.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    if (this.reactInputMask) {\n      // FIXME: принудительно вызываем beforeMaskedValueChange, чтобы получить emptyValue\n      this.reactInputMask.forceUpdate();\n    }\n  };\n\n  _proto.UNSAFE_componentWillReceiveProps = function UNSAFE_componentWillReceiveProps(nextProps) {\n    if (this.props.value !== nextProps.value) {\n      this.setState({\n        value: nextProps.value ? nextProps.value.toString() : ''\n      });\n    }\n  };\n\n  _proto.render = function render() {\n    var _this2 = this;\n\n    return React.createElement(ThemeContext.Consumer, null, function (theme) {\n      _this2.theme = theme;\n      return _this2.renderMain();\n    });\n  };\n\n  _proto.renderMain = function renderMain() {\n    var _this$props = this.props,\n        maskChar = _this$props.maskChar,\n        alwaysShowMask = _this$props.alwaysShowMask,\n        hasLeftIcon = _this$props.hasLeftIcon,\n        hasRightIcon = _this$props.hasRightIcon,\n        maxLength = _this$props.maxLength,\n        onValueChange = _this$props.onValueChange,\n        onUnexpectedInput = _this$props.onUnexpectedInput,\n        defaultValue = _this$props.defaultValue,\n        inputProps = _objectWithoutPropertiesLoose(_this$props, [\"maskChar\", \"alwaysShowMask\", \"hasLeftIcon\", \"hasRightIcon\", \"maxLength\", \"onValueChange\", \"onUnexpectedInput\", \"defaultValue\"]);\n\n    return React.createElement(\"span\", {\n      className: jsStyles.container(),\n      \"x-ms-format-detection\": \"none\"\n    }, React.createElement(ReactInputMask, _extends({}, inputProps, {\n      maskChar: null,\n      beforeMaskedValueChange: this.preprocess,\n      alwaysShowMask: false,\n      onChange: this.handleChange,\n      onFocus: this.handleFocus,\n      onBlur: this.handleBlur,\n      value: this.state.value,\n      inputRef: this.refInput,\n      ref: this.refMaskedInput\n    })), this.isMaskVisible() && React.createElement(\"span\", {\n      className: jsStyles.inputMask(this.theme)\n    }, React.createElement(\"span\", {\n      style: {\n        color: 'transparent'\n      }\n    }, this.state.emptyValue.slice(0, this.state.value.length)), this.state.emptyValue.slice(this.state.value.length)));\n  };\n\n  return MaskedInput;\n}(React.Component);\nMaskedInput.__KONTUR_REACT_UI__ = 'MaskedInput';","map":{"version":3,"sources":["C:/Users/ravka/Desktop/react-typescript-task/node_modules/@skbkontur/react-ui/internal/MaskedInput/MaskedInput/MaskedInput.js"],"names":["_extends","_objectWithoutPropertiesLoose","_inheritsLoose","React","ReactInputMask","ThemeContext","jsStyles","MaskedInput","_React$Component","_props","_this","call","input","theme","reactInputMask","getValue","props","value","defaultValue","undefined","toString","refInput","refMaskedInput","handleChange","event","target","state","handleUnexpectedInput","setState","onValueChange","onChange","handleFocus","focused","onFocus","handleBlur","onBlur","preprocess","newState","oldState","userInput","options","visibleMaskChars","Array","mask","length","fill","maskChar","split","forEach","_char","index","permanents","includes","emptyValue","join","isMaskVisible","alwaysShowMask","onUnexpectedInput","_proto","prototype","componentDidMount","forceUpdate","UNSAFE_componentWillReceiveProps","nextProps","render","_this2","createElement","Consumer","renderMain","_this$props","hasLeftIcon","hasRightIcon","maxLength","inputProps","className","container","beforeMaskedValueChange","inputRef","ref","inputMask","style","color","slice","Component","__KONTUR_REACT_UI__"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport React from 'react';\nimport ReactInputMask from 'react-input-mask';\nimport { ThemeContext } from \"../../../lib/theming/ThemeContext\";\nimport { jsStyles } from \"../MaskedInput.styles\";\nexport var MaskedInput =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(MaskedInput, _React$Component);\n\n  function MaskedInput(_props) {\n    var _this;\n\n    _this = _React$Component.call(this, _props) || this;\n    _this.input = null;\n    _this.theme = void 0;\n    _this.reactInputMask = null;\n\n    _this.getValue = function (props) {\n      var value = props.value,\n          defaultValue = props.defaultValue;\n      return value !== undefined ? value.toString() : defaultValue !== undefined ? defaultValue.toString() : '';\n    };\n\n    _this.refInput = function (input) {\n      _this.input = input;\n    };\n\n    _this.refMaskedInput = function (reactInputMask) {\n      _this.reactInputMask = reactInputMask;\n    };\n\n    _this.handleChange = function (event) {\n      if (event.target.value === _this.state.value) {\n        _this.handleUnexpectedInput();\n      } else {\n        _this.setState({\n          value: event.target.value\n        });\n\n        if (_this.props.onValueChange) {\n          _this.props.onValueChange(event.target.value);\n        }\n\n        if (_this.props.onChange) {\n          _this.props.onChange(event);\n        }\n      }\n    };\n\n    _this.handleFocus = function (event) {\n      _this.setState({\n        focused: true\n      });\n\n      if (_this.props.onFocus) {\n        _this.props.onFocus(event);\n      }\n    };\n\n    _this.handleBlur = function (event) {\n      _this.setState({\n        focused: false\n      });\n\n      if (_this.props.onBlur) {\n        _this.props.onBlur(event);\n      }\n    };\n\n    _this.preprocess = function (newState, oldState, userInput, options) {\n      var visibleMaskChars = new Array(options.mask.length).fill(_this.props.maskChar);\n\n      if (newState.value !== oldState.value && userInput === null) {\n        _this.setState({\n          value: newState.value\n        });\n      }\n\n      options.mask.split('').forEach(function (_char, index) {\n        if (options.permanents.includes(index)) {\n          visibleMaskChars[index] = _char;\n        }\n\n        if (newState.value[index]) {\n          visibleMaskChars[index] = newState.value[index];\n        }\n      });\n      var emptyValue = visibleMaskChars.join('');\n\n      if (_this.state.emptyValue !== emptyValue) {\n        _this.setState({\n          emptyValue: emptyValue\n        });\n      }\n\n      return newState;\n    };\n\n    _this.isMaskVisible = function () {\n      return _this.props.alwaysShowMask || _this.state.focused;\n    };\n\n    _this.handleUnexpectedInput = function () {\n      if (_this.props.onUnexpectedInput) {\n        _this.props.onUnexpectedInput(_this.state.value);\n      }\n    };\n\n    _this.state = {\n      value: _this.getValue(_props),\n      emptyValue: '',\n      focused: false\n    };\n    return _this;\n  }\n\n  var _proto = MaskedInput.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    if (this.reactInputMask) {\n      // FIXME: принудительно вызываем beforeMaskedValueChange, чтобы получить emptyValue\n      this.reactInputMask.forceUpdate();\n    }\n  };\n\n  _proto.UNSAFE_componentWillReceiveProps = function UNSAFE_componentWillReceiveProps(nextProps) {\n    if (this.props.value !== nextProps.value) {\n      this.setState({\n        value: nextProps.value ? nextProps.value.toString() : ''\n      });\n    }\n  };\n\n  _proto.render = function render() {\n    var _this2 = this;\n\n    return React.createElement(ThemeContext.Consumer, null, function (theme) {\n      _this2.theme = theme;\n      return _this2.renderMain();\n    });\n  };\n\n  _proto.renderMain = function renderMain() {\n    var _this$props = this.props,\n        maskChar = _this$props.maskChar,\n        alwaysShowMask = _this$props.alwaysShowMask,\n        hasLeftIcon = _this$props.hasLeftIcon,\n        hasRightIcon = _this$props.hasRightIcon,\n        maxLength = _this$props.maxLength,\n        onValueChange = _this$props.onValueChange,\n        onUnexpectedInput = _this$props.onUnexpectedInput,\n        defaultValue = _this$props.defaultValue,\n        inputProps = _objectWithoutPropertiesLoose(_this$props, [\"maskChar\", \"alwaysShowMask\", \"hasLeftIcon\", \"hasRightIcon\", \"maxLength\", \"onValueChange\", \"onUnexpectedInput\", \"defaultValue\"]);\n\n    return React.createElement(\"span\", {\n      className: jsStyles.container(),\n      \"x-ms-format-detection\": \"none\"\n    }, React.createElement(ReactInputMask, _extends({}, inputProps, {\n      maskChar: null,\n      beforeMaskedValueChange: this.preprocess,\n      alwaysShowMask: false,\n      onChange: this.handleChange,\n      onFocus: this.handleFocus,\n      onBlur: this.handleBlur,\n      value: this.state.value,\n      inputRef: this.refInput,\n      ref: this.refMaskedInput\n    })), this.isMaskVisible() && React.createElement(\"span\", {\n      className: jsStyles.inputMask(this.theme)\n    }, React.createElement(\"span\", {\n      style: {\n        color: 'transparent'\n      }\n    }, this.state.emptyValue.slice(0, this.state.value.length)), this.state.emptyValue.slice(this.state.value.length)));\n  };\n\n  return MaskedInput;\n}(React.Component);\nMaskedInput.__KONTUR_REACT_UI__ = 'MaskedInput';"]},"metadata":{},"sourceType":"module"}