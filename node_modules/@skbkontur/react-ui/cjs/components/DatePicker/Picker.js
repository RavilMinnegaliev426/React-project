"use strict";var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");exports.__esModule = true;exports.Picker = void 0;var _inheritsLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/inheritsLoose"));var _react = _interopRequireDefault(require("react"));
var _shallowequal = _interopRequireDefault(require("shallowequal"));

var _InternalDate = require("../../lib/date/InternalDate");
var _InternalDateGetter = require("../../lib/date/InternalDateGetter");
var _Calendar = require("../../internal/Calendar");
var _decorators = require("../../lib/locale/decorators");


var _ThemeContext = require("../../lib/theming/ThemeContext");

var _Picker = require("./Picker.styles");
var _locale = require("./locale");var _dec, _class, _class2, _temp;
















var getTodayCalendarDate = function getTodayCalendarDate() {
  var d = new Date();
  return {
    date: d.getDate(),
    month: d.getMonth(),
    year: d.getFullYear() };

};var


Picker = (_dec = (0, _decorators.locale)('DatePicker', _locale.DatePickerLocaleHelper), _dec(_class = (_temp = _class2 = /*#__PURE__*/function (_React$Component) {(0, _inheritsLoose2.default)(Picker, _React$Component);






  function Picker(props) {var _this;
    _this = _React$Component.call(this, props) || this;_this.theme = void 0;_this.calendar = null;_this.locale = void 0;_this.












































    scrollToMonth = function (month, year) {
      if (_this.calendar) {
        _this.calendar.scrollToMonth(month, year);
      }
    };_this.
















    handleSelectToday = function (today) {return function () {
        if (_this.props.onSelect) {
          _this.props.onSelect(today.toNativeFormat());
        }
        if (_this.calendar) {var _this$state$today =
          _this.state.today,month = _this$state$today.month,year = _this$state$today.year;
          _this.calendar.scrollToMonth(month, year);
        }
      };};_this.

    getInitialDate = function (today) {
      if (_this.props.value) {
        return _this.props.value;
      }

      if (_this.props.minDate && (0, _Calendar.isLess)(today, _this.props.minDate)) {
        return _this.props.minDate;
      }

      if (_this.props.maxDate && (0, _Calendar.isGreater)(today, _this.props.maxDate)) {
        return _this.props.maxDate;
      }

      return today;
    };var _today = getTodayCalendarDate();_this.state = { date: _this.getInitialDate(_today), today: _today };return _this;}var _proto = Picker.prototype;_proto.componentDidUpdate = function componentDidUpdate(prevProps) {var value = this.props.value;if (value && !(0, _shallowequal.default)(value, prevProps.value)) {this.scrollToMonth(value.month, value.year);}};_proto.render = function render() {var _this2 = this;return _react.default.createElement(_ThemeContext.ThemeContext.Consumer, null, function (theme) {_this2.theme = theme;return _this2.renderMain();});};_proto.renderMain = function renderMain() {var _this3 = this;var date = this.state.date;return _react.default.createElement("div", { className: _Picker.jsStyles.root(this.theme), onMouseDown: function onMouseDown(e) {return e.preventDefault();} }, _react.default.createElement(_Calendar.Calendar, { ref: function ref(c) {return _this3.calendar = c;}, value: this.props.value, initialMonth: date.month, initialYear: date.year, onSelect: this.props.onPick, minDate: this.props.minDate, maxDate: this.props.maxDate, isHoliday: this.props.isHoliday }), this.props.enableTodayLink && this.renderTodayLink());};_proto.renderTodayLink = function renderTodayLink() {var _this$locale = this.locale,order = _this$locale.order,separator = _this$locale.separator;var today = new _InternalDate.InternalDate({ order: order, separator: separator }).setComponents(_InternalDateGetter.InternalDateGetter.getTodayComponents());return _react.default.createElement("button", { "data-tid": "Picker__todayWrapper", className: _Picker.jsStyles.todayWrapper(this.theme), onClick: this.handleSelectToday(today), tabIndex: -1 }, this.locale.today + " " + today.toString({ withPad: true, withSeparator: true }));};return Picker;}(_react.default.Component), _class2.__KONTUR_REACT_UI__ = 'Picker', _temp)) || _class);exports.Picker = Picker;