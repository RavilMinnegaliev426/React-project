{"version":3,"sources":["DatePicker.tsx"],"names":["INPUT_PASS_PROPS","autoFocus","disabled","warning","error","size","onKeyDown","DatePicker","state","opened","input","focused","internalDate","parseValueToDate","props","value","minDate","maxDate","getInputRef","ref","handleFocus","setState","onFocus","handleBlur","close","onBlur","handlePick","dateShape","handleSelect","blur","date","month","year","InternalDateTransformer","dateToInternalString","onValueChange","isHoliday","isWeekend","dateString","componentDidMount","focus","UNSAFE_componentWillReceiveProps","nextProps","render","picker","toNativeFormat","menuAlign","undefined","enableTodayLink","jsStyles","root","width","onMouseEnter","onMouseLeave","onMouseOver","InternalDate","validate","checks","InternalDateValidateCheck","NotNull","Native","React","Component","__KONTUR_REACT_UI__","propTypes","PropTypes","bool","string","isRequired","oneOf","oneOfType","number","func","defaultProps","MIN_FULLDATE","MAX_FULLDATE","_day","range","order","InternalDateOrder","DMY","separator","InternalDateSeparator","Dot","setRangeStart","setRangeEnd","parseValue","Number","Limits","Range"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport { findDOMNode } from 'react-dom';\r\n\r\nimport { InternalDate } from '../../lib/date/InternalDate';\r\nimport { InternalDateTransformer } from '../../lib/date/InternalDateTransformer';\r\nimport { MAX_FULLDATE, MIN_FULLDATE } from '../../lib/date/constants';\r\nimport { InternalDateOrder, InternalDateSeparator, InternalDateValidateCheck } from '../../lib/date/types';\r\nimport { Nullable } from '../../typings/utility-types';\r\nimport { CalendarDateShape } from '../../internal/Calendar';\r\nimport { DateInput } from '../DateInput';\r\nimport { DropdownContainer } from '../../internal/DropdownContainer';\r\nimport { filterProps } from '../../lib/filterProps';\r\n\r\nimport { Picker } from './Picker';\r\nimport { jsStyles } from './DatePicker.styles';\r\n\r\nconst INPUT_PASS_PROPS = {\r\n  autoFocus: true,\r\n  disabled: true,\r\n  warning: true,\r\n  error: true,\r\n  size: true,\r\n  onKeyDown: true,\r\n};\r\n\r\nexport interface DatePickerProps<T> {\r\n  autoFocus?: boolean;\r\n  disabled?: boolean;\r\n  enableTodayLink?: boolean;\r\n  error?: boolean;\r\n  minDate: T;\r\n  maxDate: T;\r\n  menuAlign?: 'left' | 'right';\r\n  size?: 'small' | 'medium' | 'large';\r\n  value?: T | null;\r\n  warning?: boolean;\r\n  width: number | string;\r\n  onBlur?: () => void;\r\n  /**\r\n   * Вызывается при изменении `value`\r\n   *\r\n   * @param value - строка в формате `dd.mm.yyyy`.\r\n   */\r\n  onValueChange: (value: T) => void;\r\n  onFocus?: () => void;\r\n  onKeyDown?: (e: React.KeyboardEvent<any>) => void;\r\n  onMouseEnter?: (e: React.MouseEvent<any>) => void;\r\n  onMouseLeave?: (e: React.MouseEvent<any>) => void;\r\n  onMouseOver?: (e: React.MouseEvent<any>) => void;\r\n\r\n  /**\r\n   * Функция для определения праздничных дней\r\n   * @default (_day, isWeekend) => isWeekend\r\n   * @param {T} day - строка в формате `dd.mm.yyyy`\r\n   * @param {boolean} isWeekend - флаг выходного (суббота или воскресенье)\r\n   *\r\n   * @returns {boolean} `true` для выходного или `false` для рабочего дня\r\n   */\r\n  isHoliday: (day: T, isWeekend: boolean) => boolean;\r\n}\r\n\r\nexport interface DatePickerState {\r\n  opened: boolean;\r\n}\r\n\r\ntype DatePickerValue = string;\r\n\r\nexport class DatePicker extends React.Component<DatePickerProps<DatePickerValue>, DatePickerState> {\r\n  public static __KONTUR_REACT_UI__ = 'DatePicker';\r\n\r\n  public static propTypes = {\r\n    autoFocus: PropTypes.bool,\r\n\r\n    disabled: PropTypes.bool,\r\n\r\n    /**\r\n     * Включает кнопку сегодня в календаре\r\n     */\r\n    enableTodayLink: PropTypes.bool,\r\n\r\n    error: PropTypes.bool,\r\n\r\n    /**\r\n     * Максимальная дата в календаре.\r\n     */\r\n    maxDate: PropTypes.string.isRequired,\r\n\r\n    menuAlign: PropTypes.oneOf(['left', 'right'] as Array<'left' | 'right'>),\r\n\r\n    /**\r\n     * Минимальная дата в календаре.\r\n     */\r\n    minDate: PropTypes.string.isRequired,\r\n\r\n    /**\r\n     * Строка формата `dd.mm.yyyy`\r\n     */\r\n    value: PropTypes.string,\r\n\r\n    warning: PropTypes.bool,\r\n\r\n    width: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\r\n\r\n    onBlur: PropTypes.func,\r\n\r\n    onValueChange: PropTypes.func.isRequired,\r\n\r\n    onFocus: PropTypes.func,\r\n\r\n    onKeyDown: PropTypes.func,\r\n\r\n    onMouseEnter: PropTypes.func,\r\n\r\n    onMouseLeave: PropTypes.func,\r\n\r\n    onMouseOver: PropTypes.func,\r\n\r\n    isHoliday: PropTypes.func.isRequired,\r\n  };\r\n\r\n  public static defaultProps = {\r\n    width: 120,\r\n    minDate: MIN_FULLDATE,\r\n    maxDate: MAX_FULLDATE,\r\n    isHoliday: (_day: DatePickerValue, isWeekend: boolean) => isWeekend,\r\n  };\r\n\r\n  public static validate = (value: Nullable<string>, range: { minDate?: string; maxDate?: string } = {}) => {\r\n    if (!value) {\r\n      return false;\r\n    }\r\n\r\n    const { minDate = MIN_FULLDATE, maxDate = MAX_FULLDATE } = range;\r\n    const internalDate = new InternalDate({\r\n      order: InternalDateOrder.DMY,\r\n      separator: InternalDateSeparator.Dot,\r\n    })\r\n      .setRangeStart(new InternalDate({ value: minDate }))\r\n      .setRangeEnd(new InternalDate({ value: maxDate }))\r\n      .parseValue(value);\r\n\r\n    return internalDate.validate({\r\n      checks: [\r\n        InternalDateValidateCheck.NotNull,\r\n        InternalDateValidateCheck.Number,\r\n        InternalDateValidateCheck.Native,\r\n        InternalDateValidateCheck.Limits,\r\n        InternalDateValidateCheck.Range,\r\n      ],\r\n    });\r\n  };\r\n\r\n  public state: DatePickerState = { opened: false };\r\n\r\n  private input: DateInput | null = null;\r\n  private focused = false;\r\n  private internalDate?: InternalDate = this.parseValueToDate(this.props.value);\r\n  private minDate?: InternalDate = this.parseValueToDate(this.props.minDate);\r\n  private maxDate?: InternalDate = this.parseValueToDate(this.props.maxDate);\r\n\r\n  public componentDidMount() {\r\n    if (this.props.autoFocus) {\r\n      this.focus();\r\n    }\r\n  }\r\n\r\n  public UNSAFE_componentWillReceiveProps(nextProps: DatePickerProps<DatePickerValue>) {\r\n    const { disabled } = nextProps;\r\n    const { opened } = this.state;\r\n    if (disabled && opened) {\r\n      this.close();\r\n    }\r\n    this.internalDate = this.parseValueToDate(nextProps.value);\r\n    this.minDate = this.parseValueToDate(nextProps.minDate);\r\n    this.maxDate = this.parseValueToDate(nextProps.maxDate);\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   */\r\n  public blur() {\r\n    if (this.input) {\r\n      this.input.blur();\r\n    }\r\n    this.handleBlur();\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   */\r\n  public focus() {\r\n    if (this.props.disabled) {\r\n      return;\r\n    }\r\n    if (this.input) {\r\n      this.input.focus();\r\n    }\r\n    this.handleFocus();\r\n  }\r\n\r\n  /**\r\n   * Закрывает выпадашку выбора дня\r\n   * @public\r\n   */\r\n  public close() {\r\n    this.setState({ opened: false });\r\n  }\r\n\r\n  public render(): JSX.Element {\r\n    let picker = null;\r\n    const date = this.internalDate ? this.internalDate.toNativeFormat() : null;\r\n    if (this.state.opened) {\r\n      picker = (\r\n        <DropdownContainer getParent={() => findDOMNode(this)} offsetY={2} align={this.props.menuAlign}>\r\n          <Picker\r\n            value={date}\r\n            minDate={(this.minDate && this.minDate.toNativeFormat()) || undefined}\r\n            maxDate={(this.maxDate && this.maxDate.toNativeFormat()) || undefined}\r\n            onPick={this.handlePick}\r\n            onSelect={this.handleSelect}\r\n            enableTodayLink={this.props.enableTodayLink}\r\n            isHoliday={this.isHoliday}\r\n          />\r\n        </DropdownContainer>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <label\r\n        className={jsStyles.root()}\r\n        style={{ width: this.props.width }}\r\n        onMouseEnter={this.props.onMouseEnter}\r\n        onMouseLeave={this.props.onMouseLeave}\r\n        onMouseOver={this.props.onMouseOver}\r\n      >\r\n        <DateInput\r\n          {...filterProps(this.props, INPUT_PASS_PROPS)}\r\n          ref={this.getInputRef}\r\n          value={this.props.value || ''}\r\n          width=\"100%\"\r\n          withIcon\r\n          minDate={this.props.minDate}\r\n          maxDate={this.props.maxDate}\r\n          onBlur={this.handleBlur}\r\n          onFocus={this.handleFocus}\r\n          onValueChange={this.props.onValueChange}\r\n        />\r\n        {picker}\r\n      </label>\r\n    );\r\n  }\r\n\r\n  private getInputRef = (ref: DateInput | null) => {\r\n    this.input = ref;\r\n  };\r\n\r\n  private parseValueToDate(value?: Nullable<string>): InternalDate | undefined {\r\n    if (value === undefined || value === null) {\r\n      return undefined;\r\n    }\r\n    const date = new InternalDate({ value });\r\n    if (date.validate({ checks: [InternalDateValidateCheck.NotNull, InternalDateValidateCheck.Native] })) {\r\n      return date;\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  private handleFocus = () => {\r\n    if (this.focused) {\r\n      return;\r\n    }\r\n\r\n    this.focused = true;\r\n\r\n    this.setState({ opened: true });\r\n\r\n    if (this.props.onFocus) {\r\n      this.props.onFocus();\r\n    }\r\n  };\r\n\r\n  private handleBlur = () => {\r\n    if (!this.focused) {\r\n      return;\r\n    }\r\n\r\n    this.focused = false;\r\n    this.close();\r\n\r\n    if (this.props.onBlur) {\r\n      this.props.onBlur();\r\n    }\r\n  };\r\n\r\n  private handlePick = (dateShape: CalendarDateShape) => {\r\n    this.handleSelect(dateShape);\r\n    this.blur();\r\n  };\r\n\r\n  private handleSelect = ({ date, month, year }: CalendarDateShape) => {\r\n    const value = InternalDateTransformer.dateToInternalString({ date, month: month + 1, year });\r\n    if (this.props.onValueChange) {\r\n      this.props.onValueChange(value);\r\n    }\r\n  };\r\n\r\n  private isHoliday = ({ date, month, year, isWeekend }: CalendarDateShape & { isWeekend: boolean }) => {\r\n    const dateString = InternalDateTransformer.dateToInternalString({ date, month: month + 1, year });\r\n    return this.props.isHoliday(dateString, isWeekend);\r\n  };\r\n}\r\n"]}