{"version":3,"sources":["Kebab.tsx"],"names":["Kebab","state","opened","focusedByTab","anchor","theme","listener","remove","undefined","renderCaption","captionProps","disabled","props","handleCaptionKeyDown","event","openMenu","handleCaptionClick","toggleMenu","handleFocus","handleBlur","jsStyles","kebab","focused","renderIcon","e","isKeyEnter","isKeySpace","isKeyArrowVertical","preventDefault","handleChangeMenuState","isOpened","restoreFocus","setState","onOpen","onClose","process","nextTick","tabListener","isTabPressed","componentDidMount","LayoutEvents","addListener","componentWillUnmount","render","renderMain","positions","disableAnimations","children","size","iconsmall","iconmedium","iconlarge","Error","React","Component","__KONTUR_REACT_UI__","propTypes","defaultProps","Boolean","env","enableReactTesting","PropTypes","node","bool","menuMaxHeight","oneOfType","string","number","func"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport cn from 'classnames';\r\n\r\nimport { isKeyArrowVertical, isKeyEnter, isKeySpace, someKeys } from '../../lib/events/keyboard/identifiers';\r\nimport { Icon as Icon20 } from '../../internal/icons/20px';\r\nimport * as LayoutEvents from '../../lib/LayoutEvents';\r\nimport { tabListener } from '../../lib/events/tabListener';\r\nimport { PopupMenu , PopupMenuCaptionProps } from '../../internal/PopupMenu';\r\nimport { Nullable } from '../../typings/utility-types';\r\nimport { PopupPosition } from '../../internal/Popup';\r\nimport { ThemeContext } from '../../lib/theming/ThemeContext';\r\nimport { Theme } from '../../lib/theming/Theme';\r\nimport { MenuKebabIcon } from '../../internal/icons/16px';\r\n\r\nimport { jsStyles } from './Kebab.styles';\r\n\r\nexport interface KebabProps {\r\n  disabled?: boolean;\r\n  /**\r\n   * Функция вызываемая при закрытии выпадашки\r\n   * @default () => undefined\r\n   */\r\n  onClose: () => void;\r\n  /**\r\n   * Функция вызываемая при открытии выпадашки\r\n   * @default () => undefined\r\n   */\r\n  onOpen: () => void;\r\n  size: 'small' | 'medium' | 'large';\r\n  /**\r\n   * Список позиций доступных для расположения выпадашки\r\n   * Если во всех позициях выпадашка вылезает за пределы `viewport`, будет использоваться первая из этого списка\r\n   * @default ['bottom left', 'bottom right', 'top left', 'top right']\r\n   */\r\n  positions: PopupPosition[];\r\n  menuMaxHeight?: number | string;\r\n  /**\r\n   * Не показывать анимацию\r\n   */\r\n  disableAnimations: boolean;\r\n}\r\n\r\nexport interface KebabState {\r\n  anchor: Nullable<HTMLElement>;\r\n  focusedByTab: boolean;\r\n  opened: boolean;\r\n}\r\n\r\nexport class Kebab extends React.Component<KebabProps, KebabState> {\r\n  public static __KONTUR_REACT_UI__ = 'Kebab';\r\n\r\n  public static propTypes = {};\r\n\r\n  public static defaultProps = {\r\n    onOpen: () => undefined,\r\n    onClose: () => undefined,\r\n    positions: ['bottom left', 'bottom right', 'top left', 'top right'],\r\n    size: 'small',\r\n    disableAnimations: Boolean(process.env.enableReactTesting),\r\n  };\r\n\r\n  public state = {\r\n    opened: false,\r\n    focusedByTab: false,\r\n    anchor: null,\r\n  };\r\n\r\n  private theme!: Theme;\r\n\r\n  private listener: {\r\n    remove: () => void;\r\n  } = {\r\n    remove: () => undefined,\r\n  };\r\n\r\n  public componentDidMount() {\r\n    /** addListener'у нужен колбэк в аргумент */\r\n    this.listener = LayoutEvents.addListener(() => undefined);\r\n  }\r\n\r\n  public componentWillUnmount() {\r\n    this.listener.remove();\r\n  }\r\n\r\n  public render(): JSX.Element {\r\n    return (\r\n      <ThemeContext.Consumer>\r\n        {theme => {\r\n          this.theme = theme;\r\n          return this.renderMain();\r\n        }}\r\n      </ThemeContext.Consumer>\r\n    );\r\n  }\r\n\r\n  private renderMain() {\r\n    const { disabled, positions } = this.props;\r\n\r\n    return (\r\n      <PopupMenu\r\n        popupMargin={5}\r\n        popupPinOffset={15}\r\n        popupHasPin\r\n        positions={positions}\r\n        onChangeMenuState={this.handleChangeMenuState}\r\n        caption={this.renderCaption}\r\n        disableAnimations={this.props.disableAnimations}\r\n      >\r\n        {!disabled && this.props.children}\r\n      </PopupMenu>\r\n    );\r\n  }\r\n\r\n  private renderCaption = (captionProps: PopupMenuCaptionProps) => {\r\n    const { disabled } = this.props;\r\n    const handleCaptionKeyDown = (event: React.KeyboardEvent<HTMLDivElement>) => {\r\n      if (!disabled) {\r\n        this.handleCaptionKeyDown(event, captionProps.openMenu);\r\n      }\r\n    };\r\n\r\n    const handleCaptionClick = () => {\r\n      if (!disabled) {\r\n        captionProps.toggleMenu();\r\n      }\r\n    };\r\n\r\n    return (\r\n      <span\r\n        tabIndex={disabled ? -1 : 0}\r\n        onClick={handleCaptionClick}\r\n        onKeyDown={handleCaptionKeyDown}\r\n        onFocus={this.handleFocus}\r\n        onBlur={this.handleBlur}\r\n        className={cn({\r\n          [jsStyles.kebab()]: true,\r\n          [jsStyles.opened()]: captionProps.opened,\r\n          [jsStyles.disabled()]: disabled,\r\n          [jsStyles.focused(this.theme)]: this.state.focusedByTab,\r\n        })}\r\n      >\r\n        {this.renderIcon()}\r\n      </span>\r\n    );\r\n  };\r\n\r\n  private handleCaptionKeyDown = (\r\n    e: React.KeyboardEvent<HTMLDivElement>,\r\n    openMenu: PopupMenuCaptionProps['openMenu'],\r\n  ) => {\r\n    if (someKeys(isKeyEnter, isKeySpace, isKeyArrowVertical)(e)) {\r\n      e.preventDefault();\r\n      openMenu(true);\r\n    }\r\n  };\r\n\r\n  private handleChangeMenuState = (isOpened: boolean, restoreFocus: boolean): void => {\r\n    this.setState(\r\n      {\r\n        opened: isOpened,\r\n        focusedByTab: !isOpened && restoreFocus,\r\n      },\r\n      () => {\r\n        if (this.props.disabled) {\r\n          return;\r\n        }\r\n\r\n        if (this.state.opened) {\r\n          this.props.onOpen();\r\n        } else {\r\n          this.props.onClose();\r\n        }\r\n      },\r\n    );\r\n  };\r\n\r\n  private handleFocus = () => {\r\n    if (!this.props.disabled) {\r\n      // focus event fires before keyDown eventlistener\r\n      // so we should check tabPressed in async way\r\n      process.nextTick(() => {\r\n        if (tabListener.isTabPressed) {\r\n          this.setState({ focusedByTab: true });\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  private handleBlur = () => {\r\n    this.setState({\r\n      focusedByTab: false,\r\n    });\r\n  };\r\n\r\n  private renderIcon() {\r\n    switch (this.props.size) {\r\n      case 'small':\r\n        return (\r\n          <div className={jsStyles.iconsmall()}>\r\n            <MenuKebabIcon size=\"14px\" color=\"#757575\" />\r\n          </div>\r\n        );\r\n      case 'medium':\r\n        return (\r\n          <div className={jsStyles.iconmedium()}>\r\n            <MenuKebabIcon size=\"18px\" color=\"#757575\" />\r\n          </div>\r\n        );\r\n      case 'large':\r\n        return (\r\n          <div className={jsStyles.iconlarge()}>\r\n            <Icon20 name=\"kebab\" color=\"#757575\" />\r\n          </div>\r\n        );\r\n      default:\r\n        throw new Error(`Unexpected size '${this.props.size}'`);\r\n    }\r\n  }\r\n}\r\n\r\nKebab.propTypes = {\r\n  children: PropTypes.node,\r\n  disabled: PropTypes.bool,\r\n  menuMaxHeight: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\r\n\r\n  /**\r\n   * Размер кебаба small 14px | large 20px\r\n   */\r\n  size: PropTypes.string,\r\n\r\n  /**\r\n   * Коллбек, вызывающийся перед закрытием кебаба\r\n   */\r\n  onClose: PropTypes.func,\r\n\r\n  /**\r\n   * Коллбек, вызывающийся перед открытием кебаба\r\n   */\r\n  onOpen: PropTypes.func,\r\n};\r\n"]}