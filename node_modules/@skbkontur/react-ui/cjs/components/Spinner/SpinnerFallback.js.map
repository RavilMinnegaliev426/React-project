{"version":3,"sources":["SpinnerFallback.tsx"],"names":["types","big","mini","normal","SpinnerFallback","state","frame","mounted","_framesCount","dimmed","imageUrls","fallbackImage_mini","fallbackImage_normal","fallbackImage_big","fallbackImage_mini_dimmed","animate","framesCount","getSpriteSettingsKey","nextFrame","setState","setTimeout","props","type","componentDidMount","componentWillUnmount","render","renderCircle","size","backgroundImage","cssSet","height","width","marginBottom","marginLeft","marginRight","process","env","enableReactTesting","backgroundPosition","jsStyles","fallback","React","Component","__KONTUR_REACT_UI__","propTypes","PropTypes","oneOf","Object","keys","bool"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport fallbackImage_mini from './fallback_circle_mini.png';\r\nimport fallbackImage_mini_dimmed from './fallback_circle_dimmed.png';\r\nimport fallbackImage_big from './fallback_circle_big.png';\r\nimport fallbackImage_normal from './fallback_circle_normal.png';\r\nimport { jsStyles } from './Spinner.styles';\r\nimport { SpinnerType } from './Spinner';\r\n\r\nexport const types: {\r\n  [key: string]: SpinnerType;\r\n} = {\r\n  big: 'big',\r\n  mini: 'mini',\r\n  normal: 'normal',\r\n};\r\n\r\nexport interface SpinnerFallbackProps {\r\n  type: SpinnerType;\r\n  dimmed?: boolean;\r\n}\r\n\r\nexport class SpinnerFallback extends React.Component<SpinnerFallbackProps> {\r\n  public static __KONTUR_REACT_UI__ = 'SpinnerFallback';\r\n\r\n  public static propTypes = {\r\n    type: PropTypes.oneOf(Object.keys(types)),\r\n\r\n    dimmed: PropTypes.bool,\r\n  };\r\n\r\n  public state = {\r\n    frame: 0,\r\n  };\r\n\r\n  private mounted = false;\r\n\r\n  // quantity of frames in images\r\n  private _framesCount = {\r\n    [types.mini]: 151,\r\n    [types.normal]: 151,\r\n    [types.big]: 151,\r\n    dimmed: 60,\r\n  };\r\n\r\n  private imageUrls = {\r\n    [types.mini]: fallbackImage_mini,\r\n    [types.normal]: fallbackImage_normal,\r\n    [types.big]: fallbackImage_big,\r\n    dimmed: fallbackImage_mini_dimmed,\r\n  };\r\n\r\n  public componentDidMount() {\r\n    this.mounted = true;\r\n    this.animate();\r\n  }\r\n\r\n  public componentWillUnmount() {\r\n    this.mounted = false;\r\n  }\r\n\r\n  public render() {\r\n    return this.renderCircle();\r\n  }\r\n\r\n  private renderCircle() {\r\n    const { dimmed } = this.props;\r\n    const { type } = this.props;\r\n    const { frame } = this.state;\r\n    const size = type === 'big' ? 96 : type === 'normal' ? 48 : 16;\r\n    const backgroundImage = dimmed ? this.imageUrls.dimmed : this.imageUrls[type];\r\n\r\n    const cssSet: React.CSSProperties = {\r\n      backgroundImage: `url('${backgroundImage}')`,\r\n      height: size,\r\n      width: size,\r\n      marginBottom: -3,\r\n      marginLeft: -1,\r\n      marginRight: -1,\r\n    };\r\n\r\n    if (!process.env.enableReactTesting) {\r\n      cssSet.backgroundPosition = `0 -${frame * size}px`;\r\n    }\r\n\r\n    return <span className={jsStyles.fallback()} style={cssSet} />;\r\n  }\r\n\r\n  private animate = () => {\r\n    if (!this.mounted) {\r\n      return;\r\n    }\r\n\r\n    const { frame } = this.state;\r\n    const framesCount = this._framesCount[this.getSpriteSettingsKey()];\r\n    const nextFrame = frame < framesCount ? frame + 1 : 0;\r\n    this.setState({ frame: nextFrame });\r\n\r\n    setTimeout(this.animate, 1000 / 25);\r\n  };\r\n\r\n  private getSpriteSettingsKey = () =>\r\n    this.props.type === types.mini && this.props.dimmed ? 'dimmed' : this.props.type;\r\n}\r\n"]}