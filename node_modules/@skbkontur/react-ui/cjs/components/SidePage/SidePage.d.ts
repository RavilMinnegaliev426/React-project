import React from 'react';
import { SidePageBody } from './SidePageBody';
import { SidePageContainer } from './SidePageContainer';
import { SidePageFooter } from './SidePageFooter';
import { SidePageHeader } from './SidePageHeader';
export interface SidePageProps {
    /**
     * Добавить блокирующий фон, когда сайдпейдж открыт
     */
    blockBackground?: boolean;
    /**
     * Отключает событие onClose, также дизейблит кнопку закрытия сайдпейджа
     */
    disableClose?: boolean;
    /**
     * Не закрывать сайдпейдж при клике на фон.
     */
    ignoreBackgroundClick?: boolean;
    /**
     * Задать ширину сайдпейджа
     */
    width?: number | string;
    /**
     * Вызывается, когда пользователь запросил закрытие сайдпейджа (нажал на фон, на
     * Escape или на крестик).
     */
    onClose?: () => void;
    /**
     * Показывать сайдпэйдж слева
     *
     */
    fromLeft?: boolean;
    /**
     * Отключить анимации
     *
     */
    disableAnimations?: boolean;
}
export interface SidePageState {
    stackPosition?: number;
    hasMargin?: boolean;
    hasShadow?: boolean;
    hasBackground?: boolean;
}
/**
 * Сайдпейдж
 *
 * Содержит в себе три компоненты: **SidePage.Header**,
 * **SidePage.Body** и **SidePage.Footer**
 *
 * Для отображения серой плашки в футере в компонент
 * **Footer** необходимо передать пропс **panel**
 */
export declare class SidePage extends React.Component<SidePageProps, SidePageState> {
    static __KONTUR_REACT_UI__: string;
    static Header: typeof SidePageHeader;
    static Body: typeof SidePageBody;
    static Footer: typeof SidePageFooter;
    static Container: typeof SidePageContainer;
    state: SidePageState;
    private theme;
    private stackSubscription;
    private layoutRef;
    private footer;
    componentDidMount(): void;
    componentWillUnmount(): void;
    /**
     * Обновляет разметку компонента.
     * @public
     */
    updateLayout: () => void;
    render(): JSX.Element;
    private renderMain;
    private renderContainer;
    private getWidth;
    private renderShadow;
    private getSidebarStyle;
    private getTransitionNames;
    private handleStackChange;
    private handleClickOutside;
    private handleKeyDown;
    private requestClose;
    private footerRef;
}
