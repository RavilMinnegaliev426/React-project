"use strict";var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");exports.__esModule = true;exports.FxInput = void 0;var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));var _objectWithoutPropertiesLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutPropertiesLoose"));var _inheritsLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/inheritsLoose"));var _react = _interopRequireDefault(require("react"));
var _propTypes = _interopRequireDefault(require("prop-types"));

var _Button = require("../Button");
var _Group = require("../Group");
var _Input = require("../Input");
var _CurrencyInput = require("../CurrencyInput");
var _createPropsGetter = require("../../lib/createPropsGetter");

var _px = require("../../internal/icons/16px");





















/** Принимает все свойства `Input`'a */var
FxInput = /*#__PURE__*/function (_React$Component) {(0, _inheritsLoose2.default)(FxInput, _React$Component);function FxInput() {var _this;for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {args[_key] = arguments[_key];}_this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;_this.













    input = null;_this.

    getProps = (0, _createPropsGetter.createPropsGetter)(FxInput.defaultProps);_this.

















































    focus = function () {
      if (_this.input) {
        _this.input.focus();
      }
    };_this.




    blur = function () {
      if (_this.input) {
        _this.input.blur();
      }
    };_this.

    refInput = function (element) {
      _this.input = element;

      if (_this.props.refInput) {
        _this.props.refInput(_this.input);
      }
    };return _this;}var _proto = FxInput.prototype;_proto.render = function render() {var _this$props = this.props,type = _this$props.type,onRestore = _this$props.onRestore,auto = _this$props.auto,rest = (0, _objectWithoutPropertiesLoose2.default)(_this$props, ["type", "onRestore", "auto"]);var inputProps = { align: 'right' };var button = null;if (auto) {inputProps.leftIcon = _react.default.createElement(_px.FunctionIcon, null);} else {button = _react.default.createElement(_Button.Button, { narrow: true, onClick: this.props.onRestore, borderless: this.props.borderless }, _react.default.createElement(_px.UndoIcon, null));}return _react.default.createElement(_Group.Group, { width: this.props.width }, button, this.getProps().type === 'currency' ? _react.default.createElement(_CurrencyInput.CurrencyInput, (0, _extends2.default)({}, inputProps, rest, { width: '100%', ref: this.refInput, value: this.props.value, onValueChange: this.props.onValueChange })) : _react.default.createElement(_Input.Input, (0, _extends2.default)({}, inputProps, rest, { width: '100%', ref: this.refInput, type: this.props.type, value: this.props.value, onValueChange: this.props.onValueChange })));} /**
public
return FxInput;}(_react.default.Component);exports.FxInput = FxInput;FxInput.__KONTUR_REACT_UI__ = 'FxInput';FxInput.propTypes = { auto: _propTypes.default.bool, type: _propTypes.default.string };FxInput.defaultProps = { width: 250, type: 'text', value: '' };