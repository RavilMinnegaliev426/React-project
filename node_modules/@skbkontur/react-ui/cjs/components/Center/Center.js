"use strict";var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");exports.__esModule = true;exports.Center = void 0;var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));var _objectWithoutPropertiesLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutPropertiesLoose"));var _inheritsLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/inheritsLoose"));var _react = _interopRequireDefault(require("react"));
var _classnames = _interopRequireDefault(require("classnames"));



var _Center = require("./Center.styles");



















/**
                                           * Контейнер для вертикального центрирования. В компонент можно передавать
                                           * свойства как в любой *div* (кроме `className`)
                                           */var
Center = /*#__PURE__*/function (_React$Component) {(0, _inheritsLoose2.default)(Center, _React$Component);function Center() {return _React$Component.apply(this, arguments) || this;}var _proto = Center.prototype;_proto.






  render = function render() {var _cn;var _this$props =
    this.props,align = _this$props.align,children = _this$props.children,rest = (0, _objectWithoutPropertiesLoose2.default)(_this$props, ["align", "children"]);

    return (
      _react.default.createElement("div", (0, _extends2.default)({
        className: (0, _classnames.default)((_cn = {}, _cn[
        _Center.jsStyles.root()] = true, _cn[
        _Center.jsStyles.rootAlignLeft()] = align === 'left', _cn[
        _Center.jsStyles.rootAlignRight()] = align === 'right', _cn)) },

      rest),

      _react.default.createElement("span", { className: _Center.jsStyles.spring() }),
      _react.default.createElement("span", { className: _Center.jsStyles.container() }, children)));


  };return Center;}(_react.default.Component);exports.Center = Center;Center.__KONTUR_REACT_UI__ = 'Center';Center.defaultProps = { align: 'center' };