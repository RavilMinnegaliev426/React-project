"use strict";var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");exports.__esModule = true;exports.Switcher = void 0;var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));var _inheritsLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/inheritsLoose"));var _react = _interopRequireDefault(require("react"));
var _propTypes = _interopRequireDefault(require("prop-types"));
var _classnames = _interopRequireDefault(require("classnames"));

var _identifiers = require("../../lib/events/keyboard/identifiers");
var _Group = require("../Group");
var _Button = require("../Button");

var _ThemeContext = require("../../lib/theming/ThemeContext");


var _Switcher = require("./Switcher.styles");var






























Switcher = /*#__PURE__*/function (_React$Component) {(0, _inheritsLoose2.default)(Switcher, _React$Component);function Switcher() {var _this;for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {args[_key] = arguments[_key];}_this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;_this.


















    state = {
      focusedIndex: null };_this.


    theme = void 0;_this.






































    selectItem = function (value) {
      if (_this.props.onValueChange) {
        _this.props.onValueChange(value);
      }
    };_this.

    _extractPropsFromItem = function (item) {
      return typeof item === 'object' ? item : { label: item, value: item };
    };_this.

    _extractValuesFromItems = function () {
      return _this.props.items.map(function (item) {var _this$_extractPropsFr =
        _this._extractPropsFromItem(item),value = _this$_extractPropsFr.value;
        return value;
      });
    };_this.

    move = function (step) {
      var selectedIndex = _this.state.focusedIndex;

      if (typeof selectedIndex !== 'number') {
        return;
      }

      var items = _this._extractValuesFromItems();

      selectedIndex += step;

      if (selectedIndex < 0) {
        selectedIndex = items.length - 1;
      } else if (selectedIndex >= items.length) {
        selectedIndex = 0;
      }

      _this._focus(selectedIndex);
    };_this.

    _focus = function (index) {
      _this.setState({ focusedIndex: index });
    };_this.

    handleKey = function (e) {
      var focusedIndex = _this.state.focusedIndex;
      if (typeof focusedIndex !== 'number') {
        return;
      }

      if ((0, _identifiers.isKeyEnter)(e)) {
        if (_this.props.onValueChange) {var _this$_extractPropsFr2 =
          _this._extractPropsFromItem(_this.props.items[focusedIndex]),_value = _this$_extractPropsFr2.value;
          _this.selectItem(_value);
        }
        return;
      }

      if ((0, _identifiers.isKeyArrowHorizontal)(e)) {
        e.preventDefault();
        _this.move((0, _identifiers.isKeyArrowLeft)(e) ? -1 : 1);
      }
    };_this.

    _handleFocus = function () {var
      value = _this.props.value;

      var items = _this._extractValuesFromItems();
      var currentIndex = [].concat(items).indexOf(value);
      var index = currentIndex > -1 ? currentIndex : 0;

      _this.setState({ focusedIndex: index });
    };_this.

    _handleBlur = function () {
      _this.setState({ focusedIndex: null });
    };_this.

    _renderItems = function () {
      return _this.props.items.map(function (item, i) {var _this$_extractPropsFr3 =
        _this._extractPropsFromItem(item),label = _this$_extractPropsFr3.label,value = _this$_extractPropsFr3.value;
        var buttonProps = {
          checked: _this.props.value === value,
          visuallyFocused: _this.state.focusedIndex === i,
          onClick: function onClick() {
            _this.selectItem(value);
          },
          disableFocus: true,
          size: _this.props.size };

        return (
          _react.default.createElement(_Button.Button, (0, _extends2.default)({ key: value }, buttonProps),
          label));


      });
    };return _this;}var _proto = Switcher.prototype;_proto.render = function render() {var _this2 = this;return _react.default.createElement(_ThemeContext.ThemeContext.Consumer, null, function (theme) {_this2.theme = theme;return _this2.renderMain();});};_proto.renderMain = function renderMain() {var _cn;var listClassName = (0, _classnames.default)((_cn = {}, _cn[_Switcher.jsStyles.error(this.theme)] = !!this.props.error, _cn));var inputProps = { type: 'checkbox', onKeyDown: this.handleKey, onFocus: this._handleFocus, onBlur: this._handleBlur, className: _Switcher.jsStyles.input() };return _react.default.createElement("div", null, this.props.label ? _react.default.createElement("div", { className: _Switcher.jsStyles.label() }, this.props.label) : null, _react.default.createElement("div", { className: _Switcher.jsStyles.wrap() }, _react.default.createElement("input", inputProps), _react.default.createElement("div", { className: listClassName }, _react.default.createElement(_Group.Group, null, this._renderItems()))));};return Switcher;}(_react.default.Component);exports.Switcher = Switcher;Switcher.__KONTUR_REACT_UI__ = 'Switcher';Switcher.propTypes = { error: _propTypes.default.bool, items: _propTypes.default.oneOfType([_propTypes.default.arrayOf(_propTypes.default.string), _propTypes.default.arrayOf(_propTypes.default.shape({ label: _propTypes.default.string, value: _propTypes.default.string }))]).isRequired, label: _propTypes.default.string, value: _propTypes.default.string, onValueChange: _propTypes.default.func };