{"version":3,"sources":["Switcher.tsx"],"names":["Switcher","state","focusedIndex","theme","selectItem","value","props","onValueChange","_extractPropsFromItem","item","label","_extractValuesFromItems","items","map","move","step","selectedIndex","length","_focus","index","setState","handleKey","e","preventDefault","_handleFocus","currentIndex","indexOf","_handleBlur","_renderItems","i","buttonProps","checked","visuallyFocused","onClick","disableFocus","size","render","renderMain","listClassName","jsStyles","error","inputProps","type","onKeyDown","onFocus","onBlur","className","input","wrap","React","Component","__KONTUR_REACT_UI__","propTypes","PropTypes","bool","oneOfType","arrayOf","string","shape","isRequired","func"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport cn from 'classnames';\r\n\r\nimport { isKeyArrowHorizontal, isKeyArrowLeft, isKeyEnter } from '../../lib/events/keyboard/identifiers';\r\nimport { Group } from '../Group';\r\nimport { Button, ButtonSize } from '../Button';\r\nimport { Nullable } from '../../typings/utility-types';\r\nimport { ThemeContext } from '../../lib/theming/ThemeContext';\r\nimport { Theme } from '../../lib/theming/Theme';\r\n\r\nimport { jsStyles } from './Switcher.styles';\r\n\r\nexport type SwitcherSize = ButtonSize;\r\n\r\nexport interface SwitcherProps {\r\n  /**\r\n   * Список строк или список элементов типа `{ label: string, value: string }`\r\n   */\r\n  items: Array<string | SwitcherItem>;\r\n\r\n  value?: string;\r\n\r\n  onValueChange?: (value: string) => void;\r\n\r\n  label?: string;\r\n\r\n  error?: boolean;\r\n\r\n  /** Размер */\r\n  size?: SwitcherSize;\r\n}\r\n\r\nexport interface SwitcherState {\r\n  focusedIndex: Nullable<number>;\r\n}\r\n\r\ninterface SwitcherItem {\r\n  label: string;\r\n  value: string;\r\n}\r\n\r\nexport class Switcher extends React.Component<SwitcherProps, SwitcherState> {\r\n  public static __KONTUR_REACT_UI__ = 'Switcher';\r\n\r\n  public static propTypes = {\r\n    error: PropTypes.bool,\r\n    items: PropTypes.oneOfType([\r\n      PropTypes.arrayOf(PropTypes.string),\r\n      PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n          label: PropTypes.string,\r\n          value: PropTypes.string,\r\n        }),\r\n      ),\r\n    ]).isRequired,\r\n    label: PropTypes.string,\r\n    value: PropTypes.string,\r\n    onValueChange: PropTypes.func,\r\n  };\r\n\r\n  public state: SwitcherState = {\r\n    focusedIndex: null,\r\n  };\r\n\r\n  private theme!: Theme;\r\n\r\n  public render() {\r\n    return (\r\n      <ThemeContext.Consumer>\r\n        {theme => {\r\n          this.theme = theme;\r\n          return this.renderMain();\r\n        }}\r\n      </ThemeContext.Consumer>\r\n    );\r\n  }\r\n\r\n  private renderMain() {\r\n    const listClassName = cn({\r\n      [jsStyles.error(this.theme)]: !!this.props.error,\r\n    });\r\n\r\n    const inputProps = {\r\n      type: 'checkbox',\r\n      onKeyDown: this.handleKey,\r\n      onFocus: this._handleFocus,\r\n      onBlur: this._handleBlur,\r\n      className: jsStyles.input(),\r\n    };\r\n\r\n    return (\r\n      <div>\r\n        {this.props.label ? <div className={jsStyles.label()}>{this.props.label}</div> : null}\r\n        <div className={jsStyles.wrap()}>\r\n          <input {...inputProps} />\r\n          <div className={listClassName}>\r\n            <Group>{this._renderItems()}</Group>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  private selectItem = (value: string) => {\r\n    if (this.props.onValueChange) {\r\n      this.props.onValueChange(value);\r\n    }\r\n  };\r\n\r\n  private _extractPropsFromItem = (item: string | SwitcherItem): SwitcherItem => {\r\n    return typeof item === 'object' ? item : { label: item, value: item };\r\n  };\r\n\r\n  private _extractValuesFromItems = (): string[] => {\r\n    return this.props.items.map(item => {\r\n      const { value } = this._extractPropsFromItem(item);\r\n      return value;\r\n    });\r\n  };\r\n\r\n  private move = (step: number) => {\r\n    let selectedIndex = this.state.focusedIndex;\r\n\r\n    if (typeof selectedIndex !== 'number') {\r\n      return;\r\n    }\r\n\r\n    const items = this._extractValuesFromItems();\r\n\r\n    selectedIndex += step;\r\n\r\n    if (selectedIndex < 0) {\r\n      selectedIndex = items.length - 1;\r\n    } else if (selectedIndex >= items.length) {\r\n      selectedIndex = 0;\r\n    }\r\n\r\n    this._focus(selectedIndex);\r\n  };\r\n\r\n  private _focus = (index: number) => {\r\n    this.setState({ focusedIndex: index });\r\n  };\r\n\r\n  private handleKey = (e: React.KeyboardEvent<HTMLInputElement>) => {\r\n    const focusedIndex = this.state.focusedIndex;\r\n    if (typeof focusedIndex !== 'number') {\r\n      return;\r\n    }\r\n\r\n    if (isKeyEnter(e)) {\r\n      if (this.props.onValueChange) {\r\n        const { value } = this._extractPropsFromItem(this.props.items[focusedIndex]);\r\n        this.selectItem(value);\r\n      }\r\n      return;\r\n    }\r\n\r\n    if (isKeyArrowHorizontal(e)) {\r\n      e.preventDefault();\r\n      this.move(isKeyArrowLeft(e) ? -1 : 1);\r\n    }\r\n  };\r\n\r\n  private _handleFocus = () => {\r\n    const { value } = this.props;\r\n\r\n    const items = this._extractValuesFromItems();\r\n    const currentIndex = [...items].indexOf(value as string);\r\n    const index = currentIndex > -1 ? currentIndex : 0;\r\n\r\n    this.setState({ focusedIndex: index });\r\n  };\r\n\r\n  private _handleBlur = () => {\r\n    this.setState({ focusedIndex: null });\r\n  };\r\n\r\n  private _renderItems = () => {\r\n    return this.props.items.map((item, i) => {\r\n      const { label, value } = this._extractPropsFromItem(item);\r\n      const buttonProps = {\r\n        checked: this.props.value === value,\r\n        visuallyFocused: this.state.focusedIndex === i,\r\n        onClick: () => {\r\n          this.selectItem(value);\r\n        },\r\n        disableFocus: true,\r\n        size: this.props.size,\r\n      };\r\n      return (\r\n        <Button key={value} {...buttonProps}>\r\n          {label}\r\n        </Button>\r\n      );\r\n    });\r\n  };\r\n}\r\n"]}