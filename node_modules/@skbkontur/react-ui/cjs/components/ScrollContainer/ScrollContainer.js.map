{"version":3,"sources":["ScrollContainer.tsx"],"names":["PADDING_RIGHT","MIN_SCROLL_SIZE","SCROLL_HIDDEN","isChrome","isOpera","isSafari","ScrollContainer","state","scrollActive","scrollSize","scrollPos","hover","scrolling","scrollState","inner","scroll","refInner","element","props","preventWindowScroll","addEventListener","handleInnerScrollWheel","passive","removeEventListener","refScroll","handleScrollWheel","handleNativeScroll","event","reflow","preventDefault","LayoutEvents","emit","containerHeight","offsetHeight","contentHeight","scrollHeight","scrollTop","updatedScrollState","getImmediateScrollState","scrollParamsToUpdate","onScrollStateChange","setState","handleScrollMouseDown","target","window","document","initialY","clientY","initialScrollTop","mouseMove","mouseMoveEvent","ratio","deltaY","Object","prototype","hasOwnProperty","call","returnValue","mouseUp","WheelEvent","handleMouseMove","right","currentTarget","getBoundingClientRect","pageX","setHover","handleMouseLeave","componentDidMount","componentDidUpdate","prevProps","render","scrollClass","jsStyles","scrollInvert","Boolean","invert","scrollHover","scrollStyle","top","height","innerStyle","marginRight","getMarginRight","maxHeight","paddingRight","scrollBehavior","scrollBehaviour","root","children","scrollTo","maxScroll","offsetTop","minScroll","scrollToTop","scrollToBottom","React","Component","__KONTUR_REACT_UI__","propTypes","PropTypes","bool","oneOfType","string","number","oneOf","func","defaultProps"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport cn from 'classnames';\r\n\r\nimport * as LayoutEvents from '../../lib/LayoutEvents';\r\nimport { getScrollWidth } from '../../lib/dom/getScrollWidth';\r\nimport { Nullable } from '../../typings/utility-types';\r\nimport { isChrome, isOpera, isSafari } from '../../lib/utils';\r\n\r\nimport { jsStyles } from './ScrollContainer.styles';\r\n\r\nconst PADDING_RIGHT = 30;\r\nconst MIN_SCROLL_SIZE = 20;\r\nconst SCROLL_HIDDEN = isChrome || isOpera || isSafari;\r\n\r\nexport type ScrollContainerScrollState = 'top' | 'scroll' | 'bottom';\r\n\r\nexport type ScrollBehaviour = 'auto' | 'smooth';\r\n\r\nexport interface ScrollContainerProps {\r\n  invert?: boolean;\r\n  maxHeight?: React.CSSProperties['maxHeight'];\r\n  preventWindowScroll?: boolean;\r\n  /**\r\n   * Поведение скролла (https://developer.mozilla.org/en-US/docs/Web/CSS/scroll-behavior)\r\n   * @default 'auto'\r\n   */\r\n  scrollBehaviour?: ScrollBehaviour;\r\n  onScrollStateChange?: (scrollState: ScrollContainerScrollState) => void;\r\n}\r\n\r\nexport interface ScrollContainerState {\r\n  scrollActive: boolean;\r\n  hover: boolean;\r\n  scrolling: boolean;\r\n  scrollSize: number;\r\n  scrollPos: number;\r\n  scrollState: string;\r\n}\r\n\r\nexport class ScrollContainer extends React.Component<ScrollContainerProps, ScrollContainerState> {\r\n  public static __KONTUR_REACT_UI__ = 'ScrollContainer';\r\n\r\n  public static propTypes = {\r\n    invert: PropTypes.bool,\r\n    maxHeight: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\r\n    scrollBehaviour: PropTypes.oneOf(['auto', 'smooth']),\r\n    preventWindowScroll: PropTypes.bool,\r\n    onScrollStateChange: PropTypes.func,\r\n  };\r\n\r\n  public static defaultProps = {\r\n    scrollBehaviour: 'auto',\r\n  };\r\n\r\n  public state: ScrollContainerState = {\r\n    scrollActive: false,\r\n    scrollSize: 0,\r\n    scrollPos: 0,\r\n\r\n    // Mouse is moving where big scrollbar can be located.\r\n    hover: false,\r\n    // True when scroll is following mouse (mouse down on scroll).\r\n    scrolling: false,\r\n    scrollState: 'top',\r\n  };\r\n\r\n  private inner: Nullable<HTMLElement>;\r\n  private scroll: Nullable<HTMLElement>;\r\n\r\n  public componentDidMount() {\r\n    this.reflow();\r\n  }\r\n\r\n  public componentDidUpdate(prevProps: ScrollContainerProps) {\r\n    if (this.inner) {\r\n      if (prevProps.preventWindowScroll && !this.props.preventWindowScroll) {\r\n        this.inner.removeEventListener('wheel', this.handleInnerScrollWheel);\r\n      }\r\n      if (!prevProps.preventWindowScroll && this.props.preventWindowScroll) {\r\n        this.inner.addEventListener('wheel', this.handleInnerScrollWheel, { passive: false });\r\n      }\r\n    }\r\n    this.reflow();\r\n  }\r\n\r\n  public render() {\r\n    const state = this.state;\r\n    const props = this.props;\r\n    let scroll = null;\r\n\r\n    if (state.scrollActive) {\r\n      const scrollClass = cn({\r\n        [jsStyles.scroll()]: true,\r\n        [jsStyles.scrollInvert()]: Boolean(props.invert),\r\n        [jsStyles.scrollHover()]: state.hover || state.scrolling,\r\n      });\r\n      const scrollStyle = {\r\n        top: state.scrollPos,\r\n        height: state.scrollSize,\r\n      };\r\n      scroll = (\r\n        <div\r\n          ref={this.refScroll}\r\n          className={scrollClass}\r\n          style={scrollStyle}\r\n          onMouseDown={this.handleScrollMouseDown}\r\n        />\r\n      );\r\n    }\r\n\r\n    const innerStyle: React.CSSProperties = {\r\n      marginRight: this.getMarginRight(),\r\n      maxHeight: props.maxHeight,\r\n      paddingRight: PADDING_RIGHT,\r\n      scrollBehavior: props.scrollBehaviour,\r\n    };\r\n\r\n    return (\r\n      <div className={jsStyles.root()} onMouseMove={this.handleMouseMove} onMouseLeave={this.handleMouseLeave}>\r\n        {scroll}\r\n        <div\r\n          data-tid=\"ScrollContainer__inner\"\r\n          className={jsStyles.inner()}\r\n          style={innerStyle}\r\n          ref={this.refInner}\r\n          onScroll={this.handleNativeScroll}\r\n        >\r\n          {props.children}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   */\r\n  public scrollTo(element: HTMLElement) {\r\n    if (!element || !this.inner) {\r\n      return;\r\n    }\r\n    const maxScroll = element.offsetTop;\r\n    if (this.inner.scrollTop > maxScroll) {\r\n      this.inner.scrollTop = maxScroll;\r\n      return;\r\n    }\r\n\r\n    const minScroll = element.offsetTop + element.scrollHeight - this.inner.offsetHeight;\r\n    if (this.inner.scrollTop < minScroll) {\r\n      this.inner.scrollTop = minScroll;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   */\r\n  public scrollToTop() {\r\n    if (!this.inner) {\r\n      return;\r\n    }\r\n    this.inner.scrollTop = 0;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   */\r\n  public scrollToBottom() {\r\n    if (!this.inner) {\r\n      return;\r\n    }\r\n    this.inner.scrollTop = this.inner.scrollHeight - this.inner.offsetHeight;\r\n  }\r\n\r\n  private refInner = (element: HTMLElement | null) => {\r\n    if (!this.inner && element && this.props.preventWindowScroll) {\r\n      element.addEventListener('wheel', this.handleInnerScrollWheel, { passive: false });\r\n    }\r\n    if (this.inner && !element) {\r\n      this.inner.removeEventListener('wheel', this.handleInnerScrollWheel);\r\n    }\r\n    this.inner = element;\r\n  };\r\n\r\n  private refScroll = (element: HTMLElement | null) => {\r\n    if (!this.scroll && element) {\r\n      element.addEventListener('wheel', this.handleScrollWheel, { passive: false });\r\n    }\r\n    if (this.scroll && !element) {\r\n      this.scroll.removeEventListener('wheel', this.handleScrollWheel);\r\n    }\r\n    this.scroll = element;\r\n  };\r\n\r\n  private handleNativeScroll = (event: React.UIEvent<HTMLDivElement>) => {\r\n    this.reflow();\r\n    if (this.props.preventWindowScroll) {\r\n      event.preventDefault();\r\n      return;\r\n    }\r\n    LayoutEvents.emit();\r\n  };\r\n\r\n  private reflow = () => {\r\n    if (!this.inner) {\r\n      return;\r\n    }\r\n\r\n    const containerHeight = this.inner.offsetHeight;\r\n    const contentHeight = this.inner.scrollHeight;\r\n    const scrollTop = this.inner.scrollTop;\r\n\r\n    const scrollActive = containerHeight < contentHeight;\r\n\r\n    if (!scrollActive && !this.state.scrollActive) {\r\n      return;\r\n    }\r\n\r\n    if (scrollActive) {\r\n      let scrollSize = (containerHeight / contentHeight) * containerHeight;\r\n\r\n      if (scrollSize < MIN_SCROLL_SIZE) {\r\n        scrollSize = MIN_SCROLL_SIZE;\r\n      }\r\n\r\n      const scrollPos = (scrollTop / (contentHeight - containerHeight)) * (containerHeight - scrollSize);\r\n\r\n      if (this.state.scrollSize !== scrollSize || this.state.scrollPos !== scrollPos) {\r\n        const { scrollState } = this.state;\r\n        const updatedScrollState = this.getImmediateScrollState();\r\n        const scrollParamsToUpdate = {\r\n          scrollActive: true,\r\n          scrollSize,\r\n          scrollPos,\r\n          scrollState,\r\n        };\r\n\r\n        if (updatedScrollState !== this.state.scrollState) {\r\n          scrollParamsToUpdate.scrollState = updatedScrollState;\r\n\r\n          if (this.props.onScrollStateChange) {\r\n            this.props.onScrollStateChange(updatedScrollState);\r\n          }\r\n        }\r\n\r\n        this.setState(scrollParamsToUpdate);\r\n      }\r\n    } else {\r\n      this.setState({\r\n        scrollActive: false,\r\n        scrollSize: 0,\r\n        scrollPos: 0,\r\n      });\r\n    }\r\n  };\r\n\r\n  private handleScrollMouseDown = (event: React.MouseEvent<HTMLDivElement>) => {\r\n    if (!this.inner) {\r\n      return;\r\n    }\r\n\r\n    const target: Document = window.document;\r\n    const initialY = event.clientY;\r\n    const initialScrollTop = this.inner.scrollTop;\r\n\r\n    const mouseMove = (mouseMoveEvent: MouseEvent) => {\r\n      if (!this.inner) {\r\n        return;\r\n      }\r\n\r\n      const ratio =\r\n        (this.inner.scrollHeight - this.inner.offsetHeight) / (this.inner.offsetHeight - this.state.scrollSize);\r\n      const deltaY = (mouseMoveEvent.clientY - initialY) * ratio;\r\n\r\n      this.inner.scrollTop = initialScrollTop + deltaY;\r\n\r\n      if (mouseMoveEvent.preventDefault) {\r\n        mouseMoveEvent.preventDefault();\r\n      }\r\n\r\n      if (Object.prototype.hasOwnProperty.call(mouseMoveEvent, 'returnValue')) {\r\n        (mouseMoveEvent as MouseEvent & {\r\n          returnValue: boolean;\r\n        }).returnValue = false;\r\n      }\r\n    };\r\n\r\n    const mouseUp = () => {\r\n      target.removeEventListener('mousemove', mouseMove);\r\n      target.removeEventListener('mouseup', mouseUp);\r\n      this.setState({ scrolling: false });\r\n    };\r\n\r\n    target.addEventListener('mousemove', mouseMove);\r\n    target.addEventListener('mouseup', mouseUp);\r\n    this.setState({ scrolling: true });\r\n\r\n    event.preventDefault();\r\n  };\r\n\r\n  private handleScrollWheel = (event: Event) => {\r\n    if (!this.inner || !(event instanceof WheelEvent)) {\r\n      return;\r\n    }\r\n\r\n    if (event.deltaY > 0 && this.inner.scrollHeight <= this.inner.scrollTop + this.inner.offsetHeight) {\r\n      return;\r\n    }\r\n    if (event.deltaY < 0 && this.inner.scrollTop <= 0) {\r\n      return;\r\n    }\r\n\r\n    this.inner.scrollTop += event.deltaY;\r\n    event.preventDefault();\r\n  };\r\n\r\n  private handleInnerScrollWheel = (event: Event) => {\r\n    if (!this.inner || !(event instanceof WheelEvent)) {\r\n      return;\r\n    }\r\n\r\n    if (event.deltaY > 0 && this.inner.scrollHeight <= this.inner.scrollTop + this.inner.offsetHeight) {\r\n      event.preventDefault();\r\n      return false;\r\n    }\r\n    if (event.deltaY < 0 && this.inner.scrollTop <= 0) {\r\n      event.preventDefault();\r\n      return false;\r\n    }\r\n  };\r\n\r\n  private handleMouseMove = (event: React.MouseEvent<HTMLDivElement>) => {\r\n    const right = event.currentTarget.getBoundingClientRect().right - event.pageX;\r\n    this.setHover(right <= 12);\r\n  };\r\n\r\n  private handleMouseLeave = () => {\r\n    this.setHover(false);\r\n  };\r\n\r\n  private setHover(hover: boolean) {\r\n    if (this.state.hover !== hover) {\r\n      this.setState({ hover });\r\n    }\r\n  }\r\n\r\n  private getImmediateScrollState(): ScrollContainerScrollState {\r\n    if (!this.inner || this.inner.scrollTop === 0) {\r\n      return 'top';\r\n    } else if (this.inner.scrollTop === this.inner.scrollHeight - this.inner.offsetHeight) {\r\n      return 'bottom';\r\n    } else {\r\n      return 'scroll';\r\n    }\r\n  }\r\n\r\n  private getMarginRight(): number {\r\n    return -1 * (PADDING_RIGHT + (SCROLL_HIDDEN ? 0 : getScrollWidth()));\r\n  }\r\n}\r\n"]}