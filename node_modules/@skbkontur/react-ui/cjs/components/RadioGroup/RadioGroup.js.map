{"version":3,"sources":["RadioGroup.tsx"],"names":["RadioGroup","props","node","name","getProps","defaultProps","getValue","isControlled","value","state","activeItem","getName","handleSelect","setState","onValueChange","renderRadio","itemValue","data","index","itemProps","key","className","jsStyles","item","itemFirst","itemInline","inline","renderItem","ref","element","defaultValue","getChildContext","onSelect","disabled","error","warning","render","width","onMouseLeave","onMouseOver","onMouseEnter","onBlur","style","handlers","root","renderChildren","focus","radio","querySelector","items","children","mapItems","React","Component","__KONTUR_REACT_UI__","childContextTypes","PropTypes","bool","string","any","func","propTypes","oneOfType","number","Prevent","_value","fn","result","entry","normalizeEntry","push","Array","isArray"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport invariant from 'invariant';\r\nimport cn from 'classnames';\r\n\r\nimport { getRandomID } from '../../lib/utils';\r\nimport { Radio } from '../Radio';\r\nimport { createPropsGetter } from '../../lib/createPropsGetter';\r\nimport { Nullable } from '../../typings/utility-types';\r\nimport { FocusTrap } from '../../internal/FocusTrap';\r\n\r\nimport { jsStyles } from './RadioGroup.styles';\r\nimport { Prevent } from './Prevent';\r\n\r\nexport interface RadioGroupProps<T = string | number> {\r\n  defaultValue?: T;\r\n  value?: T;\r\n  items?: T[] | [T, React.ReactNode][];\r\n  name?: string;\r\n  disabled?: boolean;\r\n  warning?: boolean;\r\n  error?: boolean;\r\n  inline?: boolean;\r\n  width?: React.CSSProperties['width'];\r\n  renderItem?: (itemValue: T, data: React.ReactNode) => React.ReactNode;\r\n  /** Вызывается при изменении `value` */\r\n  onValueChange?: (value: T) => void;\r\n  onBlur?: (event: FocusEvent) => void;\r\n  onMouseLeave?: () => any;\r\n  onMouseOver?: () => any;\r\n  onMouseEnter?: () => any;\r\n}\r\n\r\nexport interface RadioGroupState<T> {\r\n  activeItem?: T;\r\n}\r\n\r\nexport class RadioGroup<T> extends React.Component<RadioGroupProps<T>, RadioGroupState<T>> {\r\n  public static __KONTUR_REACT_UI__ = 'RadioGroup';\r\n\r\n  public static childContextTypes = {\r\n    error: PropTypes.bool,\r\n    name: PropTypes.string,\r\n    warning: PropTypes.bool,\r\n    disabled: PropTypes.bool,\r\n    activeItem: PropTypes.any,\r\n    onSelect: PropTypes.func,\r\n  };\r\n\r\n  public static propTypes = {\r\n    /**\r\n     * Может быть использовано, если не передан параметр `items`\r\n     *\r\n     * `children` может содержать любую разметку с компонентами Radio.\r\n     * Каждому компоненту Radio нужно указать параметр `value`, такого же типа\r\n     * как и параметр `value` самой радиогруппы.\r\n     *\r\n     * Значения активного элемента сравниваются по строгому равенству `===`\r\n     */\r\n    children: PropTypes.node,\r\n\r\n    /**\r\n     * Значение по умолчанию. Должно быть одним из значений дочерних радиокнопок\r\n     * или значей из параметра `items`\r\n     */\r\n    defaultValue: PropTypes.any,\r\n\r\n    /**\r\n     * Дизейблит все радиокнопки\r\n     */\r\n    disabled: PropTypes.bool,\r\n\r\n    /**\r\n     * Переводит все радиокнопки в состоянии ошибки\r\n     */\r\n    error: PropTypes.bool,\r\n\r\n    /**\r\n     * Выравнивает элементы в строку. Не работает с `children`\r\n     */\r\n    inline: PropTypes.bool,\r\n\r\n    /**\r\n     * Может быть использовано, если не передан параметр `children`\r\n     *\r\n     * Массив параметров радиокнопок. Может быть типа `Array<Value>` или\r\n     * `Array<[Value, Data]>`, где тип `Value` — значение радиокнопки, а `Data`\r\n     * — значение которое будет использовано вторым параметром в `renderItem`.\r\n     * Если тип `items: Array<Value>`, то он будет приведен к типу\r\n     * `Array<[Value, Value]>`\r\n     */\r\n    items: PropTypes.any,\r\n\r\n    /**\r\n     * Аттрибут name для вложенных радиокнопок. Если не указан, то сгенерируется\r\n     * случайное имя по алгоритму\r\n     * [uuid v1](https://github.com/kelektiv/node-uuid#version-1)\r\n     */\r\n    name: PropTypes.string,\r\n\r\n    /**\r\n     * Метод отрисовки контента радиокнопки. Не работает с `children`.\r\n     *\r\n     * Принимает два аргумента: `(value: Value, data: Data) => React.Node`\r\n     */\r\n    renderItem: PropTypes.func,\r\n\r\n    /**\r\n     * Значение радиогруппы. Должно быть одним из значений радиокнопок.\r\n     * Если не указано, то компонент будет работать, как неконтроллируемый\r\n     */\r\n    value: PropTypes.any,\r\n\r\n    /**\r\n     * Переводит все радиокнопки в состоянии предупреждения\r\n     */\r\n    warning: PropTypes.bool,\r\n\r\n    /**\r\n     * Ширина радиогруппы. Не работает с `children`\r\n     */\r\n    width: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\r\n\r\n    /**\r\n     * Обработчик события при переключении радиокнопок.\r\n     * Имеет тип\r\n     * `(value: Value) => any`\r\n     */\r\n    onValueChange: PropTypes.func,\r\n\r\n    onBlur: PropTypes.func,\r\n\r\n    onMouseEnter: PropTypes.func,\r\n\r\n    onMouseLeave: PropTypes.func,\r\n\r\n    onMouseOver: PropTypes.func,\r\n  };\r\n\r\n  public static defaultProps = {\r\n    renderItem,\r\n  };\r\n\r\n  public static Prevent = Prevent;\r\n\r\n  private node: Nullable<HTMLSpanElement>;\r\n  private name = getRandomID();\r\n  private getProps = createPropsGetter(RadioGroup.defaultProps);\r\n\r\n  constructor(props: RadioGroupProps<T>) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      activeItem: this.props.defaultValue,\r\n    };\r\n  }\r\n\r\n  public getChildContext() {\r\n    return {\r\n      activeItem: this.getValue(),\r\n      onSelect: this.handleSelect,\r\n      name: this.getName(),\r\n      disabled: this.props.disabled,\r\n      error: this.props.error,\r\n      warning: this.props.warning,\r\n    };\r\n  }\r\n\r\n  public render() {\r\n    const { width, onMouseLeave, onMouseOver, onMouseEnter, onBlur } = this.props;\r\n    const style = {\r\n      width: width != null ? width : 'auto',\r\n    };\r\n    const handlers = {\r\n      onMouseOver,\r\n      onMouseEnter,\r\n      onMouseLeave,\r\n    };\r\n\r\n    return (\r\n      <FocusTrap onBlur={onBlur}>\r\n        <span ref={this.ref} style={style} className={jsStyles.root()} {...handlers}>\r\n          {this.renderChildren()}\r\n        </span>\r\n      </FocusTrap>\r\n    );\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   */\r\n  public focus() {\r\n    const node = this.node;\r\n    if (!node) {\r\n      return;\r\n    }\r\n\r\n    let radio = node.querySelector('input[type=\"radio\"]:checked') as Nullable<HTMLInputElement>;\r\n\r\n    // If no checked radios, try get first radio\r\n    if (!radio || radio.disabled) {\r\n      radio = node.querySelector('input[type=\"radio\"]:not([disabled])') as Nullable<HTMLInputElement>;\r\n    }\r\n\r\n    if (radio) {\r\n      radio.focus();\r\n    }\r\n  }\r\n\r\n  private getValue = () => (this.isControlled() ? this.props.value : this.state.activeItem);\r\n\r\n  private getName = () => this.props.name || this.name;\r\n\r\n  private isControlled = () => this.props.value != null;\r\n\r\n  private handleSelect = (value: T) => {\r\n    if (!this.isControlled()) {\r\n      this.setState({ activeItem: value });\r\n    }\r\n    if (this.props.onValueChange) {\r\n      this.props.onValueChange(value);\r\n    }\r\n  };\r\n\r\n  private renderChildren() {\r\n    const { items, children } = this.props;\r\n    invariant((!items && children) || (items && !children), 'Either items or children must be passed, not both');\r\n    return items ? mapItems<T>(this.renderRadio, items) : children;\r\n  }\r\n\r\n  private renderRadio = (itemValue: T, data: React.ReactNode, index: number): JSX.Element => {\r\n    const itemProps = {\r\n      key: typeof itemValue === 'string' || typeof itemValue === 'number' ? itemValue : index,\r\n      className: cn({\r\n        [jsStyles.item()]: true,\r\n        [jsStyles.itemFirst()]: index === 0,\r\n        [jsStyles.itemInline()]: !!this.props.inline,\r\n      }),\r\n    };\r\n\r\n    return (\r\n      <span {...itemProps}>\r\n        <Radio value={itemValue}>{this.getProps().renderItem<T>(itemValue, data)}</Radio>\r\n      </span>\r\n    );\r\n  };\r\n\r\n  private ref = (element: HTMLSpanElement) => {\r\n    this.node = element;\r\n  };\r\n}\r\n\r\nfunction renderItem<T>(_value: T, data: React.ReactNode) {\r\n  return data;\r\n}\r\n\r\nfunction mapItems<T>(\r\n  fn: (value: T, data: React.ReactNode, index: number) => React.ReactNode,\r\n  items: T[] | [T, React.ReactNode][],\r\n) {\r\n  const result: React.ReactNode[] = [];\r\n  let index = 0;\r\n  for (const entry of items) {\r\n    const [value, data] = normalizeEntry<T>(entry);\r\n    result.push(fn(value, data, index));\r\n    ++index;\r\n  }\r\n  return result;\r\n}\r\n\r\nfunction normalizeEntry<T>(entry: T | [T, React.ReactNode]): [T, React.ReactNode] {\r\n  if (!Array.isArray(entry)) {\r\n    return [entry, entry];\r\n  }\r\n  return entry;\r\n}\r\n"]}