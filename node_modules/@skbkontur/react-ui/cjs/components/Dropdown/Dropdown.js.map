{"version":3,"sources":["Dropdown.tsx"],"names":["PASS_PROPS","_renderButton","error","disabled","disablePortal","menuAlign","menuWidth","maxMenuHeight","use","size","warning","width","onOpen","onClose","onMouseEnter","onMouseLeave","onMouseOver","diadocLinkIcon","Dropdown","_select","_refSelect","element","render","items","React","Children","map","props","children","item","caption","icon","renderValue","open","close","Component","__KONTUR_REACT_UI__","Header","MenuHeader","MenuItem","Separator","MenuSeparator","propTypes","PropTypes","node","isRequired","bool","number","oneOf","oneOfType","string","any","func","value"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { filterProps } from '../../lib/filterProps';\r\nimport { MenuHeader } from '../MenuHeader';\r\nimport { MenuItem } from '../MenuItem';\r\nimport { MenuSeparator } from '../MenuSeparator';\r\nimport { Select } from '../Select';\r\nimport { Nullable } from '../../typings/utility-types';\r\nimport { ButtonSize, ButtonUse } from '../Button';\r\n\r\nconst PASS_PROPS = {\r\n  _renderButton: true,\r\n  error: true,\r\n  disabled: true,\r\n  disablePortal: true,\r\n  menuAlign: true,\r\n  menuWidth: true,\r\n  maxMenuHeight: true,\r\n  use: true,\r\n  size: true,\r\n  warning: true,\r\n  width: true,\r\n  onOpen: true,\r\n  onClose: true,\r\n  onMouseEnter: true,\r\n  onMouseLeave: true,\r\n  onMouseOver: true,\r\n\r\n  diadocLinkIcon: true, // @deprecated TODO remove in 3.0.\r\n};\r\n\r\nexport interface DropdownProps {\r\n  /**\r\n   * Подпись на кнопке.\r\n   */\r\n  caption: React.ReactNode;\r\n  /**\r\n   * Иконка слева от текста кнопки\r\n   */\r\n  icon?: React.ReactElement<any>;\r\n  width?: React.CSSProperties['width'];\r\n\r\n  /** @ignore */\r\n  _renderButton?: (params: any) => JSX.Element;\r\n\r\n  /**\r\n   * Отключает использование портала\r\n   */\r\n  disablePortal?: boolean;\r\n\r\n  /**\r\n   * Визуально отключает Dropdown\r\n   */\r\n  disabled?: boolean;\r\n\r\n  /**\r\n   * Визуально показать наличие ошибки.\r\n   */\r\n  error?: boolean;\r\n  /**\r\n   * Визуально показать наличие предупреждения.\r\n   */\r\n  warning?: boolean;\r\n  maxMenuHeight?: number;\r\n  menuAlign?: 'left' | 'right';\r\n  menuWidth?: number | string;\r\n  size?: ButtonSize;\r\n\r\n  /**\r\n   * Смотри Button.\r\n   */\r\n  use?: ButtonUse;\r\n\r\n  /**\r\n   * Вызывается при закрытии меню.\r\n   */\r\n  onClose?: () => void;\r\n  /**\r\n   * Вызывается при открытии меню.\r\n   */\r\n  onOpen?: () => void;\r\n  onMouseEnter?: (event: React.MouseEvent<HTMLElement>) => void;\r\n  onMouseLeave?: (event: React.MouseEvent<HTMLElement>) => void;\r\n  onMouseOver?: (event: React.MouseEvent<HTMLElement>) => void;\r\n}\r\n\r\ntype DropdownSelectType = Select<React.ReactNode, React.ReactNode>;\r\n\r\n/**\r\n * Выпадающее меню.\r\n */\r\nexport class Dropdown extends React.Component<DropdownProps> {\r\n  public static __KONTUR_REACT_UI__ = 'Dropdown';\r\n\r\n  public static Header = MenuHeader;\r\n  public static MenuItem = MenuItem;\r\n  public static Separator = MenuSeparator;\r\n\r\n  public static propTypes = {\r\n    /**\r\n     * Подпись на кнопке.\r\n     */\r\n    caption: PropTypes.node.isRequired,\r\n\r\n    /**\r\n     * Отключает использование портала\r\n     */\r\n    disablePortal: PropTypes.bool,\r\n\r\n    /**\r\n     * Визуально отключает Dropdown\r\n     */\r\n    disabled: PropTypes.bool,\r\n\r\n    /**\r\n     * Визуально показать наличие ошибки.\r\n     */\r\n    error: PropTypes.bool,\r\n\r\n    /**\r\n     * Иконка слева от текста кнопки\r\n     */\r\n    icon: PropTypes.node,\r\n\r\n    maxMenuHeight: PropTypes.number,\r\n\r\n    menuAlign: PropTypes.oneOf(['left', 'right']),\r\n\r\n    menuWidth: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\r\n\r\n    size: PropTypes.oneOf(['small', 'medium', 'large']),\r\n\r\n    /**\r\n     * Смотри Button.\r\n     */\r\n    use: PropTypes.any,\r\n\r\n    /**\r\n     * Визуально показать наличие предупреждения.\r\n     */\r\n    warning: PropTypes.bool,\r\n\r\n    width: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\r\n\r\n    /**\r\n     * Вызывается при закрытии меню.\r\n     */\r\n    onClose: PropTypes.func,\r\n\r\n    onMouseEnter: PropTypes.func,\r\n\r\n    onMouseLeave: PropTypes.func,\r\n\r\n    onMouseOver: PropTypes.func,\r\n\r\n    /**\r\n     * Вызывается при открытии меню.\r\n     */\r\n    onOpen: PropTypes.func,\r\n  };\r\n\r\n  private _select: Nullable<DropdownSelectType>;\r\n\r\n  public render() {\r\n    const items = React.Children.map(this.props.children, item => item);\r\n\r\n    return (\r\n      <Select<React.ReactNode, React.ReactNode>\r\n        ref={this._refSelect}\r\n        {...filterProps(this.props, PASS_PROPS)}\r\n        value={this.props.caption}\r\n        items={items}\r\n        _icon={this.props.icon}\r\n        renderValue={renderValue}\r\n      />\r\n    );\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   */\r\n  public open() {\r\n    if (this._select) {\r\n      this._select.open();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   */\r\n  public close() {\r\n    if (this._select) {\r\n      this._select.close();\r\n    }\r\n  }\r\n\r\n  private _refSelect = (element: DropdownSelectType): void => {\r\n    this._select = element;\r\n  };\r\n}\r\n\r\nfunction renderValue(value: any) {\r\n  return value;\r\n}\r\n"]}