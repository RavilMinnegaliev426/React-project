{"version":3,"sources":["Paging.tsx"],"names":["IGNORE_EVENT_TAGS","Paging","PagingLocaleHelper","state","focusedByTab","focusedItem","keyboardControl","props","useGlobalListener","theme","locale","addedGlobalListener","container","renderItem","item","index","focused","getFocusedItem","key","renderDots","disabled","isItemDisabled","renderForwardLink","active","activePage","renderPageLink","jsStyles","dots","classes","forwardLink","forwardLinkFocused","Component","component","caption","forward","emptyHandler","goForward","forwardIcon","pageNumber","pageLink","pageLinkFocused","handleClick","goToPage","pageLinkWrapper","handleMouseDownPageLink","renderNavigationHint","withoutNavigationHint","canGoBackward","canGoForward","pageLinkHint","transparent","NavigationHelper","getKeyName","pageLinkHintPlaceHolder","handleMouseDown","setState","isIE11","setTimeout","focus","handleKeyDown","e","shiftKey","target","isArrowLeft","isArrowRight","Element","includes","tagName","toLowerCase","isContentEditable","checkKeyPressed","goBackward","moveFocusLeft","moveFocusRight","executeItemAction","handleFocus","process","nextTick","tabListener","isTabPressed","handleBlur","getItems","pagesCount","concat","isItemFocusable","moveFocus","step","items","findIndex","x","length","onPageChange","addGlobalListener","document","addEventListener","removeGlobalListener","removeEventListener","refContainer","element","isForward","componentDidMount","UNSAFE_componentWillReceiveProps","nextProps","componentDidUpdate","prevProps","componentWillUnmount","render","renderMain","paging","undefined","map","React","__KONTUR_REACT_UI__","defaultProps","className","onClick","children","propTypes","number","isRequired","func"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { func, number } from 'prop-types';\r\nimport cn from 'classnames';\r\n\r\nimport { isKeyArrowLeft, isKeyArrowRight, isKeyEnter } from '../../lib/events/keyboard/identifiers';\r\nimport { locale } from '../../lib/locale/decorators';\r\nimport { Nullable } from '../../typings/utility-types';\r\nimport { tabListener } from '../../lib/events/tabListener';\r\nimport { emptyHandler, isIE11 } from '../../lib/utils';\r\nimport { ThemeContext } from '../../lib/theming/ThemeContext';\r\nimport { Theme } from '../../lib/theming/Theme';\r\nimport { ArrowChevronRightIcon } from '../../internal/icons/16px';\r\n\r\nimport { jsStyles } from './Paging.styles';\r\nimport * as NavigationHelper from './NavigationHelper';\r\nimport { getItems } from './PagingHelper';\r\nimport { PagingLocale, PagingLocaleHelper } from './locale';\r\n\r\nconst IGNORE_EVENT_TAGS = ['input', 'textarea'];\r\n\r\ninterface ItemComponentProps {\r\n  active: boolean;\r\n  children?: React.ReactNode;\r\n  className: string;\r\n  onClick: () => void;\r\n  pageNumber: number | 'forward';\r\n  tabIndex: number;\r\n}\r\n\r\nexport interface PagingProps {\r\n  activePage: number;\r\n  /**\r\n   * Компонент обертки по умолчанию\r\n   * @default <span />\r\n   */\r\n  component: React.ComponentType<ItemComponentProps>;\r\n  onPageChange: (pageNumber: number) => void;\r\n  pagesCount: number;\r\n  disabled?: boolean;\r\n  /**\r\n   * Отключает навигационные подсказки.\r\n   * По-умолчанию подсказки появляются, когда доступно управление с клавиатуры\r\n   * (либо элемент в фокусе, либо globalListeners === true)\r\n   */\r\n  withoutNavigationHint?: boolean;\r\n  caption?: string;\r\n  /**\r\n   * Глобальный слушатель **keyDown**, для навигации клавишами без фокуса на компоненте.\r\n   * Если на странице используется несколько элементов\r\n   * **Paging** с useGlobalListener === true, то обработчик keyDown будет вызываться\r\n   * на каждом из них. Такие случаи лучше обрабатывать отдельно.\r\n   */\r\n  useGlobalListener: boolean;\r\n}\r\n\r\nexport interface PagingState {\r\n  focusedByTab: boolean;\r\n  focusedItem: Nullable<ItemType>;\r\n  keyboardControl: boolean;\r\n}\r\n\r\nexport type ItemType = number | '.' | 'forward';\r\n\r\n@locale('Paging', PagingLocaleHelper)\r\nexport class Paging extends React.Component<PagingProps, PagingState> {\r\n  public static __KONTUR_REACT_UI__ = 'Paging';\r\n\r\n  public static defaultProps = {\r\n    component: ({ className, onClick, children }: any) => (\r\n      <span className={className} onClick={onClick}>\r\n        {children}\r\n      </span>\r\n    ),\r\n    useGlobalListener: false,\r\n  };\r\n\r\n  public static propTypes = {};\r\n\r\n  public static isForward(pageNumber: number | 'forward'): boolean /* %checks */ {\r\n    return pageNumber === 'forward';\r\n  }\r\n\r\n  public state: PagingState = {\r\n    focusedByTab: false,\r\n    focusedItem: null,\r\n    keyboardControl: this.props.useGlobalListener,\r\n  };\r\n\r\n  private theme!: Theme;\r\n  private readonly locale!: PagingLocale;\r\n  private addedGlobalListener = false;\r\n  private container: HTMLSpanElement | null = null;\r\n\r\n  public componentDidMount() {\r\n    const { useGlobalListener } = this.props;\r\n    if (useGlobalListener) {\r\n      this.addGlobalListener();\r\n    }\r\n  }\r\n\r\n  public UNSAFE_componentWillReceiveProps(nextProps: PagingProps) {\r\n    if (this.props.useGlobalListener !== nextProps.useGlobalListener) {\r\n      this.setState({\r\n        keyboardControl: nextProps.useGlobalListener,\r\n      });\r\n    }\r\n  }\r\n\r\n  public componentDidUpdate(prevProps: PagingProps) {\r\n    if (!prevProps.useGlobalListener && this.props.useGlobalListener) {\r\n      this.addGlobalListener();\r\n    }\r\n\r\n    if (prevProps.useGlobalListener && !this.props.useGlobalListener) {\r\n      this.removeGlobalListener();\r\n    }\r\n  }\r\n\r\n  public componentWillUnmount() {\r\n    this.removeGlobalListener();\r\n  }\r\n\r\n  public render() {\r\n    return (\r\n      <ThemeContext.Consumer>\r\n        {theme => {\r\n          this.theme = theme;\r\n          return this.renderMain();\r\n        }}\r\n      </ThemeContext.Consumer>\r\n    );\r\n  }\r\n\r\n  private renderMain() {\r\n    return (\r\n      <span\r\n        tabIndex={0}\r\n        data-tid=\"Paging__root\"\r\n        className={jsStyles.paging()}\r\n        onKeyDown={this.props.useGlobalListener ? undefined : this.handleKeyDown}\r\n        onFocus={this.handleFocus}\r\n        onBlur={this.handleBlur}\r\n        onMouseDown={this.handleMouseDown}\r\n        ref={this.refContainer}\r\n      >\r\n        {this.getItems().map(this.renderItem)}\r\n      </span>\r\n    );\r\n  }\r\n\r\n  private renderItem = (item: ItemType, index: number) => {\r\n    const focused = this.getFocusedItem() === item;\r\n    switch (item) {\r\n      case '.': {\r\n        const key = `dots${index < 5 ? 'Left' : 'Right'}`;\r\n        return this.renderDots(key);\r\n      }\r\n      case 'forward': {\r\n        const disabled = this.isItemDisabled(item);\r\n        return this.renderForwardLink(disabled, focused);\r\n      }\r\n      default: {\r\n        const active = this.props.activePage === item;\r\n        return this.renderPageLink(item, active, focused);\r\n      }\r\n    }\r\n  };\r\n\r\n  private renderDots = (key: string) => {\r\n    return (\r\n      <span data-tid=\"Paging__dots\" key={key} className={jsStyles.dots(this.theme)}>\r\n        {'...'}\r\n      </span>\r\n    );\r\n  };\r\n\r\n  private renderForwardLink = (disabled: boolean, focused: boolean): JSX.Element => {\r\n    const classes = cn({\r\n      [jsStyles.forwardLink(this.theme)]: true,\r\n      [jsStyles.forwardLinkFocused()]: focused,\r\n      [jsStyles.disabled(this.theme)]: disabled,\r\n    });\r\n    const { component: Component, caption } = this.props;\r\n    const { forward } = this.locale;\r\n\r\n    return (\r\n      <Component\r\n        key={'forward'}\r\n        data-tid=\"Paging__forwardLink\"\r\n        active={false}\r\n        className={classes}\r\n        onClick={disabled ? emptyHandler : this.goForward}\r\n        tabIndex={-1}\r\n        pageNumber={'forward' as 'forward'}\r\n      >\r\n        {caption || forward}\r\n        <span className={jsStyles.forwardIcon()}>\r\n          <ArrowChevronRightIcon size=\"18px\" />\r\n        </span>\r\n      </Component>\r\n    );\r\n  };\r\n\r\n  private renderPageLink = (pageNumber: number, active: boolean, focused: boolean): JSX.Element => {\r\n    const classes = cn({\r\n      [jsStyles.pageLink(this.theme)]: true,\r\n      [jsStyles.pageLinkFocused(this.theme)]: focused,\r\n      [jsStyles.active()]: active,\r\n    });\r\n    const Component = this.props.component;\r\n    const handleClick = () => this.goToPage(pageNumber);\r\n\r\n    return (\r\n      <span\r\n        data-tid=\"Paging__pageLinkWrapper\"\r\n        key={pageNumber}\r\n        className={jsStyles.pageLinkWrapper()}\r\n        onMouseDown={this.handleMouseDownPageLink}\r\n      >\r\n        <Component\r\n          data-tid=\"Paging__pageLink\"\r\n          active={active}\r\n          className={classes}\r\n          onClick={handleClick}\r\n          tabIndex={-1}\r\n          pageNumber={pageNumber}\r\n        >\r\n          {pageNumber}\r\n        </Component>\r\n        {active && this.renderNavigationHint()}\r\n      </span>\r\n    );\r\n  };\r\n\r\n  private renderNavigationHint = () => {\r\n    if (this.props.withoutNavigationHint) {\r\n      return null;\r\n    }\r\n\r\n    const { keyboardControl } = this.state;\r\n    const canGoBackward = this.canGoBackward();\r\n    const canGoForward = this.canGoForward();\r\n\r\n    if (keyboardControl && (canGoBackward || canGoForward)) {\r\n      return (\r\n        <span className={jsStyles.pageLinkHint(this.theme)}>\r\n          <span className={canGoBackward ? '' : jsStyles.transparent()}>{'←'}</span>\r\n          <span>{NavigationHelper.getKeyName()}</span>\r\n          <span className={canGoForward ? '' : jsStyles.transparent()}>{'→'}</span>\r\n        </span>\r\n      );\r\n    }\r\n\r\n    return <div className={jsStyles.pageLinkHintPlaceHolder()} />;\r\n  };\r\n\r\n  private handleMouseDown = () => {\r\n    this.setState({ focusedByTab: false, focusedItem: null });\r\n  };\r\n\r\n  private handleMouseDownPageLink = () => {\r\n    if (isIE11) {\r\n      // Клик по span внутри контейнера с tabindex=\"0\" переносит фокус именно на этот span.\r\n      // Поэтому горячие клавиши работают пока span существует на странице.\r\n      setTimeout(() => this.container && this.container.focus(), 0);\r\n    }\r\n  };\r\n\r\n  private handleKeyDown = (e: KeyboardEvent | React.KeyboardEvent<HTMLElement>) => {\r\n    if (e.shiftKey) {\r\n      return;\r\n    }\r\n\r\n    const target = e.target;\r\n\r\n    const isArrowLeft = isKeyArrowLeft(e);\r\n    const isArrowRight = isKeyArrowRight(e);\r\n\r\n    if (\r\n      target instanceof Element &&\r\n      (IGNORE_EVENT_TAGS.includes(target.tagName.toLowerCase()) || (target as HTMLElement).isContentEditable)\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    if (NavigationHelper.checkKeyPressed(e) && isArrowLeft) {\r\n      this.setState({ focusedItem: null }, this.goBackward);\r\n      return;\r\n    }\r\n    if (NavigationHelper.checkKeyPressed(e) && isArrowRight) {\r\n      this.setState({ focusedItem: null }, this.goForward);\r\n      return;\r\n    }\r\n\r\n    if (this.container && this.container === e.target) {\r\n      if (isArrowLeft) {\r\n        this.setState({ focusedByTab: true }, this.moveFocusLeft);\r\n        return;\r\n      }\r\n      if (isArrowRight) {\r\n        this.setState({ focusedByTab: true }, this.moveFocusRight);\r\n        return;\r\n      }\r\n      if (isKeyEnter(e)) {\r\n        this.executeItemAction(this.getFocusedItem());\r\n        return;\r\n      }\r\n    }\r\n  };\r\n\r\n  private handleFocus = (e: React.FocusEvent<HTMLElement>) => {\r\n    if (this.props.disabled) {\r\n      return;\r\n    }\r\n\r\n    this.setState({ keyboardControl: true });\r\n\r\n    // focus event fires before keyDown eventlistener\r\n    // so we should check tabPressed in async way\r\n    process.nextTick(() => {\r\n      if (tabListener.isTabPressed) {\r\n        this.setState({ focusedByTab: true });\r\n      }\r\n    });\r\n  };\r\n\r\n  private handleBlur = () => {\r\n    this.setState({\r\n      focusedByTab: false,\r\n      keyboardControl: this.props.useGlobalListener || false,\r\n    });\r\n  };\r\n\r\n  private getItems = (): ItemType[] => {\r\n    return getItems(this.props.activePage, this.props.pagesCount).concat('forward');\r\n  };\r\n\r\n  private getFocusedItem = (): Nullable<ItemType> => {\r\n    if (!this.state.focusedByTab) {\r\n      return null;\r\n    }\r\n\r\n    const { focusedItem } = this.state;\r\n    if (focusedItem && this.getItems().includes(focusedItem) && this.isItemFocusable(focusedItem)) {\r\n      return focusedItem;\r\n    }\r\n\r\n    return this.props.activePage;\r\n  };\r\n\r\n  private isItemFocusable = (item: ItemType) => {\r\n    return !this.isItemDisabled(item);\r\n  };\r\n\r\n  private isItemDisabled = (item: ItemType) => {\r\n    switch (item) {\r\n      case '.':\r\n        return true;\r\n      case 'forward':\r\n        return !this.canGoForward();\r\n      default:\r\n        return false;\r\n    }\r\n  };\r\n\r\n  private executeItemAction = (item: Nullable<ItemType>) => {\r\n    if (item === 'forward') {\r\n      this.goForward();\r\n    }\r\n    if (typeof item === 'number') {\r\n      this.goToPage(item);\r\n    }\r\n  };\r\n\r\n  private moveFocusLeft = () => {\r\n    this.moveFocus(-1);\r\n  };\r\n\r\n  private moveFocusRight = () => {\r\n    this.moveFocus(1);\r\n  };\r\n\r\n  private moveFocus = (step: number) => {\r\n    const focusedItem = this.getFocusedItem();\r\n    const items = this.getItems();\r\n    let index = items.findIndex(x => x === focusedItem);\r\n    do {\r\n      index = (index + step + items.length) % items.length;\r\n    } while (!this.isItemFocusable(items[index]));\r\n    this.setState({ focusedItem: items[index] });\r\n  };\r\n\r\n  private canGoBackward = (): boolean => {\r\n    return this.props.activePage > 1;\r\n  };\r\n\r\n  private canGoForward = (): boolean => {\r\n    return this.props.activePage < this.props.pagesCount;\r\n  };\r\n\r\n  private goBackward = () => {\r\n    this.goToPage(this.props.activePage - 1);\r\n  };\r\n\r\n  private goForward = () => {\r\n    this.goToPage(this.props.activePage + 1);\r\n  };\r\n\r\n  private goToPage = (pageNumber: number) => {\r\n    if (1 <= pageNumber && pageNumber !== this.props.activePage && pageNumber <= this.props.pagesCount) {\r\n      this.props.onPageChange(pageNumber);\r\n    }\r\n  };\r\n\r\n  private addGlobalListener = () => {\r\n    if (this.addedGlobalListener) {\r\n      return;\r\n    }\r\n\r\n    document.addEventListener('keydown', this.handleKeyDown);\r\n    this.addedGlobalListener = true;\r\n  };\r\n\r\n  private removeGlobalListener = () => {\r\n    if (this.addedGlobalListener) {\r\n      document.removeEventListener('keydown', this.handleKeyDown);\r\n\r\n      this.addedGlobalListener = false;\r\n    }\r\n  };\r\n\r\n  private refContainer = (element: HTMLSpanElement | null) => {\r\n    this.container = element;\r\n  };\r\n}\r\n\r\nPaging.propTypes = {\r\n  /**\r\n   * Current active page\r\n   */\r\n  activePage: number.isRequired,\r\n\r\n  /**\r\n   * React component that would be used for rendering items\r\n   *\r\n   * Usefull for router integration\r\n   */\r\n  component: func,\r\n\r\n  /**\r\n   * Total page count\r\n   */\r\n  pagesCount: number.isRequired,\r\n\r\n  /**\r\n   * Calls when page has been changed\r\n   */\r\n  onPageChange: func.isRequired,\r\n};\r\n"]}