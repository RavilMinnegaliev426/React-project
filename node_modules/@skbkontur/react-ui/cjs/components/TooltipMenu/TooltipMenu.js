"use strict";var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");exports.__esModule = true;exports.TooltipMenu = void 0;var _inheritsLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/inheritsLoose"));var _react = _interopRequireDefault(require("react"));

var _PopupMenu = require("../../internal/PopupMenu");

var _currentEnvironment = require("../../lib/currentEnvironment");




























/**
                                                                    * Меню, раскрывающееся по клику на переданный в ```caption``` элемент.
                                                                    * Положение зависит от переданного массива ```positions``` и работает так:
                                                                    * первое значаение в массиве - дефолтная позиция, меню раскрывается так, если ничего не мешает ему раскрыться,
                                                                    * если раскрыться в данной позиции не получается - берется следующие значение, и так далее.
                                                                    * Если меню должно раскрываться только в одну сторону - передаем в ```positions``` массив с одним элементом.
                                                                    * Если ```positions``` передан или передан пустой массив, используются все возможные положения.
                                                                    */var
TooltipMenu = /*#__PURE__*/function (_React$Component) {(0, _inheritsLoose2.default)(TooltipMenu, _React$Component);





  function TooltipMenu(props) {var _this;
    _this = _React$Component.call(this, props) || this;

    if (!props.caption && !_currentEnvironment.isProductionEnv) {
      throw new Error('Prop "caption" is required!!!');
    }return _this;
  }var _proto = TooltipMenu.prototype;_proto.

  render = function render() {
    if (!this.props.caption) {
      return null;
    }

    return (
      _react.default.createElement(_PopupMenu.PopupMenu, {
        menuMaxHeight: this.props.menuMaxHeight,
        menuWidth: this.props.menuWidth,
        caption: this.props.caption,
        header: this.props.header,
        footer: this.props.footer,
        positions: this.props.positions,
        popupHasPin: true,
        popupMargin: 10,
        popupPinOffset: 15,
        disableAnimations: this.props.disableAnimations },

      this.props.children));


  };return TooltipMenu;}(_react.default.Component);exports.TooltipMenu = TooltipMenu;TooltipMenu.__KONTUR_REACT_UI__ = 'TooltipMenu';TooltipMenu.defaultProps = { disableAnimations: Boolean(process.env.enableReactTesting) };