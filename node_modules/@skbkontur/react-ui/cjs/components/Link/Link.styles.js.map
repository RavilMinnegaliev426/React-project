{"version":3,"sources":["Link.styles.ts"],"names":["styles","root","t","css","button","buttonOpened","arrow","useDefault","linkColor","linkHoverColor","linkActiveColor","useSuccess","linkSuccessColor","linkSuccessHoverColor","linkSuccessActiveColor","useDanger","linkDangerColor","linkDangerHoverColor","linkDangerActiveColor","useGrayed","linkDisabledColor","focus","linkHoverTextDecoration","disabled","icon","linkIconMarginRight","jsStyles"],"mappings":"8QAAA;;;AAGA,qC;;AAEA,IAAMA,MAAM,GAAG;AACbC,EAAAA,IADa,gBACRC,CADQ,EACE;AACb,eAAOC,YAAP;AACI,0BADJ;;AAGD,GALY;;AAObC,EAAAA,MAPa,oBAOJ;AACP,eAAOD,YAAP;;;;;;AAMD,GAdY;;AAgBbE,EAAAA,YAhBa,0BAgBE;AACb,eAAOF,YAAP;;;AAGD,GApBY;;AAsBbG,EAAAA,KAtBa,mBAsBL;AACN,eAAOH,YAAP;;;;;;;;;AASD,GAhCY;;AAkCbI,EAAAA,UAlCa,sBAkCFL,CAlCE,EAkCQ;AACnB,eAAOC,YAAP;AACI,kCAAmBD,CAAC,CAACM,SAArB,EAAgCN,CAAC,CAACO,cAAlC,EAAkDP,CAAC,CAACQ,eAApD,CADJ;;AAGD,GAtCY;;AAwCbC,EAAAA,UAxCa,sBAwCFT,CAxCE,EAwCQ;AACnB,eAAOC,YAAP;AACI,kCAAmBD,CAAC,CAACU,gBAArB,EAAuCV,CAAC,CAACW,qBAAzC,EAAgEX,CAAC,CAACY,sBAAlE,CADJ;;AAGD,GA5CY;;AA8CbC,EAAAA,SA9Ca,qBA8CHb,CA9CG,EA8CO;AAClB,eAAOC,YAAP;AACI,kCAAmBD,CAAC,CAACc,eAArB,EAAsCd,CAAC,CAACe,oBAAxC,EAA8Df,CAAC,CAACgB,qBAAhE,CADJ;;AAGD,GAlDY;;AAoDbC,EAAAA,SApDa,qBAoDHjB,CApDG,EAoDO;AAClB,eAAOC,YAAP;AACI,kCAAmBD,CAAC,CAACkB,iBAArB,EAAwClB,CAAC,CAACkB,iBAA1C,EAA6DlB,CAAC,CAACkB,iBAA/D,CADJ;;AAGD,GAxDY;;AA0DbC,EAAAA,KA1Da,iBA0DPnB,CA1DO,EA0DG;AACd,eAAOC,YAAP;AACI,0BAAQH,MAAM,CAACC,IAAP,CAAYC,CAAZ,CAAR,CADJ;AAEuBA,IAAAA,CAAC,CAACoB,uBAFzB;;AAII,0BAAQtB,MAAM,CAACmB,SAAP,CAAiBjB,CAAjB,CAAR,CAJJ;AAKaA,IAAAA,CAAC,CAACkB,iBALf;;;AAQD,GAnEY;;AAqEbG,EAAAA,QArEa,oBAqEJrB,CArEI,EAqEM;AACjB,eAAOC,YAAP;AACI,kCADJ;;AAGI,0BAAQH,MAAM,CAACC,IAAP,CAAYC,CAAZ,CAAR,CAHJ;AAIaA,IAAAA,CAAC,CAACkB,iBAJf;;;AAOelB,IAAAA,CAAC,CAACkB,iBAPjB;;;;AAWD,GAjFY;;AAmFbI,EAAAA,IAnFa,gBAmFRtB,CAnFQ,EAmFE;AACb,eAAOC,YAAP;;AAEkBD,IAAAA,CAAC,CAACuB,mBAFpB;;AAID,GAxFY,EAAf;;;AA2FO,IAAMC,QAAQ,GAAG,2BAAa1B,MAAb,CAAjB,C","sourcesContent":["import { css, cssName, memoizeStyle } from '../../lib/theming/Emotion';\r\nimport { Theme } from '../../lib/theming/Theme';\r\n\r\nimport { linkMixin, linkDisabledMixin, linkUseColorsMixin } from './Link.mixins';\r\n\r\nconst styles = {\r\n  root(t: Theme) {\r\n    return css`\r\n      ${linkMixin()};\r\n    `;\r\n  },\r\n\r\n  button() {\r\n    return css`\r\n      display: inline-block;\r\n      line-height: 34px;\r\n      padding-left: 10px;\r\n      padding-right: 10px;\r\n    `;\r\n  },\r\n\r\n  buttonOpened() {\r\n    return css`\r\n      background: #e1e1e1;\r\n    `;\r\n  },\r\n\r\n  arrow() {\r\n    return css`\r\n      border: 4px solid transparent;\r\n      border-bottom-width: 0;\r\n      border-top-color: #a0a0a0;\r\n      display: inline-block;\r\n      margin-bottom: 3px;\r\n      margin-left: 3px;\r\n      vertical-align: middle;\r\n    `;\r\n  },\r\n\r\n  useDefault(t: Theme) {\r\n    return css`\r\n      ${linkUseColorsMixin(t.linkColor, t.linkHoverColor, t.linkActiveColor)};\r\n    `;\r\n  },\r\n\r\n  useSuccess(t: Theme) {\r\n    return css`\r\n      ${linkUseColorsMixin(t.linkSuccessColor, t.linkSuccessHoverColor, t.linkSuccessActiveColor)};\r\n    `;\r\n  },\r\n\r\n  useDanger(t: Theme) {\r\n    return css`\r\n      ${linkUseColorsMixin(t.linkDangerColor, t.linkDangerHoverColor, t.linkDangerActiveColor)};\r\n    `;\r\n  },\r\n\r\n  useGrayed(t: Theme) {\r\n    return css`\r\n      ${linkUseColorsMixin(t.linkDisabledColor, t.linkDisabledColor, t.linkDisabledColor)};\r\n    `;\r\n  },\r\n\r\n  focus(t: Theme) {\r\n    return css`\r\n      ${cssName(styles.root(t))}& {\r\n        text-decoration: ${t.linkHoverTextDecoration};\r\n      }\r\n      ${cssName(styles.useGrayed(t))}& {\r\n        color: ${t.linkDisabledColor};\r\n      }\r\n    `;\r\n  },\r\n\r\n  disabled(t: Theme) {\r\n    return css`\r\n      ${linkDisabledMixin()};\r\n\r\n      ${cssName(styles.root(t))}& {\r\n        color: ${t.linkDisabledColor};\r\n\r\n        &:hover {\r\n          color: ${t.linkDisabledColor};\r\n        }\r\n      }\r\n    `;\r\n  },\r\n\r\n  icon(t: Theme) {\r\n    return css`\r\n      display: inline-block;\r\n      margin-right: ${t.linkIconMarginRight};\r\n    `;\r\n  },\r\n};\r\n\r\nexport const jsStyles = memoizeStyle(styles);\r\n"]}