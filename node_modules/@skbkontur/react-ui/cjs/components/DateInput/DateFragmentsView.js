"use strict";var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");exports.__esModule = true;exports.DateFragmentsView = void 0;var _inheritsLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/inheritsLoose"));var _react = _interopRequireDefault(require("react"));
var _classnames = _interopRequireDefault(require("classnames"));

var _constants = require("../../lib/date/constants");
var _InternalDateValidator = require("../../lib/date/InternalDateValidator");
var _types = require("../../lib/date/types");

var _ThemeContext = require("../../lib/theming/ThemeContext");

var _DateFragmentsView = require("./DateFragmentsView.styles");var








DateFragmentsView = /*#__PURE__*/function (_React$Component) {(0, _inheritsLoose2.default)(DateFragmentsView, _React$Component);function DateFragmentsView() {var _this;for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {args[_key] = arguments[_key];}_this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;_this.
    theme = void 0;_this.
    rootNode = null;_this.

    isFragment = function (el) {
      if (_this.rootNode) {
        // NOTE: NodeList doesn't support method 'forEach' in IE11
        var fragments = Array.from(_this.rootNode.querySelectorAll('[data-fragment]'));
        return fragments.some(function (fragment) {return fragment === el || fragment.contains(el);});
      }
      return false;
    };_this.

    getRootNode = function () {return _this.rootNode;};_this.




























































    rootRef = function (el) {
      _this.rootNode = el;
    };return _this;}var _proto = DateFragmentsView.prototype;_proto.render = function render() {var _this2 = this;return _react.default.createElement(_ThemeContext.ThemeContext.Consumer, null, function (theme) {_this2.theme = theme;return _this2.renderMain();});};_proto.renderMain = function renderMain() {var _this3 = this;return _react.default.createElement("span", { ref: this.rootRef, className: _DateFragmentsView.jsStyles.root(this.theme) }, this.props.fragments.map(function (fragment, index) {return fragment.type === _types.InternalDateComponentType.Separator ? _this3.renderSeparator(fragment, index) : _this3.renderDateComponent(fragment, index);}));};_proto.renderSeparator = function renderSeparator(fragment, index) {var _cn;var separatorClassName = (0, _classnames.default)((_cn = {}, _cn[_DateFragmentsView.jsStyles.mask(this.theme)] = true, _cn[_DateFragmentsView.jsStyles.delimiterFilled()] = this.props.fragments[index + 1].value !== null, _cn));return _react.default.createElement("span", { key: index, className: separatorClassName }, fragment.value);};_proto.renderDateComponent = function renderDateComponent(fragment, index) {var _this$props = this.props,inputMode = _this$props.inputMode,onSelectDateComponent = _this$props.onSelectDateComponent,selected = _this$props.selected;var type = fragment.type,value = fragment.value,length = fragment.length,valueWithPad = fragment.valueWithPad;var valueMask = value === null || selected === type && inputMode ? value : valueWithPad || value;var lengthMask = _InternalDateValidator.InternalDateValidator.testParseToNumber(valueMask) ? Math.max(length - valueMask.toString().length, 0) : length;var handleMouseUp = function handleMouseUp(e) {if (document.activeElement && document.activeElement.contains(e.currentTarget)) {onSelectDateComponent(type, e);}};return _react.default.createElement("span", { key: index, "data-fragment": "", onMouseUp: handleMouseUp }, valueMask, _react.default.createElement("span", { className: _DateFragmentsView.jsStyles.mask(this.theme) }, _constants.CHAR_MASK.repeat(lengthMask)));};return DateFragmentsView;}(_react.default.Component);exports.DateFragmentsView = DateFragmentsView;