{"version":3,"sources":["InternalDateMediator.ts"],"names":["InternalDateMediator","iDate","InternalDate","update","props","locale","start","getRangeStart","min","toInternalString","end","getRangeEnd","max","order","separator","setOrder","setSeparator","minDate","setRangeStart","value","maxDate","setRangeEnd","parseInternalValue","paste","pasted","parseValue","restore","cutOffExcess","isIncomplete","restored","clone","isEqual","duplicateOf","getFragments","toFragments","withSeparator","withPad","deleteOneCharRight","type","inputMode","prev","get","String","InternalDateTransformer","padDateComponent","next","replace","set","isChangedLocale","getOrder","getSeparator","isNull","isEmpty","clear","validateString","parseValueToDate","getString","toString","getInternalString","getTypesOrder","map","getLeftmostType","getRightmostType","inputKey","key","prevValue","InternalDateComponentType","Year","nextValue","nextInputMode","shiftDateComponent","step","isValidRange","validate","checks","InternalDateValidateCheck","Range","InternalDateGetter","shift","isRange","isLoop","changed","isEqualComponentDate","getShiftedType","typesOrder","index","indexOf","nextIndex","All","getYear","shiftedType"],"mappings":"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","sourcesContent":["import { InternalDate } from '../../../lib/date/InternalDate';\r\nimport { InternalDateGetter } from '../../../lib/date/InternalDateGetter';\r\nimport { InternalDateTransformer } from '../../../lib/date/InternalDateTransformer';\r\nimport { InternalDateComponentType, InternalDateTypesOrder, InternalDateValidateCheck } from '../../../lib/date/types';\r\nimport { DatePickerLocale } from '../../DatePicker/locale';\r\nimport { DateInputProps } from '../DateInput';\r\n\r\nimport { inputNumber } from './inputNumber';\r\n\r\nexport class InternalDateMediator {\r\n  public iDate: InternalDate = new InternalDate();\r\n\r\n  public update = (props: DateInputProps, locale: DatePickerLocale): InternalDateMediator => {\r\n    const start = this.iDate.getRangeStart();\r\n    const min = start && start.toInternalString();\r\n    const end = this.iDate.getRangeEnd();\r\n    const max = end && end.toInternalString();\r\n    const { order, separator } = locale;\r\n    this.iDate.setOrder(order).setSeparator(separator);\r\n    if (props.minDate !== min) {\r\n      this.iDate.setRangeStart(\r\n        props.minDate\r\n          ? new InternalDate({\r\n              order,\r\n              separator,\r\n              value: props.minDate,\r\n            })\r\n          : null,\r\n      );\r\n    }\r\n    if (props.maxDate !== max) {\r\n      this.iDate.setRangeEnd(\r\n        props.maxDate\r\n          ? new InternalDate({\r\n              order,\r\n              separator,\r\n              value: props.maxDate,\r\n            })\r\n          : null,\r\n      );\r\n    }\r\n    if (!props.value || props.value !== this.iDate.toInternalString()) {\r\n      this.iDate.parseInternalValue(props.value);\r\n    }\r\n    return this;\r\n  };\r\n\r\n  public inputKey(key: string, type: InternalDateComponentType | null, inputMode: boolean): boolean {\r\n    const prevValue = this.iDate.get(type);\r\n    if (type === null) {\r\n      type = this.getLeftmostType();\r\n      this.clear(type);\r\n    }\r\n    if (type !== InternalDateComponentType.Year) {\r\n      this.iDate.cutOffExcess(type);\r\n    } else {\r\n      this.iDate.restore(type);\r\n    }\r\n    const { nextValue, nextInputMode } = inputNumber(type, prevValue, key, inputMode);\r\n    this.iDate.set(type, nextValue);\r\n    return nextInputMode;\r\n  }\r\n\r\n  public paste = (pasted: string): InternalDateMediator => {\r\n    this.iDate\r\n      .parseValue(pasted)\r\n      .restore()\r\n      .cutOffExcess();\r\n    return this;\r\n  };\r\n\r\n  public restore = (): boolean => {\r\n    if (this.iDate.isIncomplete()) {\r\n      const restored = this.iDate.clone().restore();\r\n      if (!this.iDate.isEqual(restored)) {\r\n        this.iDate.duplicateOf(restored);\r\n      }\r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n  public shiftDateComponent(type: InternalDateComponentType | null, step: number): boolean {\r\n    type = type === null ? this.getLeftmostType() : type;\r\n    const iDate = this.iDate.clone();\r\n    const isValidRange = iDate.validate({ checks: [InternalDateValidateCheck.Range] });\r\n    const start = iDate.getRangeStart();\r\n    const end = iDate.getRangeEnd();\r\n    if (!isValidRange) {\r\n      // Удерживаем дату в заданном диапазоне\r\n      if (start && InternalDateGetter.max([iDate, start]) === start) {\r\n        iDate.duplicateOf(start);\r\n      } else if (end && InternalDateGetter.min([iDate, end]) === end) {\r\n        iDate.duplicateOf(end);\r\n      }\r\n    } else {\r\n      const clone = iDate.clone().shift(type, step, { isRange: false, isLoop: true });\r\n      if (clone.validate({ checks: [InternalDateValidateCheck.Range] })) {\r\n        iDate.duplicateOf(clone);\r\n      }\r\n    }\r\n    const changed = !this.iDate.isEqualComponentDate(type, iDate);\r\n    this.iDate = iDate;\r\n    return changed;\r\n  }\r\n\r\n  public getShiftedType(type: InternalDateComponentType | null, step: number): InternalDateComponentType | null {\r\n    const typesOrder = this.getTypesOrder();\r\n    const index = type === null ? 0 : typesOrder.indexOf(type);\r\n    const nextIndex = index + step;\r\n\r\n    // Если выделено всё поле, то в завимости от направления перемещения, выделям крайний компонент\r\n    if (type === InternalDateComponentType.All) {\r\n      return step < 0 ? typesOrder[0] : typesOrder[2];\r\n    }\r\n\r\n    // Если текущий компонент \"год\", и он не пуст, то при перемещении выделения \"восстанавливаем\" значение года\r\n    if (type === InternalDateComponentType.Year && this.iDate.getYear() !== null) {\r\n      this.iDate.restore(type);\r\n    }\r\n\r\n    const shiftedType = typesOrder[nextIndex];\r\n    return typeof shiftedType === 'number' ? shiftedType : type;\r\n  }\r\n\r\n  public getFragments = () =>\r\n    this.iDate.toFragments({\r\n      withSeparator: true,\r\n      withPad: true,\r\n    });\r\n\r\n  public deleteOneCharRight = (type: InternalDateComponentType, inputMode: boolean) => {\r\n    let prev = this.iDate.get(type);\r\n    prev = String(inputMode ? prev : InternalDateTransformer.padDateComponent(type, prev));\r\n    const next = prev.replace(/.$/, '') || null;\r\n    this.iDate.set(type, next);\r\n  };\r\n\r\n  public isChangedLocale = (locale: DatePickerLocale): boolean =>\r\n    locale.order !== this.iDate.getOrder() || locale.separator !== this.iDate.getSeparator();\r\n\r\n  public isNull = (type: InternalDateComponentType | null): boolean => this.iDate.get(type) === null;\r\n\r\n  public isEmpty = (): boolean => this.iDate.isEmpty();\r\n\r\n  public get = (type: InternalDateComponentType | null) => this.iDate.get(type);\r\n\r\n  public clear = (type: InternalDateComponentType | null): InternalDate => this.iDate.set(type, null);\r\n\r\n  public validateString = (value: string): boolean =>\r\n    InternalDateTransformer.parseValueToDate(value, this.iDate.getOrder()) !== null;\r\n\r\n  public getString = (): string => (this.iDate.isEmpty() ? '' : this.iDate.toString());\r\n\r\n  public getInternalString = (): string => (this.iDate.isEmpty() ? '' : this.iDate.toInternalString());\r\n\r\n  public getTypesOrder = () => this.iDate.toFragments().map(({ type }) => type) as InternalDateTypesOrder;\r\n\r\n  public getLeftmostType = (): InternalDateComponentType => this.getTypesOrder()[0];\r\n\r\n  public getRightmostType = (): InternalDateComponentType => this.getTypesOrder()[2];\r\n}\r\n"]}