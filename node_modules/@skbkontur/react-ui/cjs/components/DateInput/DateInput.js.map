{"version":3,"sources":["DateInput.tsx"],"names":["DateInput","DatePickerLocaleHelper","props","iDateMediator","InternalDateMediator","inputLikeText","dateFragmentsView","isMouseDown","isMouseFocus","ignoringDelimiter","locale","blurEvent","theme","conditionalHandler","ConditionalHandler","add","Actions","MoveSelectionLeft","shiftSelection","MoveSelectionRight","Separator","pressDelimiter","MoveSelectionFirst","selectDateComponent","getLeftmostType","MoveSelectionLast","getRightmostType","Increment","shiftDateComponent","Decrement","Digit","e","inputValue","ClearSelection","clearSelected","ClearOneChar","clearOneChar","FullSelection","fullSelection","WrongInput","blink","build","selectNode","type","state","selected","getRootNode","InternalDateComponentType","All","selectInnerNode","index","getTypesOrder","indexOf","renderIcon","withIcon","size","disabled","iconStyles","jsStyles","icon","iconSmall","iconMedium","iconLarge","iconDisabled","handleFocus","setState","prevState","focused","onFocus","handleBlur","restored","restore","updateValue","inputMode","onBlur","persist","handleMouseDownCapture","isFragment","target","preventDefault","handleSelectDateComponent","isEmpty","handleMouseDragStart","dragged","handleMouseDragEnd","selection","getSelection","toString","length","LENGTH_FULLDATE","handleKeyDown","onKeyDown","handlePaste","pasted","clipboardData","getData","trim","validateString","paste","handleDoubleClick","inputLikeTextRef","el","dateFragmentsViewRef","valueFormatted","getString","emitChange","updateFromProps","update","value","get","getInternalString","onValueChange","clear","nextType","isNull","deleteOneCharRight","step","changed","getShiftedType","event","inputKey","key","componentDidUpdate","prevProps","minDate","maxDate","isChangedLocale","componentDidMount","blur","focus","render","renderMain","fragments","getFragments","width","error","warning","React","Component","__KONTUR_REACT_UI__","defaultProps","MIN_FULLDATE","MAX_FULLDATE"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport cn from 'classnames';\r\n\r\nimport { ConditionalHandler } from '../../lib/ConditionalHandler';\r\nimport { LENGTH_FULLDATE, MAX_FULLDATE, MIN_FULLDATE } from '../../lib/date/constants';\r\nimport { InternalDateComponentType } from '../../lib/date/types';\r\nimport { Theme } from '../../lib/theming/Theme';\r\nimport { DatePickerLocale, DatePickerLocaleHelper } from '../DatePicker/locale';\r\nimport { InputLikeText } from '../../internal/InputLikeText';\r\nimport { locale } from '../../lib/locale/decorators';\r\nimport { ThemeContext } from '../../lib/theming/ThemeContext';\r\nimport { CalendarIcon } from '../../internal/icons/16px';\r\n\r\nimport { DateFragmentsView } from './DateFragmentsView';\r\nimport { jsStyles } from './DateInput.styles';\r\nimport { Actions, extractAction } from './helpers/DateInputKeyboardActions';\r\nimport { InternalDateMediator } from './helpers/InternalDateMediator';\r\n\r\nexport interface DateInputState {\r\n  selected: InternalDateComponentType | null;\r\n  valueFormatted: string;\r\n  inputMode: boolean;\r\n  focused: boolean;\r\n  dragged: boolean;\r\n}\r\n\r\nexport interface DateInputProps {\r\n  value: string;\r\n  error?: boolean;\r\n  warning?: boolean;\r\n  disabled?: boolean;\r\n  /**\r\n   * Минимальная дата.\r\n   * @default '01.01.1900'\r\n   */\r\n  minDate: string;\r\n  /**\r\n   * Максимальная дата\r\n   * @default '31.12.2099'\r\n   */\r\n  maxDate: string;\r\n  /**\r\n   * Ширина поля\r\n   * @default 125\r\n   */\r\n  width: string | number;\r\n  withIcon?: boolean;\r\n  /**\r\n   * Размер поля\r\n   * @default 'small'\r\n   */\r\n  size: 'small' | 'large' | 'medium';\r\n  onBlur?: (x0: React.FocusEvent<HTMLElement>) => void;\r\n  onFocus?: (x0: React.FocusEvent<HTMLElement>) => void;\r\n  /**\r\n   * Вызывается при изменении `value`\r\n   *\r\n   * @param value - строка в формате `dd.mm.yyyy`.\r\n   */\r\n  onValueChange?: (value: string) => void;\r\n  onKeyDown?: (x0: React.KeyboardEvent<HTMLElement>) => void;\r\n}\r\n\r\n@locale('DatePicker', DatePickerLocaleHelper)\r\nexport class DateInput extends React.Component<DateInputProps, DateInputState> {\r\n  public static __KONTUR_REACT_UI__ = 'DateInput';\r\n\r\n  public static defaultProps = {\r\n    value: '',\r\n    minDate: MIN_FULLDATE,\r\n    maxDate: MAX_FULLDATE,\r\n    size: 'small',\r\n    width: 125,\r\n  };\r\n\r\n  private iDateMediator: InternalDateMediator = new InternalDateMediator();\r\n  private inputLikeText: InputLikeText | null = null;\r\n  private dateFragmentsView: DateFragmentsView | null = null;\r\n  private isMouseDown = false;\r\n  private isMouseFocus = false;\r\n  private ignoringDelimiter = false;\r\n  private locale!: DatePickerLocale;\r\n  private blurEvent: React.FocusEvent<HTMLElement> | null = null;\r\n  private theme!: Theme;\r\n  private conditionalHandler = new ConditionalHandler<Actions, [React.KeyboardEvent<HTMLElement>]>()\r\n    .add(Actions.MoveSelectionLeft, () => this.shiftSelection(-1))\r\n    .add(Actions.MoveSelectionRight, () => this.shiftSelection(1))\r\n    .add(Actions.Separator, () => this.pressDelimiter())\r\n    .add(Actions.MoveSelectionFirst, () => this.selectDateComponent(this.iDateMediator.getLeftmostType()))\r\n    .add(Actions.MoveSelectionLast, () => this.selectDateComponent(this.iDateMediator.getRightmostType()))\r\n    .add(Actions.Increment, () => this.shiftDateComponent(1))\r\n    .add(Actions.Decrement, () => this.shiftDateComponent(-1))\r\n    .add(Actions.Digit, e => this.inputValue(e))\r\n    .add(Actions.ClearSelection, () => this.clearSelected())\r\n    .add(Actions.ClearOneChar, () => this.clearOneChar())\r\n    .add(Actions.FullSelection, () => this.fullSelection())\r\n    .add(Actions.WrongInput, () => this.blink())\r\n    .build();\r\n\r\n  constructor(props: DateInputProps) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      valueFormatted: '',\r\n      selected: null,\r\n      inputMode: false,\r\n      focused: false,\r\n      dragged: false,\r\n    };\r\n  }\r\n\r\n  public componentDidUpdate(prevProps: DateInputProps, prevState: DateInputState) {\r\n    if (\r\n      prevProps.value !== this.props.value ||\r\n      prevProps.minDate !== this.props.minDate ||\r\n      prevProps.maxDate !== this.props.maxDate ||\r\n      this.iDateMediator.isChangedLocale(this.locale)\r\n    ) {\r\n      this.updateFromProps();\r\n    }\r\n    this.selectNode();\r\n  }\r\n\r\n  public selectNode = () => {\r\n    const type = this.state.selected;\r\n    const dateFragmentsView = this.dateFragmentsView && this.dateFragmentsView.getRootNode();\r\n    if (type === null || !this.inputLikeText || !dateFragmentsView) {\r\n      return;\r\n    }\r\n    if (type === InternalDateComponentType.All) {\r\n      this.inputLikeText.selectInnerNode(dateFragmentsView, 0, 5);\r\n      return;\r\n    }\r\n    const index = this.iDateMediator.getTypesOrder().indexOf(type);\r\n    if (index > -1) {\r\n      this.inputLikeText.selectInnerNode(dateFragmentsView, index * 2, index * 2 + 1);\r\n    }\r\n  };\r\n\r\n  public componentDidMount(): void {\r\n    this.updateFromProps();\r\n  }\r\n\r\n  public blur() {\r\n    if (this.inputLikeText) {\r\n      this.inputLikeText.blur();\r\n    }\r\n  }\r\n\r\n  public focus() {\r\n    if (this.inputLikeText) {\r\n      this.inputLikeText.focus();\r\n    }\r\n  }\r\n\r\n  public blink() {\r\n    if (this.inputLikeText) {\r\n      this.inputLikeText.blink();\r\n    }\r\n  }\r\n\r\n  public render() {\r\n    return (\r\n      <ThemeContext.Consumer>\r\n        {theme => {\r\n          this.theme = theme;\r\n          return this.renderMain();\r\n        }}\r\n      </ThemeContext.Consumer>\r\n    );\r\n  }\r\n\r\n  private renderMain() {\r\n    const { focused, selected, inputMode, valueFormatted } = this.state;\r\n    const fragments = focused || valueFormatted !== '' ? this.iDateMediator.getFragments() : [];\r\n\r\n    return (\r\n      <InputLikeText\r\n        width={this.props.width}\r\n        ref={this.inputLikeTextRef}\r\n        size={this.props.size}\r\n        disabled={this.props.disabled}\r\n        error={this.props.error}\r\n        warning={this.props.warning}\r\n        onBlur={this.handleBlur}\r\n        onFocus={this.handleFocus}\r\n        onKeyDown={this.handleKeyDown}\r\n        onMouseDownCapture={this.handleMouseDownCapture}\r\n        onPaste={this.handlePaste}\r\n        rightIcon={this.renderIcon()}\r\n        onDoubleClickCapture={this.handleDoubleClick}\r\n        onMouseDragStart={this.handleMouseDragStart}\r\n        onMouseDragEnd={this.handleMouseDragEnd}\r\n        value={this.iDateMediator.getInternalString()}\r\n      >\r\n        <DateFragmentsView\r\n          ref={this.dateFragmentsViewRef}\r\n          fragments={fragments}\r\n          onSelectDateComponent={this.handleSelectDateComponent}\r\n          selected={selected}\r\n          inputMode={inputMode}\r\n        />\r\n      </InputLikeText>\r\n    );\r\n  }\r\n\r\n  private renderIcon = () => {\r\n    const { withIcon, size, disabled = false } = this.props;\r\n\r\n    if (withIcon) {\r\n      const theme = this.theme;\r\n      const iconStyles = cn({\r\n        [jsStyles.icon(theme)]: true,\r\n        [jsStyles.iconSmall(theme)]: size === 'small',\r\n        [jsStyles.iconMedium(theme)]: size === 'medium',\r\n        [jsStyles.iconLarge(theme)]: size === 'large',\r\n        [jsStyles.iconDisabled(theme)]: disabled,\r\n      });\r\n      return (\r\n        <span className={iconStyles}>\r\n          <CalendarIcon />\r\n        </span>\r\n      );\r\n    }\r\n    return null;\r\n  };\r\n\r\n  private handleFocus = (e: React.FocusEvent<HTMLElement>) => {\r\n    this.setState(prevState => ({\r\n      focused: true,\r\n      selected: this.isMouseDown && !prevState.focused ? prevState.selected : this.iDateMediator.getLeftmostType(),\r\n    }));\r\n\r\n    if (this.props.onFocus) {\r\n      this.props.onFocus(e);\r\n    }\r\n  };\r\n\r\n  private handleBlur = (e: React.FocusEvent<HTMLElement>) => {\r\n    const restored = this.iDateMediator.restore();\r\n    this.updateValue({ focused: false, selected: null, inputMode: false });\r\n\r\n    if (this.props.onBlur) {\r\n      if (restored) {\r\n        e.persist();\r\n        this.blurEvent = e;\r\n      } else {\r\n        this.props.onBlur(e);\r\n      }\r\n    }\r\n  };\r\n\r\n  private handleMouseDownCapture = (e: React.MouseEvent<HTMLSpanElement>) => {\r\n    const isFragment = this.dateFragmentsView ? this.dateFragmentsView.isFragment(e.target) : false;\r\n    if (this.state.focused && !isFragment) {\r\n      e.preventDefault();\r\n    }\r\n    this.isMouseFocus = !this.state.focused;\r\n    this.isMouseDown = isFragment;\r\n  };\r\n\r\n  private handleSelectDateComponent = (type: InternalDateComponentType) => {\r\n    if (!(this.isMouseFocus && this.iDateMediator.isEmpty())) {\r\n      this.selectDateComponent(type);\r\n    }\r\n    this.isMouseFocus = false;\r\n    this.isMouseDown = false;\r\n  };\r\n\r\n  private handleMouseDragStart = () => {\r\n    this.setState({ dragged: true, selected: null });\r\n  };\r\n\r\n  private handleMouseDragEnd = () => {\r\n    const selection = getSelection();\r\n    if (\r\n      selection &&\r\n      selection.toString().length === LENGTH_FULLDATE &&\r\n      this.state.selected !== InternalDateComponentType.All\r\n    ) {\r\n      this.selectDateComponent(InternalDateComponentType.All);\r\n    }\r\n  };\r\n\r\n  private handleKeyDown = (e: React.KeyboardEvent<HTMLElement>) => {\r\n    if (this.conditionalHandler(extractAction(e), e)) {\r\n      e.preventDefault();\r\n    }\r\n    if (this.props.onKeyDown) {\r\n      this.props.onKeyDown(e);\r\n    }\r\n  };\r\n\r\n  private handlePaste = (e: React.ClipboardEvent<HTMLElement>) => {\r\n    const pasted = e && e.clipboardData.getData('text').trim();\r\n    if (pasted && this.iDateMediator.validateString(pasted)) {\r\n      this.iDateMediator.paste(pasted);\r\n      this.updateValue();\r\n    }\r\n  };\r\n\r\n  private handleDoubleClick = () => {\r\n    this.selectDateComponent(InternalDateComponentType.All);\r\n  };\r\n\r\n  private inputLikeTextRef = (el: InputLikeText | null) => {\r\n    this.inputLikeText = el;\r\n  };\r\n\r\n  private dateFragmentsViewRef = (el: DateFragmentsView | null) => {\r\n    this.dateFragmentsView = el;\r\n  };\r\n\r\n  private selectDateComponent = (selected: InternalDateComponentType | null): void => {\r\n    this.setState({ selected, inputMode: false });\r\n  };\r\n\r\n  private updateValue = (state: Partial<DateInputState> = {}): void => {\r\n    const valueFormatted = this.iDateMediator.getString();\r\n\r\n    this.setState({ ...state, valueFormatted } as DateInputState, this.emitChange);\r\n  };\r\n\r\n  private updateFromProps = (): void => {\r\n    this.iDateMediator.update(this.props, this.locale);\r\n\r\n    this.updateValue();\r\n  };\r\n\r\n  private fullSelection = (): void => {\r\n    this.selectDateComponent(InternalDateComponentType.All);\r\n  };\r\n\r\n  private pressDelimiter = (): void => {\r\n    const value = this.iDateMediator.get(this.state.selected);\r\n    if (value !== null && value !== '') {\r\n      if (!this.ignoringDelimiter) {\r\n        this.shiftSelection(1);\r\n      }\r\n      this.ignoringDelimiter = false;\r\n    }\r\n  };\r\n\r\n  private emitChange = (): void => {\r\n    const value = this.iDateMediator.getInternalString();\r\n    if (this.props.value === value) {\r\n      return;\r\n    }\r\n    if (this.props.onValueChange) {\r\n      this.props.onValueChange(value);\r\n    }\r\n    if (this.blurEvent && this.props.onBlur) {\r\n      this.props.onBlur(this.blurEvent);\r\n      this.blurEvent = null;\r\n    }\r\n  };\r\n\r\n  private clearSelected = (): void => {\r\n    const selected = this.state.selected === null ? this.iDateMediator.getLeftmostType() : this.state.selected;\r\n    this.iDateMediator.clear(selected);\r\n    this.updateValue({\r\n      inputMode: false,\r\n      selected: selected === InternalDateComponentType.All ? this.iDateMediator.getLeftmostType() : selected,\r\n    });\r\n  };\r\n\r\n  private clearOneChar = (): void => {\r\n    const { selected, inputMode } = this.state;\r\n    const nextType = selected === null ? this.iDateMediator.getRightmostType() : selected;\r\n    if (this.iDateMediator.isNull(nextType)) {\r\n      this.shiftSelection(-1);\r\n      return;\r\n    }\r\n    if (selected === InternalDateComponentType.All) {\r\n      this.iDateMediator.clear(InternalDateComponentType.All);\r\n      this.updateValue({ selected: this.iDateMediator.getLeftmostType() });\r\n      return;\r\n    }\r\n    this.iDateMediator.deleteOneCharRight(nextType, inputMode);\r\n    this.updateValue({\r\n      inputMode: this.iDateMediator.get(nextType) !== null,\r\n      selected: nextType,\r\n    });\r\n  };\r\n\r\n  private shiftDateComponent = (step: number): void => {\r\n    const { selected } = this.state;\r\n    const changed = this.iDateMediator.shiftDateComponent(selected, step);\r\n    if (!changed) {\r\n      this.blink();\r\n      return;\r\n    }\r\n    this.updateValue({\r\n      inputMode: false,\r\n      selected: selected === InternalDateComponentType.All ? this.iDateMediator.getLeftmostType() : selected,\r\n    });\r\n  };\r\n\r\n  private shiftSelection = (step: number): void => {\r\n    const selected = this.iDateMediator.getShiftedType(this.state.selected, step);\r\n    if (selected !== this.state.selected) {\r\n      this.setState({ selected, inputMode: false });\r\n    }\r\n  };\r\n\r\n  private inputValue = (event: React.KeyboardEvent<HTMLElement>): void => {\r\n    let selected = this.state.selected;\r\n    if (selected === InternalDateComponentType.All) {\r\n      selected = this.iDateMediator.getLeftmostType();\r\n      this.iDateMediator.clear(InternalDateComponentType.All);\r\n      this.setState({ selected });\r\n    }\r\n    const inputMode = this.iDateMediator.inputKey(event.key, selected, this.state.inputMode);\r\n\r\n    if (!inputMode) {\r\n      this.ignoringDelimiter = true;\r\n      this.shiftSelection(1);\r\n    }\r\n    this.updateValue({ inputMode });\r\n  };\r\n}\r\n"]}