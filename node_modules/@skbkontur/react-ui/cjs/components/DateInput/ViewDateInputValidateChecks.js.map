{"version":3,"sources":["ViewDateInputValidateChecks.tsx"],"names":["ViewDateInputValidateChecks","render","internalDate","InternalDate","parseInternalValue","props","value","setRangeStart","minDate","setRangeEnd","maxDate","validate","checks","InternalDateValidateCheck","NotNull","color","Limits","MIN_YEAR","MAX_YEAR","MIN_MONTH","MAX_MONTH","MIN_DATE","MAX_DATE","Native","Range","React","Component"],"mappings":"uQAAA;;AAEA;AACA;AACA;AACA;AACA,mC;;;;;;;;AAQaA,2B;AACJC,EAAAA,M,GAAP,kBAAgB;AACd,QAAMC,YAAY,GAAG,IAAIC,0BAAJ,EAArB;AACAD,IAAAA,YAAY,CAACE,kBAAb,CAAgC,KAAKC,KAAL,CAAWC,KAA3C;AACAJ,IAAAA,YAAY,CAACK,aAAb,CAA2B,KAAKF,KAAL,CAAWG,OAAX,GAAqB,IAAIL,0BAAJ,GAAmBC,kBAAnB,CAAsC,KAAKC,KAAL,CAAWG,OAAjD,CAArB,GAAiF,IAA5G;AACAN,IAAAA,YAAY,CAACO,WAAb,CAAyB,KAAKJ,KAAL,CAAWK,OAAX,GAAqB,IAAIP,0BAAJ,GAAmBC,kBAAnB,CAAsC,KAAKC,KAAL,CAAWK,OAAjD,CAArB,GAAiF,IAA1G;;AAEA;AACE,mCAAC,cAAD,IAAQ,GAAG,EAAE,EAAb,EAAiB,QAAQ,MAAzB;AACE,+JADF;AAEE,mCAAC,kBAAD,IAAU,QAAQ,MAAlB,EAAmB,OAAO,EAAER,YAAY,CAACS,QAAb,CAAsB,EAAEC,MAAM,EAAE,CAACC,iCAA0BC,OAA3B,CAAV,EAAtB,CAA5B;AACI,6CAAM,KAAK,EAAE,EAAEC,KAAK,EAAE,OAAT,EAAb,cADJ;AAEE;AAC0C,SAD1C;AAEE;AACE,wDADF,CAFF,MAFF,CAFF;;;;;AAYE,mCAAC,kBAAD,IAAU,QAAQ,MAAlB,EAAmB,OAAO,EAAEb,YAAY,CAACS,QAAb,CAAsB,EAAEC,MAAM,EAAE,CAACC,iCAA0BG,MAA3B,CAAV,EAAtB,CAA5B;AACI,6CAAM,KAAK,EAAE,EAAED,KAAK,EAAE,OAAT,EAAb,aADJ;AAEE;;AAEE,8CAFF;AAGQE,yBAHR,SAGqBC,mBAHrB;AAIE,8CAJF;AAKUC,0BALV,SAKwBC,oBALxB;AAME,8CANF;AAOUC,yBAPV,SAOuBC,mBAPvB,CAFF,CAZF;;;AAwBE,mCAAC,kBAAD,IAAU,QAAQ,MAAlB,EAAmB,OAAO,EAAEpB,YAAY,CAACS,QAAb,CAAsB,EAAEC,MAAM,EAAE,CAACC,iCAA0BU,MAA3B,CAAV,EAAtB,CAA5B;AACI,6CAAM,KAAK,EAAE,EAAER,KAAK,EAAE,OAAT,EAAb,aADJ;AAEE;AACyE,0DADzE,CAFF,CAxBF;;;AA8BE,mCAAC,kBAAD,IAAU,QAAQ,MAAlB,EAAmB,OAAO,EAAEb,YAAY,CAACS,QAAb,CAAsB,EAAEC,MAAM,EAAE,CAACC,iCAA0BW,KAA3B,CAAV,EAAtB,CAA5B;AACI,6CAAM,KAAK,EAAE,EAAET,KAAK,EAAE,OAAT,EAAb,YADJ;AAEE;AACwC,mEADxC,CAFF,CA9BF,CADF;;;;;AAuCD,G,sCA9C8CU,eAAMC,S","sourcesContent":["import React from 'react';\r\n\r\nimport { MAX_DATE, MAX_MONTH, MAX_YEAR, MIN_DATE, MIN_MONTH, MIN_YEAR } from '../../lib/date/constants';\r\nimport { InternalDate } from '../../lib/date/InternalDate';\r\nimport { InternalDateValidateCheck } from '../../lib/date/types';\r\nimport { Checkbox } from '../Checkbox';\r\nimport { Gapped } from '../Gapped';\r\n\r\ninterface DateInputValidateChecksProps {\r\n  value: string;\r\n  minDate: string;\r\n  maxDate: string;\r\n}\r\n\r\nexport class ViewDateInputValidateChecks extends React.Component<DateInputValidateChecksProps> {\r\n  public render() {\r\n    const internalDate = new InternalDate();\r\n    internalDate.parseInternalValue(this.props.value);\r\n    internalDate.setRangeStart(this.props.minDate ? new InternalDate().parseInternalValue(this.props.minDate) : null);\r\n    internalDate.setRangeEnd(this.props.maxDate ? new InternalDate().parseInternalValue(this.props.maxDate) : null);\r\n\r\n    return (\r\n      <Gapped gap={10} vertical>\r\n        <h3>Внутренние проверки</h3>\r\n        <Checkbox disabled checked={internalDate.validate({ checks: [InternalDateValidateCheck.NotNull] })}>\r\n          ⭣ <code style={{ color: 'black' }}>NotNull</code>\r\n          <div>\r\n            Все компоненты даты заполнены (не равны{' '}\r\n            <b>\r\n              <code>null</code>\r\n            </b>\r\n            )\r\n          </div>\r\n        </Checkbox>\r\n        <Checkbox disabled checked={internalDate.validate({ checks: [InternalDateValidateCheck.Limits] })}>\r\n          ⭣ <code style={{ color: 'black' }}>Limits</code>\r\n          <div>\r\n            Компоненты даты не выходят за рамки предустановленных лимитов\r\n            <br />\r\n            Год: {MIN_YEAR} - {MAX_YEAR}\r\n            <br />\r\n            Месяц: {MIN_MONTH} - {MAX_MONTH}\r\n            <br />\r\n            Число: {MIN_DATE} - {MAX_DATE}\r\n          </div>\r\n        </Checkbox>\r\n        <Checkbox disabled checked={internalDate.validate({ checks: [InternalDateValidateCheck.Native] })}>\r\n          ⭣ <code style={{ color: 'black' }}>Native</code>\r\n          <div>\r\n            Из компонентов даты можно создать валидный экземпляр нативного объекта <code>Date()</code>\r\n          </div>\r\n        </Checkbox>\r\n        <Checkbox disabled checked={internalDate.validate({ checks: [InternalDateValidateCheck.Range] })}>\r\n          ⭳ <code style={{ color: 'black' }}>Range</code>\r\n          <div>\r\n            Дата не выходит за пределы диапазонов <code>minDate/maxDate</code>\r\n          </div>\r\n        </Checkbox>\r\n      </Gapped>\r\n    );\r\n  }\r\n}\r\n"]}