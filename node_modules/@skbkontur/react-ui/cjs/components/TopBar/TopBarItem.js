"use strict";var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");exports.__esModule = true;exports.TopBarItem = void 0;var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));var _objectWithoutPropertiesLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutPropertiesLoose"));var _inheritsLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/inheritsLoose"));var _react = _interopRequireDefault(require("react"));
var _propTypes = _interopRequireDefault(require("prop-types"));
var _classnames = _interopRequireDefault(require("classnames"));

var _px = require("../../internal/icons/20px");
var _createPropsGetter = require("../../lib/createPropsGetter");

var _TopBar = require("./TopBar.styles");













/**
                                           * Статичный элемент топбара
                                           *
                                           * @visibleName TopBar.ItemStatic
                                           */var

TopBarItem = /*#__PURE__*/function (_React$Component) {(0, _inheritsLoose2.default)(TopBarItem, _React$Component);function TopBarItem() {var _this;for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {args[_key] = arguments[_key];}_this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;_this.











    getProps = (0, _createPropsGetter.createPropsGetter)(TopBarItem.defaultProps);return _this;}var _proto = TopBarItem.prototype;_proto.

  render = function render() {var _cn, _cn2;var _this$props =
    this.props,active = _this$props.active,children = _this$props.children,_onClick = _this$props._onClick,_onKeyDown = _this$props._onKeyDown,iconOnly = _this$props.iconOnly,icon = _this$props.icon,minWidth = _this$props.minWidth,use = _this$props.use,rest = (0, _objectWithoutPropertiesLoose2.default)(_this$props, ["active", "children", "_onClick", "_onKeyDown", "iconOnly", "icon", "minWidth", "use"]);

    var className = this.getProps().className;

    var classes = (0, _classnames.default)((_cn = {}, _cn[
    _TopBar.jsStyles.item()] = true, _cn[
    _TopBar.jsStyles.buttonActive()] = !!active, _cn[
    _TopBar.jsStyles.usePay()] = use === 'pay', _cn[
    _TopBar.jsStyles.useDanger()] = use === 'danger', _cn[
    className] = true, _cn));


    var iconClasses = (0, _classnames.default)((_cn2 = {}, _cn2[
    _TopBar.jsStyles.icon()] = !!icon, _cn2[
    _TopBar.jsStyles.iconOnly()] = !!iconOnly, _cn2));


    return (
      _react.default.createElement("div", (0, _extends2.default)({}, rest, { className: classes, onClick: _onClick, onKeyDown: _onKeyDown, style: { minWidth: minWidth } }),
      icon &&
      _react.default.createElement("span", { className: iconClasses },
      _react.default.createElement(_px.Icon, { color: "#666", name: icon })),


      icon && iconOnly ? null : children));


  };return TopBarItem;}(_react.default.Component);exports.TopBarItem = TopBarItem;TopBarItem.__KONTUR_REACT_UI__ = 'TopBarItem';TopBarItem.propTypes = { use: _propTypes.default.oneOf(['danger', 'pay', 'default']) };TopBarItem.defaultProps = { className: '', use: 'default' };