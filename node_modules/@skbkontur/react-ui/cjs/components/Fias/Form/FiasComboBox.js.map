{"version":3,"sources":["FiasComboBox.tsx"],"names":["HighlightedText","children","style","backgroundColor","fontWeight","color","FiasComboBox","state","searchText","totalCount","combobox","createRef","el","getItems","props","limit","promise","Promise","resolve","then","items","setState","length","slice","renderItem","item","node","label","highlight","renderTotalCount","found","total","handleChange","onValueChange","valueToString","handleInputChange","query","onInputValueChange","handleFocus","onFocus","error","warning","hasItems","search","render","str","lastMatchOnly","regex","RegExp","matches","match","mismatches","split","result","reduce","elements","text","i","push","isHighlighted","map","element","React","cloneElement","key","Component","defaultProps","ComboBox"],"mappings":"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","sourcesContent":["import React from 'react';\r\n\r\nimport { ComboBox, ComboBoxProps } from '../../ComboBox';\r\nimport { FiasAddress } from '../models/FiasAddress';\r\nimport { reactGetTextContent } from '../../../lib/reactGetTextContent';\r\nimport { escapeRegExpSpecChars } from '../../../lib/utils';\r\n\r\nexport interface FiasComboBoxProps extends ComboBoxProps<FiasAddress> {\r\n  limit?: number;\r\n}\r\n\r\ninterface FiasComboBoxState {\r\n  searchText: string;\r\n  totalCount: number;\r\n}\r\n\r\nconst HighlightedText: React.FunctionComponent = ({ children }) => {\r\n  const style: React.CSSProperties = {\r\n    backgroundColor: 'transparent',\r\n    fontWeight: 'bold',\r\n    color: 'inherit',\r\n  };\r\n  return <mark style={style}>{children}</mark>;\r\n};\r\n\r\nexport class FiasComboBox extends React.Component<FiasComboBoxProps, FiasComboBoxState> {\r\n  public static defaultProps = ComboBox.defaultProps;\r\n  public state: FiasComboBoxState = {\r\n    searchText: '',\r\n    totalCount: 0,\r\n  };\r\n\r\n  private combobox: ComboBox<FiasAddress> | null = null;\r\n\r\n  public get hasItems() {\r\n    return this.state.totalCount > 0;\r\n  }\r\n\r\n  public render() {\r\n    return (\r\n      <ComboBox\r\n        {...this.props}\r\n        getItems={this.getItems}\r\n        renderItem={this.renderItem}\r\n        onValueChange={this.handleChange}\r\n        onInputValueChange={this.handleInputChange}\r\n        onFocus={this.handleFocus}\r\n        totalCount={this.state.totalCount}\r\n        renderTotalCount={this.renderTotalCount}\r\n        ref={this.createRef}\r\n      />\r\n    );\r\n  }\r\n\r\n  private createRef = (el: ComboBox<FiasAddress> | null) => {\r\n    this.combobox = el;\r\n  };\r\n\r\n  private getItems = (searchText: string): Promise<FiasAddress[]> => {\r\n    const { getItems, limit } = this.props;\r\n    const promise = getItems ? getItems(searchText) : Promise.resolve([]);\r\n    return promise.then(items => {\r\n      this.setState({\r\n        totalCount: items.length,\r\n      });\r\n      return items.slice(0, limit);\r\n    });\r\n  };\r\n\r\n  private renderItem = (item: FiasAddress & { label?: string }): React.ReactNode => {\r\n    const node: React.ReactNode = this.props.renderItem ? this.props.renderItem(item) : item.label || '';\r\n    return this.highlight(reactGetTextContent(node));\r\n  };\r\n\r\n  private renderTotalCount = (found: number, total: number): React.ReactNode => (\r\n    <div>\r\n      <div>Показано {found} результатов.</div>\r\n      <div>Уточните запрос, чтобы увидеть остальные</div>\r\n    </div>\r\n  );\r\n\r\n  private handleChange = (item: FiasAddress) => {\r\n    const { onValueChange, valueToString } = this.props;\r\n    if (onValueChange) {\r\n      onValueChange(item);\r\n    }\r\n    this.setState({\r\n      searchText: valueToString ? valueToString(item) : '',\r\n    });\r\n  };\r\n\r\n  private handleInputChange = (query: string) => {\r\n    if (this.props.onInputValueChange) {\r\n      this.props.onInputValueChange(query);\r\n    }\r\n    this.setState({ searchText: query });\r\n  };\r\n\r\n  private handleFocus = () => {\r\n    if (this.props.onFocus) {\r\n      this.props.onFocus();\r\n    }\r\n    const { error, warning } = this.props;\r\n    if ((error || warning) && this.hasItems) {\r\n      if (this.combobox) {\r\n        this.combobox.search();\r\n      }\r\n    }\r\n  };\r\n\r\n  private highlight(str: string, lastMatchOnly = true) {\r\n    const { searchText } = this.state;\r\n    const regex = new RegExp(escapeRegExpSpecChars(searchText), 'ig');\r\n    // eslint-disable-next-line @typescript-eslint/prefer-regexp-exec\r\n    const matches = str.match(regex);\r\n    if (!searchText || !matches || str === searchText) {\r\n      return str;\r\n    }\r\n    const mismatches = str.split(regex);\r\n    const result = mismatches.reduce((elements: JSX.Element[], text: string, i: number) => {\r\n      elements.push(<span>{text}</span>);\r\n      const match = matches[i];\r\n      if (match) {\r\n        const isHighlighted = lastMatchOnly && !matches[i + 1];\r\n        elements.push(isHighlighted ? <HighlightedText>{match}</HighlightedText> : <span>{match}</span>);\r\n      }\r\n      return elements;\r\n    }, []);\r\n    return (\r\n      <div>\r\n        {result.map((element, i) => {\r\n          return React.cloneElement(element, { key: i });\r\n        })}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"]}