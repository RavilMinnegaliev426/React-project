"use strict";var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");exports.__esModule = true;exports.FiasForm = void 0;var _extends6 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));var _regenerator = _interopRequireDefault(require("@babel/runtime/regenerator"));var _asyncToGenerator2 = _interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));var _inheritsLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/inheritsLoose"));var _react = _interopRequireDefault(require("react"));

var _Gapped = require("../../Gapped");
var _Button = require("../../Button");
var _decorators = require("../../../lib/locale/decorators");
var _locale = require("../locale");
var _types = require("../types");











var _FiasAddressElement = require("../models/FiasAddressElement");
var _Tooltip = require("../../Tooltip");
var _Input = require("../../Input");
var _FiasSearch = require("../FiasSearch/FiasSearch");
var _Textarea = require("../../Textarea");
var _FiasAddress = require("../models/FiasAddress");

var _FiasCountrySelector = require("./FiasCountrySelector");
var _FiasForm = require("./FiasForm.styles");
var _FiasComboBox = require("./FiasComboBox");var _dec, _class, _class2, _temp;var


































FiasForm = (_dec = (0, _decorators.locale)('Fias', _locale.FiasLocaleHelper), _dec(_class = (_temp = _class2 = /*#__PURE__*/function (_React$Component) {(0, _inheritsLoose2.default)(FiasForm, _React$Component);







































  function FiasForm(_props) {var _this;
    _this = _React$Component.call(this, _props) || this;_this.state = { address: _this.props.address };_this.locale = void 0;_this.fields = void 0;_this.lastVerifyPromise = null;_this.















































    submit = /*#__PURE__*/(0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee() {return _regenerator.default.wrap(function _callee$(_context) {while (1) {switch (_context.prev = _context.next) {case 0:_context.next = 2;return (
                _this.lastVerifyPromise);case 2:return _context.abrupt("return",
              _this.state.address);case 3:case "end":return _context.stop();}}}, _callee);}));_this.


















































    getCommonFieldProps = function (
    field)




    {var
      address = _this.state.address;var
      validationLevel = _this.props.validationLevel;
      return {
        error: address.hasError(field) && validationLevel === _types.FiasFormValidation.Error,
        warning: address.hasError(field) && validationLevel === _types.FiasFormValidation.Warning,
        placeholder: _this.locale[field + "Placeholder"] };

    };_this.

    renderFields = function (fields) {var
      fieldsSettings = _this.props.fieldsSettings;
      return fields.map(function (field) {
        var control = _this.fields[field];
        var settings = fieldsSettings[field];
        if (control && Boolean(settings && settings.visible)) {var
          meta = control.meta,render = control.render;
          var label = _this.locale[field + "Label"];
          return (
            control &&
            _react.default.createElement(FiasForm.Field, { label: label, key: field },
            _react.default.createElement(_Tooltip.Tooltip, { pos: 'right middle', render: meta.tooltip },
            render())));




        }
      });
    };_this.

    renderAddressComboBox = function (field, width) {if (width === void 0) {width = '100%';}
      var comboboxField = _this.fields[field];
      if (comboboxField && FiasForm.isComboboxMeta(comboboxField.meta)) {var
        address = _this.state.address;var _comboboxField$meta =
        comboboxField.meta,props = _comboboxField$meta.props,createRef = _comboboxField$meta.createRef;
        var commonProps = _this.getCommonFieldProps(field);
        return (
          _react.default.createElement(_FiasComboBox.FiasComboBox, (0, _extends6.default)({},
          commonProps,
          props, {
            value: address,
            width: width,
            drawArrow: false,
            searchOnFocus: false,
            limit: _this.props.limit,
            ref: createRef })));


      }
    };_this.

    renderPostalCodeInput = function () {
      var inputField = _this.fields[_types.FiasExtraFields.postalcode];
      if (inputField && FiasForm.isInputMeta(inputField.meta)) {var
        address = _this.state.address;var _inputField$meta =
        inputField.meta,props = _inputField$meta.props,createRef = _inputField$meta.createRef;
        var commonProps = _this.getCommonFieldProps(_types.FiasExtraFields.postalcode);
        var value = address.postalCode;
        return _react.default.createElement(_Input.Input, (0, _extends6.default)({}, commonProps, props, { value: value, width: 130, ref: createRef }));
      }
    };_this.

    createAddressComboboxMeta = function (field) {
      return {
        ref: null,
        props: _this.createAddressComboBoxProps(field),
        tooltip: _this.createAddressComboBoxTooltip(field),
        createRef: function createRef(ref) {
          var comboboxField = _this.fields[field];
          if (comboboxField) {
            comboboxField.meta.ref = ref;
          }
        } };

    };_this.

    createPostalCodeInputMeta = function () {
      return {
        ref: null,
        props: _this.createPostalCodeInputProps(),
        tooltip: function tooltip() {return _this.createPostalCodeTooltip();},
        createRef: function createRef(ref) {
          var inputField = _this.fields[_types.FiasExtraFields.postalcode];
          if (inputField) {
            inputField.meta.ref = ref;
          }
        } };

    };_this.

    createAddressComboBoxProps = function (field) {
      var getItems = /*#__PURE__*/function () {var _ref2 = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee2(searchText) {return _regenerator.default.wrap(function _callee2$(_context2) {while (1) {switch (_context2.prev = _context2.next) {case 0:return _context2.abrupt("return", _this.createItemsSource(searchText, field));case 1:case "end":return _context2.stop();}}}, _callee2);}));return function getItems(_x) {return _ref2.apply(this, arguments);};}();

      var onValueChange = function onValueChange(value) {var
        address = _this.state.address;
        var newFields = (0, _extends6.default)({},
        address.fields, {},
        value.fields);

        // get rid of undefineds
        var addressField;
        for (addressField in newFields) {
          if (!newFields[addressField]) {
            delete newFields[addressField];
          }
        }
        _this.handleAddressChange(_FiasAddress.FiasAddress.createFromAddress(address, { fields: newFields }), _this.validate);
      };

      var onInputValueChange = function onInputValueChange() {
        _this.resetAddressErrors();
      };

      var onUnexpectedInput = function onUnexpectedInput(query) {var _extends2;var
        address = _this.state.address;
        var newFields = (0, _extends6.default)({},
        address.fields, (_extends2 = {}, _extends2[
        field] = query ? new _FiasAddressElement.FiasAddressElement(field, query) : undefined, _extends2));

        return _FiasAddress.FiasAddress.createFromAddress(address, { fields: newFields });
      };

      var renderItem = function renderItem(address) {
        var element = address.fields[field];
        if (!element) {
          return '';
        }

        if (field === _types.FiasFields.region && element.data) {
          var regionCode = element.data.code.substr(0, 2);
          return regionCode + " " + element.getText();
        }

        var diffAddress = new _FiasAddress.FiasAddress({
          fields: _this.state.address.getDiffFields(address, _this.props.fieldsSettings) });

        var hasParentFields = Boolean(diffAddress.getClosestParentFiasId(field));
        return hasParentFields ? diffAddress.getText() : element.getText(element.isTypeMatchField(field));
      };

      var renderValue = function renderValue(address) {
        var element = address.fields[field];
        return element && element.getText(element.isTypeMatchField(field));
      };

      var renderNotFound = function renderNotFound() {var
        address = _this.state.address;
        var messages = [_this.locale[field + "NotFound"] || _this.locale.addressNotFound];

        if (address.isAllowedToFill(field)) {
          if (address.hasOnlyIndirectParent(field)) {
            messages.push(_this.locale.addressFillParentOrSearch);
          }
        } else {
          messages = _this.locale[field + "FillBefore"] ?
          [_this.locale[field + "FillBefore"]] :
          messages;
        }

        return (
          _react.default.createElement("div", null,
          messages.map(function (message, i, m) {return (
              _react.default.createElement("div", { key: i }, message + (m[i + 1] ? '.' : '')));})));



      };

      var valueToString = function valueToString(address) {
        var element = address.fields[field];
        return element ? element.name : '';
      };

      var itemToValue = valueToString;

      return {
        getItems: getItems,
        onValueChange: onValueChange,
        onInputValueChange: onInputValueChange,
        onUnexpectedInput: onUnexpectedInput,
        renderItem: renderItem,
        renderValue: renderValue,
        itemToValue: itemToValue,
        valueToString: valueToString,
        renderNotFound: renderNotFound };

    };_this.


















    createItemsSource = /*#__PURE__*/function () {var _ref3 = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee3(searchText, field) {var address, limit, options;return _regenerator.default.wrap(function _callee3$(_context3) {while (1) {switch (_context3.prev = _context3.next) {case 0:
                address = _this.state.address;
                limit = _this.props.limit || FiasForm.defaultProps.limit;if (!

                address.isAllowedToFill(field)) {_context3.next = 5;break;}
                options = {
                  searchText: searchText,
                  field: field,
                  parentFiasId: address.getClosestParentFiasId(field),
                  fullAddress: address.isAllowedToSearchFullAddress(field),
                  directParent: !address.isAllowedToSearchThroughChildrenOfDirectParent(field, _this.props.fieldsSettings),
                  limit: limit + 1 // +1 to detect if there are more items
                };return _context3.abrupt("return",
                _this.props.api.search(options).then(function (result) {var
                  success = result.success,data = result.data,error = result.error;
                  return success && data ?
                  Promise.resolve(
                  data.map(function (item) {
                    return _FiasAddress.FiasAddress.createFromResponse(item);
                  })) :

                  Promise.reject(error);
                }));case 5:return _context3.abrupt("return",

                Promise.resolve([]));case 6:case "end":return _context3.stop();}}}, _callee3);}));return function (_x2, _x3) {return _ref3.apply(this, arguments);};}();_this.


    getFieldTooltipContent = function (field) {var
      address = _this.state.address;var
      validationLevel = _this.props.validationLevel;
      if (validationLevel !== _types.FiasFormValidation.None && address.hasError(field)) {
        return address.getError(field);
      }
      return null;
    };_this.

    createAddressComboBoxTooltip = function (field) {return function () {
        var tooltipContent = _this.getFieldTooltipContent(field);
        var comboboxField = _this.fields[field];
        if (comboboxField && FiasForm.isComboboxMeta(comboboxField.meta)) {
          var combobox = comboboxField.meta.ref;
          var hasItems = combobox ? combobox.hasItems : false;
          return tooltipContent !== null && hasItems ? _this.locale.addressSelectItemFromList : tooltipContent;
        }
        return tooltipContent;
      };};_this.

    createPostalCodeTooltip = function () {
      var tooltipContent = _this.getFieldTooltipContent(_types.FiasExtraFields.postalcode);
      var replacePostalCode = function replacePostalCode() {var
        address = _this.state.address;
        var additionalFields = (0, _extends6.default)({}, address.additionalFields);
        delete additionalFields[_types.FiasExtraFields.postalcode];
        _this.handleAddressChange(_FiasAddress.FiasAddress.createFromAddress(address, { additionalFields: additionalFields }));
      };
      return (
        tooltipContent &&
        _react.default.createElement("div", null,
        _react.default.createElement("span", null, tooltipContent),
        _this.state.address.isPostalCodeAltered &&
        _react.default.createElement("div", null,
        _react.default.createElement(_Button.Button, { onClick: replacePostalCode, use: "link" },
        _this.locale.postalcodeReplace))));






    };_this.

    verify = function () {var
      address = _this.state.address;var
      api = _this.props.api;

      return api.verify(address).then(function (result) {var
        success = result.success,data = result.data;
        if (success && data) {
          return _FiasAddress.FiasAddress.verify(address, data);
        }
        return _FiasAddress.FiasAddress.removeFiasData(address);
      });
    };_this.













    handleCountryChange = function (country) {
      _this.handleAddressChange(_FiasAddress.FiasAddress.createFromAddress(_this.state.address, { country: country }));
    };_this.

    handleForeignAddressChange = function (value) {
      _this.handleAddressChange(
      _FiasAddress.FiasAddress.createFromAddress(_this.state.address, {
        foreignAddress: value }));


    };_this.

    handleAddressChange = function (address, callback) {
      _this.setState(
      {
        address: _FiasAddress.FiasAddress.createFromAddress(address, {
          fields: _FiasAddress.FiasAddress.filterVisibleFields(address.fields, _this.props.fieldsSettings) }) },


      callback);

    };_this.

    handleSearchChange = function (address) {
      _this.handleAddressChange(address);
    };_this.

    resetAddressErrors = function () {var
      address = _this.state.address;
      if (address.hasErrors) {
        _this.setState({
          address: _FiasAddress.FiasAddress.createFromAddress(address, { errors: {} }) });

      }
    };_this.fields = _FiasAddress.FiasAddress.ALL_FIELDS.reduce(function (fields, field) {var _extends3, _extends4;switch (field) {case _types.FiasFields.region:case _types.FiasFields.district:case _types.FiasFields.city:case _types.FiasFields.intracityarea:case _types.FiasFields.settlement:case _types.FiasFields.planningstructure:case _types.FiasFields.street:case _types.FiasFields.stead:case _types.FiasFields.house:case _types.FiasFields.room:return (0, _extends6.default)({}, fields, (_extends3 = {}, _extends3[field] = { meta: _this.createAddressComboboxMeta(field), render: function render() {return _this.renderAddressComboBox(field);} }, _extends3));case _types.FiasExtraFields.postalcode:return (0, _extends6.default)({}, fields, (_extends4 = {}, _extends4[field] = { meta: _this.createPostalCodeInputMeta(), render: function render() {return _this.renderPostalCodeInput();} }, _extends4));default:return fields;}}, {});return _this;}var _proto = FiasForm.prototype;_proto.componentDidMount = function componentDidMount() {this.validate();};_proto.render = function render() {var address = this.state.address;var _this$props = this.props,api = _this$props.api,limit = _this$props.limit,countrySelector = _this$props.countrySelector;return _react.default.createElement("div", null, _react.default.createElement(_Gapped.Gapped, { vertical: true }, countrySelector && _react.default.createElement(FiasForm.Field, { label: this.locale.countryLabel }, _react.default.createElement(_FiasCountrySelector.FiasCountrySelector, { api: api, country: address.country, onValueChange: this.handleCountryChange, limit: limit })), this.props.search && _react.default.createElement(FiasForm.Field, null, _react.default.createElement(_FiasSearch.FiasSearch, { api: api, address: address, onValueChange: this.handleSearchChange, limit: limit, placeholder: this.locale.searchPlaceholder })), this.isForeignForm ? _react.default.createElement(_Gapped.Gapped, { vertical: true }, _react.default.createElement(FiasForm.Field, { label: this.locale.foreignAddressLabel }, _react.default.createElement(_Textarea.Textarea, { value: address.foreignAddress, onValueChange: this.handleForeignAddressChange, placeholder: this.locale.foreignAddressPlaceholder, width: "100%", resize: "none" })), this.renderFields([_types.FiasExtraFields.postalcode])) : this.renderFields(_FiasAddress.FiasAddress.ALL_FIELDS)));};_proto.createPostalCodeInputProps = function createPostalCodeInputProps() {var _this2 = this;return { onValueChange: function onValueChange(value) {var _extends5;var address = _this2.state.address;var newAdditionalFields = (0, _extends6.default)({}, address.additionalFields, (_extends5 = {}, _extends5[_types.FiasExtraFields.postalcode] = value, _extends5));_this2.handleAddressChange(_FiasAddress.FiasAddress.createFromAddress(address, { additionalFields: newAdditionalFields }));} };};_proto.validate = function validate() {var _this3 = this;var verifyPromise = this.lastVerifyPromise = this.verify();verifyPromise.then(function (verifiedAddress) {if (verifyPromise === _this3.lastVerifyPromise) {_this3.setState({ address: _FiasAddress.FiasAddress.validate(verifiedAddress, _this3.locale) });}});};(0, _createClass2.default)(FiasForm, [{ key: "isForeignForm", get: function get() {var address = this.state.address;var countrySelector = this.props.countrySelector;return address.isForeign || Boolean(countrySelector) && !address.country;} }]);return FiasForm;}(_react.default.Component), _class2.__KONTUR_REACT_UI__ = 'FiasForm', _class2.defaultProps = { validationLevel: 'Error', limit: 5, fieldsSettings: {}, countrySelector: false }, _class2.Field = function (_ref4) {var label = _ref4.label,children = _ref4.children;return _react.default.createElement("div", { className: _FiasForm.jsStyles.row() }, label && _react.default.createElement("div", { className: _FiasForm.jsStyles.label() }, label), _react.default.createElement("div", { className: _FiasForm.jsStyles.field() }, children));}, _class2.isComboboxMeta = function (meta) {var props = meta.props;return Object.prototype.hasOwnProperty.call(props, 'onUnexpectedInput') && Object.prototype.hasOwnProperty.call(props, 'getItems');}, _class2.isInputMeta = function (meta) {var props = meta.props;return !FiasForm.isComboboxMeta(meta) && Object.prototype.hasOwnProperty.call(props, 'onValueChange');}, _temp)) || _class);exports.FiasForm = FiasForm;