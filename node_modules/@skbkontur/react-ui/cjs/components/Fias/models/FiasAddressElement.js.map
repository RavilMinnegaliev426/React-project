{"version":3,"sources":["FiasAddressElement.ts"],"names":["FiasAddressElement","type","name","data","isTypeMatchField","field","abbreviation","MATCHING_TYPES","removeData","isEqualTo","element","fiasId","getText","withoutType","result","abbreviations","text","FiasFields","district","stead","number","house","estateStatus","FiasEstateStatuses","None","Hold","House","HouseHold","structureStatus","FiasStructureStatuses","structureNumber","Structure","Construction","Liter","buildingNumber","room","trim","FEDERAL_CITIES","includes","г","city","нп","settlement","ул","street"],"mappings":"0PAAA;AACA,2D;;;;AAIaA,kB;AACX;;;;;;;;;;;;;;;;;AAiBA,8BAAmBC,IAAnB,EAA4CC,IAA5C,EAAiEC,IAAjE,EAAkF,uBAA/DF,IAA+D,GAA/DA,IAA+D,MAAtCC,IAAsC,GAAtCA,IAAsC,MAAjBC,IAAiB,GAAjBA,IAAiB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsH3EC,IAAAA,gBAtH2E,GAsHxD,UAACC,KAAD,EAAgC;AAChDF,MAAAA,IADgD,GACvC,KADuC,CAChDA,IADgD;AAExD,UAAIA,IAAI,IAAIA,IAAI,CAACG,YAAjB,EAA+B;AAC7B,eAAON,kBAAkB,CAACO,cAAnB,CAAkCJ,IAAI,CAACG,YAAvC,MAAyDD,KAAhE;AACD;AACD,aAAO,KAAP;AACD,KA5HiF;;;;;;;;;;;;;;;;;;;;;;;;;;AAsJ3EG,IAAAA,UAtJ2E,GAsJ9D,YAAM;AACxB,aAAO,KAAI,CAACL,IAAZ;AACD,KAxJiF;;AA0J3EM,IAAAA,SA1J2E,GA0J/D,UAACC,OAAD,EAAsD;AACvE,UAAIA,OAAO,IAAIA,OAAO,CAACC,MAAvB,EAA+B;AAC7B,eAAO,KAAI,CAACA,MAAL,KAAgBD,OAAO,CAACC,MAA/B;AACD;AACD,aAAO,KAAP;AACD,KA/JiF,CAAE,C,iDAqB7EC,O,GAAP,iBAAeC,WAAf,EAA4C,KAA7BA,WAA6B,cAA7BA,WAA6B,GAAf,KAAe,MAClCX,IADkC,GACnB,IADmB,CAClCA,IADkC,CAC5BC,IAD4B,GACnB,IADmB,CAC5BA,IAD4B,CAE1C,IAAIW,MAAM,GAAG,EAAb,CAEA,IAAI,CAACZ,IAAL,EAAW,CACT,OAAO,EAAP,CACD,CAED,IAAIC,IAAJ,EAAU,KACAG,YADA,GACiBH,IADjB,CACAG,YADA,CAER,IAAIA,YAAJ,EAAkB,CAChB,IAAML,KAAI,GAAG,CAACY,WAAD,GAAeE,6BAAcT,YAAd,KAA+BA,YAA9C,GAA6D,EAA1E,CACA,QAAQA,YAAR,GACE,KAAK,SAAL,CACEQ,MAAM,GAAMb,KAAN,gDAAN,CACA,MAEF,KAAK,IAAL,CAAW,CACT,IAAIe,IAAI,GAAGd,IAAX,CACA,IAAIA,IAAI,KAAK,0CAAb,EAAyD,CACvDc,IAAI,UAAQf,KAAZ,CACD,CACDa,MAAM,GAAGE,IAAT,CACA,MACD,CAED,KAAK,MAAL,CACA,KAAK,MAAL,CACA,KAAK,KAAL,CACEF,MAAM,GAAMZ,IAAN,SAAcD,KAApB,CACA,MAEF,KAAK,GAAL,CACEa,MAAM,GAAG,CAACD,WAAD,IACF,KAAKZ,IAAL,KAAcgB,kBAAWC,QAAzB,GAAoC,WAApC,GAAkD,SADhD,UAC6DhB,IAD7D,QAEFA,IAFP,CAGA,MAEF,QACEY,MAAM,GAAMb,KAAN,SAAcC,IAApB,CA3BJ,CA6BD,CAED,IAAI,KAAKD,IAAL,KAAcgB,kBAAWE,KAA7B,EAAoC,CAClCL,MAAM,GAAG,MAAMX,IAAI,CAACiB,MAApB,CACD,CAED,IAAI,KAAKnB,IAAL,KAAcgB,kBAAWI,KAA7B,EAAoC,CAClC,IAAIlB,IAAI,CAACmB,YAAL,KAAsBC,0BAAmBC,IAA7C,EAAmD,CACjD,QAAQrB,IAAI,CAACmB,YAAb,GACE,KAAKC,0BAAmBE,IAAxB,CACEX,MAAM,GAAMA,MAAN,sDAAN,CACA,MACF,KAAKS,0BAAmBG,KAAxB,CACEZ,MAAM,GAAMA,MAAN,wBAAN,CACA,MACF,KAAKS,0BAAmBI,SAAxB,CACEb,MAAM,GAAMA,MAAN,8EAAN,CACA,MATJ,CAWD,CAED,IAAIX,IAAI,CAACiB,MAAT,EAAiB,CACfN,MAAM,GAAMA,MAAN,SAAgBX,IAAI,CAACiB,MAA3B,CACD,CAED,IAAIjB,IAAI,CAACyB,eAAL,IAAwBzB,IAAI,CAACyB,eAAL,KAAyBC,6BAAsBL,IAAvE,IAA+ErB,IAAI,CAAC2B,eAAxF,EAAyG,CACvG,QAAQ3B,IAAI,CAACyB,eAAb,GACE,KAAKC,6BAAsBE,SAA3B,CACEjB,MAAM,GAAMA,MAAN,0DAAyBX,IAAI,CAAC2B,eAApC,CACA,MACF,KAAKD,6BAAsBG,YAA3B,CACElB,MAAM,GAAMA,MAAN,iEAA2BX,IAAI,CAAC2B,eAAtC,CACA,MACF,KAAKD,6BAAsBI,KAA3B,CACEnB,MAAM,GAAMA,MAAN,8CAAuBX,IAAI,CAAC2B,eAAlC,CACA,MATJ,CAWD,CAED,IAAI3B,IAAI,CAAC+B,cAAT,EAAyB,CACvBpB,MAAM,GAAMA,MAAN,8CAAuBX,IAAI,CAAC+B,cAAlC,CACD,CACF,CAED,IAAI,KAAKjC,IAAL,KAAcgB,kBAAWkB,IAA7B,EAAmC,CACjC,IAAIhC,IAAJ,EAAU,CACRW,MAAM,yDAAeZ,IAArB,CACD,CAFD,MAEO,CACLY,MAAM,GAAGZ,IAAT,CACD,CACF,CACF,CAED,OAAOY,MAAM,CAACsB,IAAP,MAAiBlC,IAAxB,CACD,C,6FAlHmC,CAClC,IAAI,CAAC,KAAKS,MAAV,EAAkB,CAChB,OAAO,KAAP,CACD,CACD,OAAOX,kBAAkB,CAACqC,cAAnB,CAAkCC,QAAlC,CAA2C,KAAK3B,MAAhD,CAAP,CACD,C,2CAE6C,CAC5C,IAAI,KAAKR,IAAL,IAAa,KAAKA,IAAL,CAAUA,IAA3B,EAAiC,CAC/B,OAAO,KAAKA,IAAL,CAAUA,IAAjB,CACD,CACF,C,yCAEuC,CACtC,IAAI,KAAKA,IAAT,EAAe,CACb,OAAO,KAAKA,IAAL,CAAUQ,MAAjB,CACD,CACF,C,iDA2GuC,KAC9BV,IAD8B,GACf,IADe,CAC9BA,IAD8B,CACxBE,IADwB,GACf,IADe,CACxBA,IADwB,CAEtC,IAAIA,IAAJ,EAAU,KACAD,KADA,GACiFC,IADjF,CACAD,IADA,CACMI,YADN,GACiFH,IADjF,CACMG,YADN,CACoBc,MADpB,GACiFjB,IADjF,CACoBiB,MADpB,CAC4BU,eAD5B,GACiF3B,IADjF,CAC4B2B,eAD5B,CAC6CI,cAD7C,GACiF/B,IADjF,CAC6C+B,cAD7C,CAC6DN,eAD7D,GACiFzB,IADjF,CAC6DyB,eAD7D,CAER,QAAQ3B,IAAR,GACE,KAAKgB,kBAAWI,KAAhB,CACE,OAAO,EACLD,MAAM,EAANA,MADK,EAELU,eAAe,EAAfA,eAFK,EAGLF,eAAe,EAAfA,eAHK,EAILM,cAAc,EAAdA,cAJK,EAAP,CAMF,QACE,OAAO,EACLhC,IAAI,EAAJA,KADK,EAELI,YAAY,EAAZA,YAFK,EAAP,CATJ,CAcD,CACD,OAAO,EACLJ,IAAI,EAAE,KAAKA,IADN,EAAP,CAGD,C,mFAtKUF,kB,CAEIO,c,GAEX,EACF,OAAOU,kBAAWC,QADhB,EAEFqB,CAAC,EAAEtB,kBAAWuB,IAFZ,EAGFC,EAAE,EAAExB,kBAAWyB,UAHb,EAIFC,EAAE,EAAE1B,kBAAW2B,MAJb,E,CAJO5C,kB,CAWIqC,c,GAA2B,CACxC,sCADwC,EACA;AACxC,sCAFwC,EAEA;AACxC,sCAHwC,EAGA;AACxC,sCAJwC,CAIA;AAJA,C","sourcesContent":["import { FiasEstateStatuses, FiasId, FiasFields, FiasStructureStatuses, FiasObject } from '../types';\r\nimport { abbreviations } from '../constants/abbreviations';\r\n\r\nimport { FiasData } from './FiasData';\r\n\r\nexport class FiasAddressElement {\r\n  // Types (abbrevs) that match fields labels\r\n  private static MATCHING_TYPES: {\r\n    [key: string]: FiasFields;\r\n  } = {\r\n    'р-н': FiasFields.district,\r\n    г: FiasFields.city,\r\n    нп: FiasFields.settlement,\r\n    ул: FiasFields.street,\r\n  };\r\n\r\n  private static FEDERAL_CITIES: FiasId[] = [\r\n    '0c5b2444-70a0-4932-980c-b4dc0d3f02b5', // Москва\r\n    'c2deb16a-0330-4f05-821f-1d09c93331e6', // Санкт-Петербург\r\n    '6fdecb78-893a-4e3f-a5ba-aa062459463b', // Севастополь\r\n    '63ed1a35-4be6-4564-a1ec-0c51f7383314', // Байконур\r\n  ];\r\n\r\n  constructor(public type: FiasFields, public name: string, public data?: FiasData) {}\r\n\r\n  public get isFederalCity(): boolean {\r\n    if (!this.fiasId) {\r\n      return false;\r\n    }\r\n    return FiasAddressElement.FEDERAL_CITIES.includes(this.fiasId);\r\n  }\r\n\r\n  public get fiasData(): FiasObject | undefined {\r\n    if (this.data && this.data.data) {\r\n      return this.data.data;\r\n    }\r\n  }\r\n\r\n  public get fiasId(): FiasId | undefined {\r\n    if (this.data) {\r\n      return this.data.fiasId;\r\n    }\r\n  }\r\n\r\n  public getText(withoutType = false): string {\r\n    const { name, data } = this;\r\n    let result = '';\r\n\r\n    if (!name) {\r\n      return '';\r\n    }\r\n\r\n    if (data) {\r\n      const { abbreviation } = data;\r\n      if (abbreviation) {\r\n        const type = !withoutType ? abbreviations[abbreviation] || abbreviation : '';\r\n        switch (abbreviation) {\r\n          case 'Чувашия':\r\n            result = `${type} Чувашия`;\r\n            break;\r\n\r\n          case 'АО': {\r\n            let text = name;\r\n            if (name !== 'Ханты-Мансийский Автономный округ - Югра') {\r\n              text += ` ${type}`;\r\n            }\r\n            result = text;\r\n            break;\r\n          }\r\n\r\n          case 'Аобл':\r\n          case 'край':\r\n          case 'обл':\r\n            result = `${name} ${type}`;\r\n            break;\r\n\r\n          case 'п':\r\n            result = !withoutType\r\n              ? `${this.type === FiasFields.district ? 'поселение' : 'поселок'} ${name}`\r\n              : `${name}`;\r\n            break;\r\n\r\n          default:\r\n            result = `${type} ${name}`;\r\n        }\r\n      }\r\n\r\n      if (this.type === FiasFields.stead) {\r\n        result = ' ' + data.number;\r\n      }\r\n\r\n      if (this.type === FiasFields.house) {\r\n        if (data.estateStatus !== FiasEstateStatuses.None) {\r\n          switch (data.estateStatus) {\r\n            case FiasEstateStatuses.Hold:\r\n              result = `${result} владение`;\r\n              break;\r\n            case FiasEstateStatuses.House:\r\n              result = `${result} дом`;\r\n              break;\r\n            case FiasEstateStatuses.HouseHold:\r\n              result = `${result} домовладение`;\r\n              break;\r\n          }\r\n        }\r\n\r\n        if (data.number) {\r\n          result = `${result} ${data.number}`;\r\n        }\r\n\r\n        if (data.structureStatus && data.structureStatus !== FiasStructureStatuses.None && data.structureNumber) {\r\n          switch (data.structureStatus) {\r\n            case FiasStructureStatuses.Structure:\r\n              result = `${result} строение ${data.structureNumber}`;\r\n              break;\r\n            case FiasStructureStatuses.Construction:\r\n              result = `${result} cооружение ${data.structureNumber}`;\r\n              break;\r\n            case FiasStructureStatuses.Liter:\r\n              result = `${result} литера ${data.structureNumber}`;\r\n              break;\r\n          }\r\n        }\r\n\r\n        if (data.buildingNumber) {\r\n          result = `${result} корпус ${data.buildingNumber}`;\r\n        }\r\n      }\r\n\r\n      if (this.type === FiasFields.room) {\r\n        if (data) {\r\n          result = `квартира ${name}`;\r\n        } else {\r\n          result = name;\r\n        }\r\n      }\r\n    }\r\n\r\n    return result.trim() || name;\r\n  }\r\n\r\n  public isTypeMatchField = (field: FiasFields): boolean => {\r\n    const { data } = this;\r\n    if (data && data.abbreviation) {\r\n      return FiasAddressElement.MATCHING_TYPES[data.abbreviation] === field;\r\n    }\r\n    return false;\r\n  };\r\n\r\n  get verifiableData(): Partial<FiasData> {\r\n    const { type, data } = this;\r\n    if (data) {\r\n      const { name, abbreviation, number, structureNumber, buildingNumber, structureStatus } = data;\r\n      switch (type) {\r\n        case FiasFields.house:\r\n          return {\r\n            number,\r\n            structureNumber,\r\n            structureStatus,\r\n            buildingNumber,\r\n          };\r\n        default:\r\n          return {\r\n            name,\r\n            abbreviation,\r\n          };\r\n      }\r\n    }\r\n    return {\r\n      name: this.name,\r\n    };\r\n  }\r\n\r\n  public removeData = () => {\r\n    delete this.data;\r\n  };\r\n\r\n  public isEqualTo = (element: FiasAddressElement | undefined): boolean => {\r\n    if (element && element.fiasId) {\r\n      return this.fiasId === element.fiasId;\r\n    }\r\n    return false;\r\n  };\r\n}\r\n"]}