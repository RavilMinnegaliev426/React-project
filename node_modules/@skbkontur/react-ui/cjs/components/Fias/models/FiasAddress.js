"use strict";var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");exports.__esModule = true;exports.FiasAddress = void 0;var _regenerator = _interopRequireDefault(require("@babel/runtime/regenerator"));var _asyncToGenerator2 = _interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));var _extends4 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));var _lodash = _interopRequireDefault(require("lodash.isequal"));


var _types = require("../types");
















var _FiasAddressElement = require("./FiasAddressElement");
var _FiasData = require("./FiasData");var









FiasAddress = /*#__PURE__*/function () {















































































































































































  // TODO: Hide invisible fields without removing them.
  // (removing can break the verification)







































































































  function FiasAddress(_temp) {var _this = this;var _ref = _temp === void 0 ? {} : _temp,_fields = _ref.fields,additionalFields = _ref.additionalFields,errors = _ref.errors,_country = _ref.country,_foreignAddress = _ref.foreignAddress;this.fields = void 0;this.additionalFields = void 0;this.errors = void 0;this.country = void 0;this.foreignAddress = void 0;this.











































    getAddressErrors = function () {
      return (0, _extends4.default)({},
      _this.errors);

    };this.

    getText = function (minField, skipTypes, connector) {if (skipTypes === void 0) {skipTypes = false;}if (connector === void 0) {connector = ', ';}
      if (_this.isEmpty) {
        return '';
      }
      var getElementText = function getElementText(element) {
        return element ? element.getText(skipTypes) : '';
      };
      var fields = minField ? FiasAddress.getParentFields(minField) : FiasAddress.MAIN_FIELDS;
      return fields.
      map(function (field) {return getElementText(_this.fields[field]);}).
      filter(Boolean).
      join(connector);
    };this.

    getFullText = function (withPostalCode) {if (withPostalCode === void 0) {withPostalCode = false;}
      var substrings = [];

      if (withPostalCode) {
        substrings.push(_this.postalCode);
      }

      if (_this.country) {
        substrings.push(_this.country.fullName);
      }

      substrings.push(_this.isForeign ? _this.foreignAddress : _this.getText());

      return substrings.filter(Boolean).join(', ');
    };this.

    isAllowedToFill = function (field) {var _this$fields =
      _this.fields,region = _this$fields.region,city = _this$fields.city,settlement = _this$fields.settlement,house = _this$fields.house;
      var hasCityOrSettlement = city || settlement || region && region.isFederalCity;
      if (
      !hasCityOrSettlement && (
      field === _types.FiasFields.street || field === _types.FiasFields.stead || field === _types.FiasFields.house) ||
      !house && field === _types.FiasFields.room)
      {
        return false;
      }
      return true;
    };this.

    isAllowedToSearchFullAddress = function (field) {
      return FiasAddress.FULL_ADDRESS_SEARCH_FIELDS.includes(field);
    };this.



    isAllowedToSearchThroughChildrenOfDirectParent = function (
    field,
    fieldsSettings)
    {
      if (fieldsSettings) {
        for (var _iterator = FiasAddress.getParentFields(field), _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {var _ref2;if (_isArray) {if (_i >= _iterator.length) break;_ref2 = _iterator[_i++];} else {_i = _iterator.next();if (_i.done) break;_ref2 = _i.value;}var parentField = _ref2;
          if (!FiasAddress.isFieldVisible(parentField, fieldsSettings)) {
            return false;
          }
        }
      }
      return FiasAddress.NOT_ONLY_DIRECT_PARENT_SEARCH_FIELDS.includes(field);
    };this.

    hasOnlyIndirectParent = function (field) {
      if (field) {
        var parents = FiasAddress.getParentFields(field);
        if (parents.length > 1) {
          var directParent = _this.fields[parents.pop()];
          return !directParent && parents.some(function (parent) {return Boolean(_this.fields[parent]);});
        }
      }
      return false;
    };this.

    getClosestParentFiasId = function (field) {
      if (!_this.isEmpty) {
        var parents = FiasAddress.getParentFields(field).
        slice().
        reverse();
        for (var _iterator2 = parents, _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : _iterator2[Symbol.iterator]();;) {var _ref3;if (_isArray2) {if (_i2 >= _iterator2.length) break;_ref3 = _iterator2[_i2++];} else {_i2 = _iterator2.next();if (_i2.done) break;_ref3 = _i2.value;}var parentField = _ref3;
          var parent = _this.fields[parentField];
          if (parent) {
            return parent.fiasId;
          }
        }
      }
    };this.

    getFiasId = function () {
      if (!_this.isEmpty) {
        var fields = FiasAddress.MAIN_FIELDS.slice().reverse();
        for (var _iterator3 = fields, _isArray3 = Array.isArray(_iterator3), _i3 = 0, _iterator3 = _isArray3 ? _iterator3 : _iterator3[Symbol.iterator]();;) {var _ref4;if (_isArray3) {if (_i3 >= _iterator3.length) break;_ref4 = _iterator3[_i3++];} else {_i3 = _iterator3.next();if (_i3.done) break;_ref4 = _i3.value;}var field = _ref4;
          var element = _this.fields[field];
          if (element && element.fiasId) {
            return element.fiasId;
          }
        }
      }
      return '';
    };this.

    getParent = function (field) {
      if (_this.fields[field]) {
        var parents = FiasAddress.getParentFields(field).filter(function (f) {return Boolean(_this.fields[f]);});
        var closest = parents.pop();
        if (closest) {
          return _this.fields[closest];
        }
      }
    };this.

    verifyConsistency = function () {
      var verifiedFields = (0, _extends4.default)({}, _this.fields);

      for (var _iterator4 = FiasAddress.MAIN_FIELDS, _isArray4 = Array.isArray(_iterator4), _i4 = 0, _iterator4 = _isArray4 ? _iterator4 : _iterator4[Symbol.iterator]();;) {var _ref5;if (_isArray4) {if (_i4 >= _iterator4.length) break;_ref5 = _iterator4[_i4++];} else {_i4 = _iterator4.next();if (_i4.done) break;_ref5 = _i4.value;}var field = _ref5;
        var element = _this.fields[field];
        if (element) {
          if (element.data) {
            var expectedParentFiasId = element.data.parentFiasId;
            var parent = _this.getParent(field);
            if (!parent || parent.fiasId === expectedParentFiasId) {
              verifiedFields[field] = element;
              continue;
            }
          }
          return {
            address: FiasAddress.fieldsToResponse(verifiedFields),
            isValid: false,
            invalidLevel: field };

        }
      }
      return {
        address: FiasAddress.fieldsToResponse(verifiedFields),
        isValid: true };

    };this.

    getFiasPostalCode = function () {
      if (!_this.isEmpty) {
        var fields = FiasAddress.MAIN_FIELDS.slice().reverse();
        for (var _iterator5 = fields, _isArray5 = Array.isArray(_iterator5), _i5 = 0, _iterator5 = _isArray5 ? _iterator5 : _iterator5[Symbol.iterator]();;) {var _ref6;if (_isArray5) {if (_i5 >= _iterator5.length) break;_ref6 = _iterator5[_i5++];} else {_i5 = _iterator5.next();if (_i5.done) break;_ref6 = _i5.value;}var field = _ref6;
          var element = _this.fields[field];
          if (element && element.data && element.data.postalCode) {
            return element.data.postalCode;
          }
        }
      }
      return '';
    };this.

    getAddressValue = function () {
      var fields = Object.keys(_this.fields);
      return fields.reduce(function (value, field) {var _extends2;
        var element = _this.fields[field];
        if (!element) {
          return value;
        }var
        name = element.name,fiasData = element.fiasData;
        return (0, _extends4.default)({},
        value, (_extends2 = {}, _extends2[
        field] = (0, _extends4.default)({
          name: name },
        fiasData ? { data: fiasData } : {}), _extends2));


      }, {});
    };this.


    getValue = function (withPostalCode) {if (withPostalCode === void 0) {withPostalCode = false;}var
      country = _this.country,foreignAddress = _this.foreignAddress;
      return (0, _extends4.default)({
        address: _this.getAddressValue(),
        addressString: _this.getFullText(withPostalCode),
        addressErrors: _this.getAddressErrors(),
        fiasId: _this.getFiasId(),
        postalCode: _this.postalCode },
      country ? { country: country } : {}, {},
      _this.isForeign ? { foreignAddress: foreignAddress } : {});

    };this.

    convertForVerification = function () {
      return FiasAddress.VERIFIABLE_FIELDS.reduce(function (value, field) {var _extends3;
        var element = _this.fields[field];
        if (!element) {
          return value;
        }
        return (0, _extends4.default)({},
        value, (_extends3 = {}, _extends3[
        field] = (0, _extends4.default)({},
        element.verifiableData), _extends3));


      }, {});
    };this.

    getDiffFields = function (address, fieldsSettings) {
      var fields = fieldsSettings ?
      FiasAddress.filterVisibleFields(address.fields, fieldsSettings) : (0, _extends4.default)({},
      address.fields);
      for (var _iterator6 = FiasAddress.MAIN_FIELDS, _isArray6 = Array.isArray(_iterator6), _i6 = 0, _iterator6 = _isArray6 ? _iterator6 : _iterator6[Symbol.iterator]();;) {var _ref7;if (_isArray6) {if (_i6 >= _iterator6.length) break;_ref7 = _iterator6[_i6++];} else {_i6 = _iterator6.next();if (_i6.done) break;_ref7 = _i6.value;}var field = _ref7;
        var element = fields[field];
        if (element) {
          if (element.isEqualTo(_this.fields[field])) {
            delete fields[field];
          } else {
            break;
          }
        }
      }
      return fields;
    };this.fields = _fields || {};this.additionalFields = additionalFields || {};this.errors = errors || {};this.country = _country;this.foreignAddress = _foreignAddress || '';}var _proto = FiasAddress.prototype;_proto.hasError = function hasError(field) {return Object.prototype.hasOwnProperty.call(this.errors, field);};_proto.getError = function getError(field) {return this.errors[field];};(0, _createClass2.default)(FiasAddress, [{ key: "isForeign", get: function get() {return Boolean(this.country && !FiasAddress.IS_RUSSIA(this.country));} }, { key: "isEmpty", get: function get() {var _this2 = this;return !FiasAddress.MAIN_FIELDS.some(function (field) {return Object.prototype.hasOwnProperty.call(_this2.fields, field);});} }, { key: "hasErrors", get: function get() {return Object.keys(this.errors).length > 0;} }, { key: "postalCode", get: function get() {var value = this.additionalFields[_types.FiasExtraFields.postalcode];return typeof value === 'string' ? value : this.getFiasPostalCode();} }, { key: "isPostalCodeValid", get: function get() {var rusFormat = /^[\d]{6}$/;var foreignFormat = /^[\w.\-\s]*$/;return (!this.country || this.isForeign ? foreignFormat : rusFormat).test(this.postalCode);} }, { key: "isPostalCodeAltered", get: function get() {var fiasPostalCode = this.getFiasPostalCode();return Boolean(fiasPostalCode) && this.postalCode !== fiasPostalCode;} }]);return FiasAddress;}();exports.FiasAddress = FiasAddress;FiasAddress.MAIN_FIELDS = [_types.FiasFields.region, _types.FiasFields.district, _types.FiasFields.city, _types.FiasFields.intracityarea, _types.FiasFields.settlement, _types.FiasFields.planningstructure, _types.FiasFields.street, _types.FiasFields.stead, _types.FiasFields.house, _types.FiasFields.room];FiasAddress.ADDITIONAL_FIELDS = [_types.FiasExtraFields.postalcode];FiasAddress.ALL_FIELDS = [].concat(FiasAddress.MAIN_FIELDS, FiasAddress.ADDITIONAL_FIELDS);FiasAddress.VERIFIABLE_FIELDS = [_types.FiasFields.region, _types.FiasFields.district, _types.FiasFields.city, _types.FiasFields.intracityarea, _types.FiasFields.settlement, _types.FiasFields.planningstructure, _types.FiasFields.street];FiasAddress.FULL_ADDRESS_SEARCH_FIELDS = [_types.FiasFields.district, _types.FiasFields.city, _types.FiasFields.intracityarea, _types.FiasFields.settlement, _types.FiasFields.planningstructure, _types.FiasFields.street];FiasAddress.NOT_ONLY_DIRECT_PARENT_SEARCH_FIELDS = [_types.FiasFields.district, _types.FiasFields.city, _types.FiasFields.intracityarea, _types.FiasFields.settlement, _types.FiasFields.planningstructure, _types.FiasFields.street];FiasAddress.IS_RUSSIA = function (country) {return (0, _lodash.default)(country, { shortName: 'Россия', fullName: 'Российская Федерация', code: '643' });};FiasAddress.responseToFields = function (response) {var fields = {};if (response) {FiasAddress.MAIN_FIELDS.forEach(function (field) {var fiasObject = response[field];if (fiasObject) {var data = new _FiasData.FiasData(fiasObject);fields[field] = new _FiasAddressElement.FiasAddressElement(field, data.name, data);}});}return fields;};FiasAddress.fieldsToResponse = function (fields) {var response = {};if (fields) {FiasAddress.MAIN_FIELDS.forEach(function (field) {var element = fields[field];if (element && element.fiasData) {response[field] = element.fiasData;}});}return response;};FiasAddress.createFromResponse = function (response, additionalFields, country) {return new FiasAddress({ fields: FiasAddress.responseToFields(response), additionalFields: additionalFields, country: country });};FiasAddress.createFromAddressValue = function (addressValue, additionalFields, country) {var fields = {};if (addressValue) {FiasAddress.MAIN_FIELDS.forEach(function (field) {var addressField = addressValue[field];if (addressField) {var name = addressField.name,data = addressField.data;fields[field] = new _FiasAddressElement.FiasAddressElement(field, name, data && new _FiasData.FiasData(data));}});}return new FiasAddress({ fields: fields, additionalFields: additionalFields, country: country });};FiasAddress.createFromAddress = function (address, options) {var fields = address.fields,additionalFields = address.additionalFields,errors = address.errors,country = address.country,foreignAddress = address.foreignAddress;return new FiasAddress((0, _extends4.default)({ fields: fields, additionalFields: additionalFields, errors: errors, country: country, foreignAddress: foreignAddress }, options));};FiasAddress.validate = function (address, locale) {var fields = address.fields;var errors = {};for (var _iterator7 = FiasAddress.MAIN_FIELDS, _isArray7 = Array.isArray(_iterator7), _i7 = 0, _iterator7 = _isArray7 ? _iterator7 : _iterator7[Symbol.iterator]();;) {var _ref8;if (_isArray7) {if (_i7 >= _iterator7.length) break;_ref8 = _iterator7[_i7++];} else {_i7 = _iterator7.next();if (_i7.done) break;_ref8 = _i7.value;}var field = _ref8;var element = fields[field];var error = '';if (element) {if (!element.data) {error = locale.addressNotVerified;}if (!address.isAllowedToFill(field)) {error = locale[field + "FillBefore"];}if (error) {errors[field] = error;break;}}}if (Object.keys(errors).length === 0) {if (address.postalCode && !address.isPostalCodeValid) {errors[_types.FiasExtraFields.postalcode] = locale.postalcodeNotValid;} else if (address.isPostalCodeAltered) {errors[_types.FiasExtraFields.postalcode] = locale.postalcodeNotFound;}}return FiasAddress.createFromAddress(address, { errors: errors });};FiasAddress.verify = function (address, response) {if (address.isEmpty) {return address;}var addressResponse = response.address,invalidLevel = response.invalidLevel;var verifiedAddress = FiasAddress.createFromAddress(address, { fields: (0, _extends4.default)({}, address.fields, {}, FiasAddress.responseToFields(addressResponse)) });var invalidField = invalidLevel || verifiedAddress.verifyConsistency().invalidLevel;if (invalidField) {return FiasAddress.removeFiasData(verifiedAddress, [invalidField].concat(FiasAddress.getChildFields(invalidField)));}return verifiedAddress;};FiasAddress.filterVisibleFields = function (fields, fieldsSettings) {var filteredFields = {};var field;for (field in fields) {if (FiasAddress.isFieldVisible(field, fieldsSettings)) {filteredFields[field] = fields[field];}}return filteredFields;};FiasAddress.isFieldVisible = function (field, fieldsSettings) {var settings = fieldsSettings[field];return Boolean(settings && settings.visible);};FiasAddress.getParentFields = function (field) {var index = FiasAddress.MAIN_FIELDS.indexOf(field);return index > -1 ? FiasAddress.MAIN_FIELDS.slice(0, index) : [];};FiasAddress.getChildFields = function (field) {var index = FiasAddress.MAIN_FIELDS.indexOf(field);return index > -1 ? FiasAddress.MAIN_FIELDS.slice(index + 1) : [];};FiasAddress.removeFiasData = function (address, fields) {if (fields === void 0) {fields = FiasAddress.MAIN_FIELDS;}var addressFields = (0, _extends4.default)({}, address.fields);for (var _iterator8 = fields, _isArray8 = Array.isArray(_iterator8), _i8 = 0, _iterator8 = _isArray8 ? _iterator8 : _iterator8[Symbol.iterator]();;) {var _ref9;if (_isArray8) {if (_i8 >= _iterator8.length) break;_ref9 = _iterator8[_i8++];} else {_i8 = _iterator8.next();if (_i8.done) break;_ref9 = _i8.value;}var field = _ref9;var element = addressFields[field];if (element) {element.removeData();}}return FiasAddress.createFromAddress(address, { fields: addressFields });};FiasAddress.getAddress = /*#__PURE__*/function () {var _ref10 = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee(api, value, fieldsSettings) {var address, addressString, fiasId, postalCode, country, foreignAddress, additionalFields, searchOptions, _additionalFields, addressValue, _ref11, success, data, addressResponse;return _regenerator.default.wrap(function _callee$(_context) {while (1) {switch (_context.prev = _context.next) {case 0:if (value) {_context.next = 2;break;}return _context.abrupt("return", new FiasAddress());case 2:address = value.address, addressString = value.addressString, fiasId = value.fiasId, postalCode = value.postalCode, country = value.country, foreignAddress = value.foreignAddress;additionalFields = {};searchOptions = {};if (postalCode) {additionalFields[_types.FiasExtraFields.postalcode] = postalCode;}if (!(country && !FiasAddress.IS_RUSSIA(country))) {_context.next = 8;break;}return _context.abrupt("return", new FiasAddress({ country: country, foreignAddress: foreignAddress, additionalFields: (_additionalFields = {}, _additionalFields[_types.FiasExtraFields.postalcode] = postalCode, _additionalFields) }));case 8:if (!address) {_context.next = 11;break;}addressValue = fieldsSettings ? FiasAddress.filterVisibleFields(address, fieldsSettings) : address;return _context.abrupt("return", FiasAddress.createFromAddressValue(addressValue, additionalFields, country));case 11:if (fiasId) {searchOptions = { fiasId: fiasId };}if (addressString) {searchOptions = { searchText: addressString, limit: 1 };}if (!api) {_context.next = 22;break;}_context.next = 16;return api.search(searchOptions);case 16:_ref11 = _context.sent;success = _ref11.success;data = _ref11.data;if (!(success && data && data.length)) {_context.next = 22;break;}addressResponse = fieldsSettings ? FiasAddress.filterVisibleFields(data[0], fieldsSettings) : data[0];return _context.abrupt("return", FiasAddress.createFromResponse(addressResponse, additionalFields, country));case 22:return _context.abrupt("return", new FiasAddress({ country: country }));case 23:case "end":return _context.stop();}}}, _callee);}));return function (_x, _x2, _x3) {return _ref10.apply(this, arguments);};}();