{"version":3,"sources":["FiasAddress.ts"],"names":["FiasAddress","fields","additionalFields","errors","country","foreignAddress","getAddressErrors","getText","minField","skipTypes","connector","isEmpty","getElementText","element","getParentFields","MAIN_FIELDS","map","field","filter","Boolean","join","getFullText","withPostalCode","substrings","push","postalCode","fullName","isForeign","isAllowedToFill","region","city","settlement","house","hasCityOrSettlement","isFederalCity","FiasFields","street","stead","room","isAllowedToSearchFullAddress","FULL_ADDRESS_SEARCH_FIELDS","includes","isAllowedToSearchThroughChildrenOfDirectParent","fieldsSettings","parentField","isFieldVisible","NOT_ONLY_DIRECT_PARENT_SEARCH_FIELDS","hasOnlyIndirectParent","parents","length","directParent","pop","some","parent","getClosestParentFiasId","slice","reverse","fiasId","getFiasId","getParent","f","closest","verifyConsistency","verifiedFields","data","expectedParentFiasId","parentFiasId","address","fieldsToResponse","isValid","invalidLevel","getFiasPostalCode","getAddressValue","Object","keys","reduce","value","name","fiasData","getValue","addressString","addressErrors","convertForVerification","VERIFIABLE_FIELDS","verifiableData","getDiffFields","filterVisibleFields","isEqualTo","hasError","prototype","hasOwnProperty","call","getError","IS_RUSSIA","FiasExtraFields","postalcode","rusFormat","foreignFormat","test","fiasPostalCode","district","intracityarea","planningstructure","ADDITIONAL_FIELDS","ALL_FIELDS","shortName","code","responseToFields","response","forEach","fiasObject","FiasData","FiasAddressElement","createFromResponse","createFromAddressValue","addressValue","addressField","createFromAddress","options","validate","locale","error","addressNotVerified","isPostalCodeValid","postalcodeNotValid","isPostalCodeAltered","postalcodeNotFound","verify","addressResponse","verifiedAddress","invalidField","removeFiasData","getChildFields","filteredFields","settings","visible","index","indexOf","addressFields","removeData","getAddress","api","searchOptions","searchText","limit","search","success"],"mappings":"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","sourcesContent":["import isEqual from 'lodash.isequal';\r\n\r\nimport { FiasLocale } from '../locale';\r\nimport {\r\n  FiasAddressErrors,\r\n  FiasAddressFields,\r\n  FiasAdditionalFields,\r\n  FiasVerifyResponse,\r\n  FiasAddressResponse,\r\n  FiasAddressValue,\r\n  FiasId,\r\n  FiasValue,\r\n  FiasFields,\r\n  FiasExtraFields,\r\n  FiasFieldsSettings,\r\n  FiasCountry,\r\n  FiasSearchOptions,\r\n  FiasAPIProvider,\r\n} from '../types';\r\n\r\nimport { FiasAddressElement } from './FiasAddressElement';\r\nimport { FiasData } from './FiasData';\r\n\r\nexport interface FiasAddressOptions {\r\n  fields?: FiasAddressFields;\r\n  additionalFields?: FiasAdditionalFields;\r\n  errors?: FiasAddressErrors;\r\n  country?: FiasCountry;\r\n  foreignAddress?: string;\r\n}\r\n\r\nexport class FiasAddress {\r\n  public static MAIN_FIELDS = [\r\n    FiasFields.region,\r\n    FiasFields.district,\r\n    FiasFields.city,\r\n    FiasFields.intracityarea,\r\n    FiasFields.settlement,\r\n    FiasFields.planningstructure,\r\n    FiasFields.street,\r\n    FiasFields.stead,\r\n    FiasFields.house,\r\n    FiasFields.room,\r\n  ];\r\n\r\n  public static ADDITIONAL_FIELDS = [FiasExtraFields.postalcode];\r\n\r\n  public static ALL_FIELDS = [...FiasAddress.MAIN_FIELDS, ...FiasAddress.ADDITIONAL_FIELDS];\r\n\r\n  public static VERIFIABLE_FIELDS = [\r\n    FiasFields.region,\r\n    FiasFields.district,\r\n    FiasFields.city,\r\n    FiasFields.intracityarea,\r\n    FiasFields.settlement,\r\n    FiasFields.planningstructure,\r\n    FiasFields.street,\r\n  ];\r\n\r\n  public static FULL_ADDRESS_SEARCH_FIELDS = [\r\n    FiasFields.district,\r\n    FiasFields.city,\r\n    FiasFields.intracityarea,\r\n    FiasFields.settlement,\r\n    FiasFields.planningstructure,\r\n    FiasFields.street,\r\n  ];\r\n\r\n  public static NOT_ONLY_DIRECT_PARENT_SEARCH_FIELDS = [\r\n    FiasFields.district,\r\n    FiasFields.city,\r\n    FiasFields.intracityarea,\r\n    FiasFields.settlement,\r\n    FiasFields.planningstructure,\r\n    FiasFields.street,\r\n  ];\r\n\r\n  public static IS_RUSSIA = (country: FiasCountry): boolean => {\r\n    return isEqual(country, {\r\n      shortName: 'Россия',\r\n      fullName: 'Российская Федерация',\r\n      code: '643',\r\n    });\r\n  };\r\n\r\n  public static responseToFields = (response: FiasAddressResponse): FiasAddressFields => {\r\n    const fields: FiasAddressFields = {};\r\n    if (response) {\r\n      FiasAddress.MAIN_FIELDS.forEach(field => {\r\n        const fiasObject = response[field];\r\n        if (fiasObject) {\r\n          const data: FiasData = new FiasData(fiasObject);\r\n          fields[field] = new FiasAddressElement(field, data.name, data);\r\n        }\r\n      });\r\n    }\r\n    return fields;\r\n  };\r\n\r\n  public static fieldsToResponse = (fields: FiasAddressFields): FiasAddressResponse => {\r\n    const response: FiasAddressResponse = {};\r\n    if (fields) {\r\n      FiasAddress.MAIN_FIELDS.forEach(field => {\r\n        const element = fields[field];\r\n        if (element && element.fiasData) {\r\n          response[field] = element.fiasData;\r\n        }\r\n      });\r\n    }\r\n    return response;\r\n  };\r\n\r\n  public static createFromResponse = (\r\n    response: FiasAddressResponse,\r\n    additionalFields?: FiasAdditionalFields,\r\n    country?: FiasCountry,\r\n  ) => {\r\n    return new FiasAddress({ fields: FiasAddress.responseToFields(response), additionalFields, country });\r\n  };\r\n\r\n  public static createFromAddressValue = (\r\n    addressValue: FiasAddressValue,\r\n    additionalFields?: FiasAdditionalFields,\r\n    country?: FiasCountry,\r\n  ) => {\r\n    const fields: FiasAddressFields = {};\r\n    if (addressValue) {\r\n      FiasAddress.MAIN_FIELDS.forEach(field => {\r\n        const addressField = addressValue[field];\r\n        if (addressField) {\r\n          const { name, data } = addressField;\r\n          fields[field] = new FiasAddressElement(field, name, data && new FiasData(data));\r\n        }\r\n      });\r\n    }\r\n    return new FiasAddress({ fields, additionalFields, country });\r\n  };\r\n\r\n  public static createFromAddress = (address: FiasAddress, options: FiasAddressOptions) => {\r\n    const { fields, additionalFields, errors, country, foreignAddress } = address;\r\n    return new FiasAddress({\r\n      fields,\r\n      additionalFields,\r\n      errors,\r\n      country,\r\n      foreignAddress,\r\n      ...options,\r\n    });\r\n  };\r\n\r\n  public static validate = (address: FiasAddress, locale: FiasLocale): FiasAddress => {\r\n    const { fields } = address;\r\n    const errors: FiasAddressErrors = {};\r\n\r\n    for (const field of FiasAddress.MAIN_FIELDS) {\r\n      const element = fields[field];\r\n      let error = '';\r\n\r\n      if (element) {\r\n        if (!element.data) {\r\n          error = locale.addressNotVerified;\r\n        }\r\n\r\n        if (!address.isAllowedToFill(field)) {\r\n          error = locale[`${field}FillBefore` as keyof FiasLocale];\r\n        }\r\n\r\n        if (error) {\r\n          errors[field] = error;\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    if (Object.keys(errors).length === 0) {\r\n      if (address.postalCode && !address.isPostalCodeValid) {\r\n        errors[FiasExtraFields.postalcode] = locale.postalcodeNotValid;\r\n      } else if (address.isPostalCodeAltered) {\r\n        errors[FiasExtraFields.postalcode] = locale.postalcodeNotFound;\r\n      }\r\n    }\r\n\r\n    return FiasAddress.createFromAddress(address, { errors });\r\n  };\r\n\r\n  public static verify = (address: FiasAddress, response: FiasVerifyResponse): FiasAddress => {\r\n    if (address.isEmpty) {\r\n      return address;\r\n    }\r\n\r\n    const { address: addressResponse, invalidLevel } = response;\r\n    const verifiedAddress = FiasAddress.createFromAddress(address, {\r\n      fields: {\r\n        ...address.fields,\r\n        ...FiasAddress.responseToFields(addressResponse),\r\n      },\r\n    });\r\n\r\n    const invalidField = invalidLevel || verifiedAddress.verifyConsistency().invalidLevel;\r\n\r\n    if (invalidField) {\r\n      return FiasAddress.removeFiasData(verifiedAddress, [invalidField, ...FiasAddress.getChildFields(invalidField)]);\r\n    }\r\n\r\n    return verifiedAddress;\r\n  };\r\n\r\n  // TODO: Hide invisible fields without removing them.\r\n  // (removing can break the verification)\r\n  public static filterVisibleFields = (\r\n    fields: { [key in FiasFields]?: any },\r\n    fieldsSettings: FiasFieldsSettings,\r\n  ): { [key in FiasFields]?: any } => {\r\n    const filteredFields: { [key in FiasFields]?: any } = {};\r\n    let field: FiasFields;\r\n    for (field in fields) {\r\n      if (FiasAddress.isFieldVisible(field, fieldsSettings)) {\r\n        filteredFields[field] = fields[field];\r\n      }\r\n    }\r\n    return filteredFields;\r\n  };\r\n\r\n  public static isFieldVisible = (field: FiasFields | FiasExtraFields, fieldsSettings: FiasFieldsSettings): boolean => {\r\n    const settings = fieldsSettings[field];\r\n    return Boolean(settings && settings.visible);\r\n  };\r\n\r\n  public static getParentFields = (field: FiasFields) => {\r\n    const index = FiasAddress.MAIN_FIELDS.indexOf(field);\r\n    return index > -1 ? FiasAddress.MAIN_FIELDS.slice(0, index) : [];\r\n  };\r\n\r\n  public static getChildFields = (field: FiasFields) => {\r\n    const index = FiasAddress.MAIN_FIELDS.indexOf(field);\r\n    return index > -1 ? FiasAddress.MAIN_FIELDS.slice(index + 1) : [];\r\n  };\r\n\r\n  public static removeFiasData = (\r\n    address: FiasAddress,\r\n    fields: FiasFields[] = FiasAddress.MAIN_FIELDS,\r\n  ): FiasAddress => {\r\n    const addressFields = { ...address.fields };\r\n    for (const field of fields) {\r\n      const element = addressFields[field];\r\n      if (element) {\r\n        element.removeData();\r\n      }\r\n    }\r\n    return FiasAddress.createFromAddress(address, { fields: addressFields });\r\n  };\r\n\r\n  public static getAddress = async (\r\n    api: FiasAPIProvider,\r\n    value?: Partial<FiasValue>,\r\n    fieldsSettings?: FiasFieldsSettings,\r\n  ) => {\r\n    if (!value) {\r\n      return new FiasAddress();\r\n    }\r\n\r\n    const { address, addressString, fiasId, postalCode, country, foreignAddress } = value;\r\n    const additionalFields: FiasAdditionalFields = {};\r\n    let searchOptions: FiasSearchOptions = {};\r\n\r\n    if (postalCode) {\r\n      additionalFields[FiasExtraFields.postalcode] = postalCode;\r\n    }\r\n\r\n    if (country && !FiasAddress.IS_RUSSIA(country)) {\r\n      return new FiasAddress({\r\n        country,\r\n        foreignAddress,\r\n        additionalFields: { [FiasExtraFields.postalcode]: postalCode },\r\n      });\r\n    }\r\n\r\n    if (address) {\r\n      const addressValue = fieldsSettings ? FiasAddress.filterVisibleFields(address, fieldsSettings) : address;\r\n      return FiasAddress.createFromAddressValue(addressValue, additionalFields, country);\r\n    }\r\n\r\n    if (fiasId) {\r\n      searchOptions = {\r\n        fiasId,\r\n      };\r\n    }\r\n\r\n    if (addressString) {\r\n      searchOptions = {\r\n        searchText: addressString,\r\n        limit: 1,\r\n      };\r\n    }\r\n\r\n    if (api) {\r\n      const { success, data } = await api.search(searchOptions);\r\n      if (success && data && data.length) {\r\n        const addressResponse = fieldsSettings ? FiasAddress.filterVisibleFields(data[0], fieldsSettings) : data[0];\r\n        return FiasAddress.createFromResponse(addressResponse, additionalFields, country);\r\n      }\r\n    }\r\n\r\n    return new FiasAddress({ country });\r\n  };\r\n\r\n  public fields: FiasAddressFields;\r\n  public additionalFields: FiasAdditionalFields;\r\n  public errors: FiasAddressErrors;\r\n  public country: FiasCountry | undefined;\r\n  public foreignAddress: string;\r\n\r\n  constructor({ fields, additionalFields, errors, country, foreignAddress }: FiasAddressOptions = {}) {\r\n    this.fields = fields || {};\r\n    this.additionalFields = additionalFields || {};\r\n    this.errors = errors || {};\r\n    this.country = country;\r\n    this.foreignAddress = foreignAddress || '';\r\n  }\r\n\r\n  public get isForeign(): boolean {\r\n    return Boolean(this.country && !FiasAddress.IS_RUSSIA(this.country));\r\n  }\r\n\r\n  public get isEmpty(): boolean {\r\n    return !FiasAddress.MAIN_FIELDS.some(field => Object.prototype.hasOwnProperty.call(this.fields, field));\r\n  }\r\n\r\n  public get hasErrors(): boolean {\r\n    return Object.keys(this.errors).length > 0;\r\n  }\r\n\r\n  public get postalCode(): string {\r\n    const value = this.additionalFields[FiasExtraFields.postalcode];\r\n    return typeof value === 'string' ? value : this.getFiasPostalCode();\r\n  }\r\n\r\n  public get isPostalCodeValid(): boolean {\r\n    const rusFormat = /^[\\d]{6}$/;\r\n    const foreignFormat = /^[\\w.\\-\\s]*$/;\r\n    return (!this.country || this.isForeign ? foreignFormat : rusFormat).test(this.postalCode);\r\n  }\r\n\r\n  public get isPostalCodeAltered(): boolean {\r\n    const fiasPostalCode = this.getFiasPostalCode();\r\n    return Boolean(fiasPostalCode) && this.postalCode !== fiasPostalCode;\r\n  }\r\n\r\n  public hasError(field: FiasFields | FiasExtraFields): boolean {\r\n    return Object.prototype.hasOwnProperty.call(this.errors, field);\r\n  }\r\n\r\n  public getError(field: FiasFields | FiasExtraFields): string | undefined {\r\n    return this.errors[field];\r\n  }\r\n\r\n  public getAddressErrors = () => {\r\n    return {\r\n      ...this.errors,\r\n    };\r\n  };\r\n\r\n  public getText = (minField?: FiasFields, skipTypes = false, connector = ', '): string => {\r\n    if (this.isEmpty) {\r\n      return '';\r\n    }\r\n    const getElementText = (element?: FiasAddressElement): string => {\r\n      return element ? element.getText(skipTypes) : '';\r\n    };\r\n    const fields = minField ? FiasAddress.getParentFields(minField) : FiasAddress.MAIN_FIELDS;\r\n    return fields\r\n      .map(field => getElementText(this.fields[field]))\r\n      .filter(Boolean)\r\n      .join(connector);\r\n  };\r\n\r\n  public getFullText = (withPostalCode = false) => {\r\n    const substrings: string[] = [];\r\n\r\n    if (withPostalCode) {\r\n      substrings.push(this.postalCode);\r\n    }\r\n\r\n    if (this.country) {\r\n      substrings.push(this.country.fullName);\r\n    }\r\n\r\n    substrings.push(this.isForeign ? this.foreignAddress : this.getText());\r\n\r\n    return substrings.filter(Boolean).join(', ');\r\n  };\r\n\r\n  public isAllowedToFill = (field: FiasFields): boolean => {\r\n    const { region, city, settlement, house } = this.fields;\r\n    const hasCityOrSettlement = city || settlement || (region && region.isFederalCity);\r\n    if (\r\n      (!hasCityOrSettlement &&\r\n        (field === FiasFields.street || field === FiasFields.stead || field === FiasFields.house)) ||\r\n      (!house && field === FiasFields.room)\r\n    ) {\r\n      return false;\r\n    }\r\n    return true;\r\n  };\r\n\r\n  public isAllowedToSearchFullAddress = (field: FiasFields): boolean => {\r\n    return FiasAddress.FULL_ADDRESS_SEARCH_FIELDS.includes(field);\r\n  };\r\n\r\n  // doesn't fully work on api side yet\r\n  // @see https://yt.skbkontur.ru/issue/PS-1401\r\n  public isAllowedToSearchThroughChildrenOfDirectParent = (\r\n    field: FiasFields,\r\n    fieldsSettings?: FiasFieldsSettings,\r\n  ): boolean => {\r\n    if (fieldsSettings) {\r\n      for (const parentField of FiasAddress.getParentFields(field)) {\r\n        if (!FiasAddress.isFieldVisible(parentField, fieldsSettings)) {\r\n          return false;\r\n        }\r\n      }\r\n    }\r\n    return FiasAddress.NOT_ONLY_DIRECT_PARENT_SEARCH_FIELDS.includes(field);\r\n  };\r\n\r\n  public hasOnlyIndirectParent = (field?: FiasFields): boolean => {\r\n    if (field) {\r\n      const parents = FiasAddress.getParentFields(field);\r\n      if (parents.length > 1) {\r\n        const directParent = this.fields[parents.pop() as FiasFields];\r\n        return !directParent && parents.some(parent => Boolean(this.fields[parent]));\r\n      }\r\n    }\r\n    return false;\r\n  };\r\n\r\n  public getClosestParentFiasId = (field: FiasFields): FiasId | undefined => {\r\n    if (!this.isEmpty) {\r\n      const parents = FiasAddress.getParentFields(field)\r\n        .slice()\r\n        .reverse();\r\n      for (const parentField of parents) {\r\n        const parent = this.fields[parentField];\r\n        if (parent) {\r\n          return parent.fiasId;\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  public getFiasId = (): FiasId => {\r\n    if (!this.isEmpty) {\r\n      const fields = FiasAddress.MAIN_FIELDS.slice().reverse();\r\n      for (const field of fields) {\r\n        const element = this.fields[field];\r\n        if (element && element.fiasId) {\r\n          return element.fiasId;\r\n        }\r\n      }\r\n    }\r\n    return '';\r\n  };\r\n\r\n  public getParent = (field: FiasFields): FiasAddressElement | undefined => {\r\n    if (this.fields[field]) {\r\n      const parents = FiasAddress.getParentFields(field).filter(f => Boolean(this.fields[f]));\r\n      const closest = parents.pop();\r\n      if (closest) {\r\n        return this.fields[closest];\r\n      }\r\n    }\r\n  };\r\n\r\n  public verifyConsistency = (): FiasVerifyResponse => {\r\n    const verifiedFields: FiasAddressFields = { ...this.fields };\r\n\r\n    for (const field of FiasAddress.MAIN_FIELDS) {\r\n      const element = this.fields[field];\r\n      if (element) {\r\n        if (element.data) {\r\n          const expectedParentFiasId = element.data.parentFiasId;\r\n          const parent = this.getParent(field);\r\n          if (!parent || parent.fiasId === expectedParentFiasId) {\r\n            verifiedFields[field] = element;\r\n            continue;\r\n          }\r\n        }\r\n        return {\r\n          address: FiasAddress.fieldsToResponse(verifiedFields),\r\n          isValid: false,\r\n          invalidLevel: field,\r\n        };\r\n      }\r\n    }\r\n    return {\r\n      address: FiasAddress.fieldsToResponse(verifiedFields),\r\n      isValid: true,\r\n    };\r\n  };\r\n\r\n  public getFiasPostalCode = (): string => {\r\n    if (!this.isEmpty) {\r\n      const fields = FiasAddress.MAIN_FIELDS.slice().reverse();\r\n      for (const field of fields) {\r\n        const element = this.fields[field];\r\n        if (element && element.data && element.data.postalCode) {\r\n          return element.data.postalCode;\r\n        }\r\n      }\r\n    }\r\n    return '';\r\n  };\r\n\r\n  public getAddressValue = (): FiasAddressValue => {\r\n    const fields = Object.keys(this.fields) as FiasFields[];\r\n    return fields.reduce((value, field) => {\r\n      const element = this.fields[field];\r\n      if (!element) {\r\n        return value;\r\n      }\r\n      const { name, fiasData } = element;\r\n      return {\r\n        ...value,\r\n        [field]: {\r\n          name,\r\n          ...(fiasData ? { data: fiasData } : {}),\r\n        },\r\n      };\r\n    }, {});\r\n  };\r\n\r\n  // TODO: get fields usage from fieldsSettings\r\n  public getValue = (withPostalCode = false): FiasValue => {\r\n    const { country, foreignAddress } = this;\r\n    return {\r\n      address: this.getAddressValue(),\r\n      addressString: this.getFullText(withPostalCode),\r\n      addressErrors: this.getAddressErrors(),\r\n      fiasId: this.getFiasId(),\r\n      postalCode: this.postalCode,\r\n      ...(country ? { country } : {}),\r\n      ...(this.isForeign ? { foreignAddress } : {}),\r\n    };\r\n  };\r\n\r\n  public convertForVerification = () => {\r\n    return FiasAddress.VERIFIABLE_FIELDS.reduce((value, field) => {\r\n      const element = this.fields[field];\r\n      if (!element) {\r\n        return value;\r\n      }\r\n      return {\r\n        ...value,\r\n        [field]: {\r\n          ...element.verifiableData,\r\n        },\r\n      };\r\n    }, {});\r\n  };\r\n\r\n  public getDiffFields = (address: FiasAddress, fieldsSettings?: FiasFieldsSettings): FiasAddressFields => {\r\n    const fields = fieldsSettings\r\n      ? FiasAddress.filterVisibleFields(address.fields, fieldsSettings)\r\n      : { ...address.fields };\r\n    for (const field of FiasAddress.MAIN_FIELDS) {\r\n      const element = fields[field];\r\n      if (element) {\r\n        if (element.isEqualTo(this.fields[field])) {\r\n          delete fields[field];\r\n        } else {\r\n          break;\r\n        }\r\n      }\r\n    }\r\n    return fields;\r\n  };\r\n}\r\n"]}