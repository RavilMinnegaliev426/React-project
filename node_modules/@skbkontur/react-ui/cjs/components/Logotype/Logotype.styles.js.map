{"version":3,"sources":["Logotype.styles.ts"],"names":["styles","root","t","css","logoColor","logoHoverColor","divider","tdDividerBg","cloud","inner","dropdown","inline","widgetWrapper","button","jsStyles"],"mappings":"8QAAA,oD;;;AAGA,IAAMA,MAAM,GAAG;AACbC,EAAAA,IADa,gBACRC,CADQ,EACE;AACb,eAAOC,YAAP;;;;;;;AAOWD,IAAAA,CAAC,CAACE,SAPb;;;AAUaF,IAAAA,CAAC,CAACG,cAVf;;;AAaD,GAfY;;AAiBbC,EAAAA,OAjBa,mBAiBLJ,CAjBK,EAiBK;AAChB,eAAOC,YAAP;;;;AAIsBD,IAAAA,CAAC,CAACK,WAJxB;;AAMD,GAxBY;;AA0BbC,EAAAA,KA1Ba,mBA0BL;AACN,eAAOL,YAAP;;;;;AAKD,GAhCY;;AAkCbM,EAAAA,KAlCa,mBAkCL;AACN,eAAON,YAAP;;;;;;;AAOD,GA1CY;;AA4CbO,EAAAA,QA5Ca,sBA4CF;AACT,eAAOP,YAAP;;;;;AAKD,GAlDY;;AAoDbQ,EAAAA,MApDa,oBAoDJ;AACP,eAAOR,YAAP;AACI,0BAAQH,MAAM,CAACU,QAAP,EAAR,CADJ;;;;AAKD,GA1DY;;AA4DbE,EAAAA,aA5Da,2BA4DG;AACd,eAAOT,YAAP;;;;AAID,GAjEY;;AAmEbU,EAAAA,MAnEa,oBAmEJ;AACP,eAAOV,YAAP;;;;;;;;;;;;;;;;AAgBD,GApFY,EAAf;;;AAuFO,IAAMW,QAAQ,GAAG,2BAAad,MAAb,CAAjB,C","sourcesContent":["import { css, cssName, memoizeStyle } from '../../lib/theming/Emotion';\r\nimport { Theme } from '../../lib/theming/Theme';\r\n\r\nconst styles = {\r\n  root(t: Theme) {\r\n    return css`\r\n      font-weight: 400;\r\n      text-decoration: none;\r\n      position: relative;\r\n      bottom: 2px;\r\n      outline: none;\r\n      user-select: none;\r\n      color: ${t.logoColor};\r\n\r\n      &:hover {\r\n        color: ${t.logoHoverColor};\r\n      }\r\n    `;\r\n  },\r\n\r\n  divider(t: Theme) {\r\n    return css`\r\n      height: 60%;\r\n      margin: 0 0 2px 15px;\r\n      width: 1px;\r\n      background-color: ${t.tdDividerBg};\r\n    `;\r\n  },\r\n\r\n  cloud() {\r\n    return css`\r\n      display: inline-block;\r\n      position: relative;\r\n      line-height: 0;\r\n    `;\r\n  },\r\n\r\n  inner() {\r\n    return css`\r\n      position: absolute;\r\n      top: 0;\r\n      right: 0;\r\n      bottom: 0;\r\n      left: 0;\r\n    `;\r\n  },\r\n\r\n  dropdown() {\r\n    return css`\r\n      height: 100%;\r\n      display: flex;\r\n      flex-wrap: nowrap;\r\n    `;\r\n  },\r\n\r\n  inline() {\r\n    return css`\r\n      ${cssName(styles.dropdown())}& {\r\n        display: inline-flex;\r\n      }\r\n    `;\r\n  },\r\n\r\n  widgetWrapper() {\r\n    return css`\r\n      display: flex;\r\n      align-items: center;\r\n    `;\r\n  },\r\n\r\n  button() {\r\n    return css`\r\n      display: flex;\r\n      align-items: center;\r\n      margin: 0;\r\n      cursor: pointer;\r\n      outline: 0;\r\n      padding: 0 10px;\r\n      position: relative;\r\n      background: none;\r\n      border: none;\r\n\r\n      &:hover,\r\n      &:focus {\r\n        background: rgba(0, 0, 0, 0.06);\r\n      }\r\n    `;\r\n  },\r\n};\r\n\r\nexport const jsStyles = memoizeStyle(styles);\r\n"]}