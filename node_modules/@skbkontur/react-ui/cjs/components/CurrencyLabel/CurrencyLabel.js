"use strict";var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");exports.__esModule = true;exports.CurrencyLabel = exports.defaultProps = void 0;var _react = _interopRequireDefault(require("react"));

var _constants = require("../CurrencyInput/constants");
var _CurrencyHelper = require("../CurrencyInput/CurrencyHelper");











var defaultProps = {
  fractionDigits: 2 };exports.defaultProps = defaultProps;


var CurrencyLabel = function CurrencyLabel(_ref) {var value = _ref.value,fractionDigits = _ref.fractionDigits,currencySymbol = _ref.currencySymbol;return (
    _react.default.createElement("span", null,
    _CurrencyHelper.CurrencyHelper.format(value, { fractionDigits: fractionDigits }),
    currencySymbol && String.fromCharCode(0xa0) /* &nbsp; */,
    currencySymbol));};exports.CurrencyLabel = CurrencyLabel;



CurrencyLabel.__KONTUR_REACT_UI__ = 'CurrencyLabel';

CurrencyLabel.defaultProps = defaultProps;

CurrencyLabel.propTypes = {
  fractionDigits: function fractionDigits(props) {
    if (props.fractionDigits > _constants.MAX_SAFE_DIGITS) {
      return new Error(
      "[CurrencyLabel]: Prop 'fractionDigits' exceeds " + _constants.MAX_SAFE_DIGITS + "." + "\nSee https://tech.skbkontur.ru/react-ui/#/CurrencyInput?id=why15");


    }var _ref2 =

    _CurrencyHelper.CurrencyHelper.destructString(String(props.value)) || { fraction: '' },fraction = _ref2.fraction;
    if (fraction.length > props.fractionDigits) {
      return new Error(
      "[CurrencyLabel]: Prop 'fractionDigits' less than fractional part of the 'value' property," + "'value' will not be cutted");


    }

    if (!Number.isInteger(props.fractionDigits)) {
      return new Error("[CurrencyLabel]: Prop 'fractionDigits' is not integer, fraction part of these property will not be used");


    }

    return null;
  } };