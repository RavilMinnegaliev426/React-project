{"version":3,"sources":["Token.tsx"],"names":["Token","theme","onRemoveClick","event","props","disabled","onRemove","emptyHandler","preventDefault","render","renderMain","children","isActive","colors","error","warning","onClick","onMouseEnter","onMouseLeave","onFocus","onBlur","validation","disableClassNames","jsTokenColors","defaultDisabled","defaultDisabledWarning","defaultDisabledError","tokenClassName","defaultIdle","activeTokenClassName","defaultActive","idle","activeClassName","active","tokenClassNames","jsStyles","token","text","removeIcon","React","Component","__KONTUR_REACT_UI__"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport cn from 'classnames';\r\n\r\nimport { CrossIcon } from '../../internal/icons/CrossIcon';\r\nimport { emptyHandler } from '../../lib/utils';\r\nimport { ThemeContext } from '../../lib/theming/ThemeContext';\r\nimport { Theme } from '../../lib/theming/Theme';\r\n\r\nimport { jsStyles, jsTokenColors } from './Token.styles';\r\n\r\nexport type TokenColorName = keyof typeof jsTokenColors;\r\n\r\nexport interface TokenColors {\r\n  idle: TokenColorName;\r\n  active?: TokenColorName;\r\n}\r\n\r\nexport interface TokenProps {\r\n  colors?: TokenColors;\r\n  isActive?: boolean;\r\n  error?: boolean;\r\n  warning?: boolean;\r\n  disabled?: boolean;\r\n\r\n  onClick?: React.MouseEventHandler<HTMLDivElement>;\r\n  onRemove?: React.MouseEventHandler<HTMLElement>;\r\n  onMouseEnter?: React.MouseEventHandler<HTMLDivElement>;\r\n  onMouseLeave?: React.MouseEventHandler<HTMLDivElement>;\r\n  onFocus?: React.FocusEventHandler<HTMLDivElement>;\r\n  onBlur?: React.FocusEventHandler<HTMLDivElement>;\r\n}\r\n\r\nexport class Token extends React.Component<TokenProps> {\r\n  public static __KONTUR_REACT_UI__ = 'Token';\r\n\r\n  private theme!: Theme;\r\n\r\n  public render() {\r\n    return (\r\n      <ThemeContext.Consumer>\r\n        {theme => {\r\n          this.theme = theme;\r\n          return this.renderMain();\r\n        }}\r\n      </ThemeContext.Consumer>\r\n    );\r\n  }\r\n\r\n  private renderMain() {\r\n    const {\r\n      children,\r\n      isActive,\r\n      colors,\r\n      error,\r\n      warning,\r\n      disabled,\r\n      onClick = emptyHandler,\r\n      onMouseEnter = emptyHandler,\r\n      onMouseLeave = emptyHandler,\r\n      onFocus = emptyHandler,\r\n      onBlur = emptyHandler,\r\n    } = this.props;\r\n\r\n    const theme = this.theme;\r\n    const validation = error ? 'error' : warning ? 'warning' : null;\r\n    const disableClassNames = cn(jsTokenColors.defaultDisabled(theme), {\r\n      [jsTokenColors.defaultDisabledWarning(theme)]: warning,\r\n      [jsTokenColors.defaultDisabledError(theme)]: error,\r\n    });\r\n\r\n    let tokenClassName = disabled ? disableClassNames : jsTokenColors.defaultIdle(theme, validation);\r\n    let activeTokenClassName = disabled ? disableClassNames : jsTokenColors.defaultActive(theme, validation);\r\n\r\n    if (!disabled && colors) {\r\n      tokenClassName = jsTokenColors[colors.idle](theme, validation);\r\n\r\n      const activeClassName = colors.active ? colors.active : colors.idle;\r\n      activeTokenClassName = jsTokenColors[activeClassName](theme, validation);\r\n    }\r\n\r\n    const tokenClassNames = cn(jsStyles.token(), tokenClassName, {\r\n      [activeTokenClassName]: !!isActive,\r\n      [jsStyles.disabled(theme)]: !!disabled,\r\n    });\r\n\r\n    return (\r\n      <div\r\n        className={tokenClassNames}\r\n        onClick={onClick}\r\n        onMouseEnter={onMouseEnter}\r\n        onMouseLeave={onMouseLeave}\r\n        onFocus={onFocus}\r\n        onBlur={onBlur}\r\n      >\r\n        <span className={jsStyles.text()}>{children}</span>\r\n        <span className={jsStyles.removeIcon()} onClick={this.onRemoveClick}>\r\n          <CrossIcon />\r\n        </span>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  private onRemoveClick = (event: React.MouseEvent<HTMLElement, MouseEvent>) => {\r\n    const { disabled, onRemove = emptyHandler } = this.props;\r\n\r\n    if (disabled) {\r\n      event.preventDefault();\r\n      return;\r\n    }\r\n\r\n    onRemove(event);\r\n  };\r\n}\r\n"]}