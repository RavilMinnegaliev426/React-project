{"version":3,"sources":["Hint.tsx"],"names":["HINT_BACKGROUND_COLOR","HINT_BORDER_COLOR","POPUP_MARGIN","PIN_OFFSET","Positions","Hint","state","opened","props","manual","timer","getPositions","filter","x","startsWith","pos","handleMouseEnter","e","window","setTimeout","open","onMouseEnter","handleMouseLeave","clearTimeout","setState","onMouseLeave","UNSAFE_componentWillReceiveProps","nextProps","componentWillUnmount","render","children","disableAnimations","useWrapper","renderContent","text","maxWidth","className","jsStyles","content","contentCenter","React","Component","__KONTUR_REACT_UI__","defaultProps","Boolean","process","env","enableReactTesting"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport cn from 'classnames';\r\n\r\nimport { Popup, PopupPosition } from '../../internal/Popup';\r\nimport { Nullable } from '../../typings/utility-types';\r\nimport { MouseEventType } from '../../typings/event-types';\r\n\r\nimport { jsStyles } from './Hint.styles';\r\n\r\nconst HINT_BACKGROUND_COLOR = 'rgba(51, 51, 51, 0.8)';\r\nconst HINT_BORDER_COLOR = 'transparent';\r\nconst POPUP_MARGIN = 15;\r\nconst PIN_OFFSET = 8;\r\n\r\nexport interface HintProps {\r\n  children?: React.ReactNode;\r\n  manual?: boolean;\r\n  maxWidth?: React.CSSProperties['maxWidth'];\r\n  onMouseEnter?: (event: MouseEventType) => void;\r\n  onMouseLeave?: (event: MouseEventType) => void;\r\n  opened?: boolean;\r\n  pos:\r\n    | 'top'\r\n    | 'right'\r\n    | 'bottom'\r\n    | 'left'\r\n    | 'top left'\r\n    | 'top center'\r\n    | 'top right'\r\n    | 'bottom left'\r\n    | 'bottom center'\r\n    | 'bottom right'\r\n    | 'left top'\r\n    | 'left middle'\r\n    | 'left bottom'\r\n    | 'right top'\r\n    | 'right middle'\r\n    | 'right bottom';\r\n  text: React.ReactNode;\r\n  disableAnimations: boolean;\r\n  useWrapper: boolean;\r\n}\r\n\r\nexport interface HintState {\r\n  opened: boolean;\r\n}\r\n\r\nconst Positions: PopupPosition[] = [\r\n  'top center',\r\n  'top left',\r\n  'top right',\r\n  'bottom center',\r\n  'bottom left',\r\n  'bottom right',\r\n  'left middle',\r\n  'left top',\r\n  'left bottom',\r\n  'right middle',\r\n  'right top',\r\n  'right bottom',\r\n];\r\n\r\nexport class Hint extends React.Component<HintProps, HintState> {\r\n  public static __KONTUR_REACT_UI__ = 'Hint';\r\n\r\n  public static defaultProps = {\r\n    pos: 'top',\r\n    manual: false,\r\n    opened: false,\r\n    maxWidth: 200,\r\n    disableAnimations: Boolean(process.env.enableReactTesting),\r\n    useWrapper: true,\r\n  };\r\n\r\n  public state: HintState = {\r\n    opened: this.props.manual ? !!this.props.opened : false,\r\n  };\r\n\r\n  private timer: Nullable<number> = null;\r\n\r\n  public UNSAFE_componentWillReceiveProps(nextProps: HintProps) {\r\n    if (!nextProps.manual) {\r\n      return;\r\n    }\r\n\r\n    if (nextProps.opened !== this.props.opened) {\r\n      this.setState({ opened: !!nextProps.opened });\r\n    }\r\n  }\r\n\r\n  public componentWillUnmount() {\r\n    if (this.timer) {\r\n      clearTimeout(this.timer);\r\n      this.timer = null;\r\n    }\r\n  }\r\n\r\n  public render() {\r\n    return (\r\n      <Popup\r\n        hasPin\r\n        margin={POPUP_MARGIN}\r\n        opened={this.state.opened}\r\n        anchorElement={this.props.children}\r\n        positions={this.getPositions()}\r\n        backgroundColor={HINT_BACKGROUND_COLOR}\r\n        borderColor={HINT_BORDER_COLOR}\r\n        disableAnimations={this.props.disableAnimations}\r\n        pinOffset={PIN_OFFSET}\r\n        onMouseEnter={this.handleMouseEnter}\r\n        onMouseLeave={this.handleMouseLeave}\r\n        useWrapper={this.props.useWrapper}\r\n      >\r\n        {this.renderContent()}\r\n      </Popup>\r\n    );\r\n  }\r\n\r\n  private renderContent() {\r\n    if (!this.props.text) {\r\n      return null;\r\n    }\r\n\r\n    const { pos, maxWidth } = this.props;\r\n    const className = cn({\r\n      [jsStyles.content()]: true,\r\n      [jsStyles.contentCenter()]: pos === 'top' || pos === 'bottom',\r\n    });\r\n    return (\r\n      <div className={className} style={{ maxWidth }}>\r\n        {this.props.text}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  private getPositions = (): PopupPosition[] => {\r\n    return Positions.filter(x => x.startsWith(this.props.pos));\r\n  };\r\n\r\n  private handleMouseEnter = (e: MouseEventType) => {\r\n    if (!this.props.manual && !this.timer) {\r\n      this.timer = window.setTimeout(this.open, 400);\r\n    }\r\n\r\n    if (this.props.onMouseEnter) {\r\n      this.props.onMouseEnter(e);\r\n    }\r\n  };\r\n\r\n  private handleMouseLeave = (e: MouseEventType) => {\r\n    if (!this.props.manual && this.timer) {\r\n      clearTimeout(this.timer);\r\n      this.timer = null;\r\n      this.setState({ opened: false });\r\n    }\r\n\r\n    if (this.props.onMouseLeave) {\r\n      this.props.onMouseLeave(e);\r\n    }\r\n  };\r\n\r\n  private open = () => {\r\n    this.setState({ opened: true });\r\n  };\r\n}\r\n"]}