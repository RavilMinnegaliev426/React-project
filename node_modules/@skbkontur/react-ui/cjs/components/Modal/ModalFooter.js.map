{"version":3,"sources":["ModalFooter.tsx"],"names":["ModalFooter","props","sticky","panel","children","theme","ThemeContext","scrollbarWidth","setScrollBarWidth","renderContent","fixed","jsStyles","footer","Boolean","fixedFooter","position","horizontalScroll","__KONTUR_REACT_UI__","__MODAL_FOOTER__"],"mappings":"qPAAA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;AAWA;;;;;AAKA,SAASA,WAAT,CAAqBC,KAArB,EAA8C;AACDA,EAAAA,KADC,CACpCC,MADoC,CACpCA,MADoC,8BAC3B,IAD2B,iBACrBC,KADqB,GACDF,KADC,CACrBE,KADqB,CACdC,QADc,GACDH,KADC,CACdG,QADc;AAE5C,MAAMC,KAAK,GAAG,uBAAWC,0BAAX,CAAd,CAF4C;AAGA,uBAAS,CAAT,CAHA,CAGrCC,cAHqC,gBAGrBC,iBAHqB;;AAK5C,wBAAU,YAAM;AACdA,IAAAA,iBAAiB,CAAC,qCAAD,CAAjB;AACD,GAFD,EAEG,EAFH;;AAIA,MAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACC,KAAD,eAACA,KAAD,cAACA,KAAD,GAAS,KAAT;AACpB;AACE,QAAA,SAAS,EAAE;AACRC,wBAASC,MAAT,EADQ,IACY,IADZ;AAERD,wBAASR,KAAT,CAAeE,KAAf,CAFQ,IAEgBQ,OAAO,CAACV,KAAD,CAFvB;AAGRQ,wBAASG,WAAT,CAAqBT,KAArB,CAHQ,IAGsBK,KAHtB,OADb;;;AAOGN,MAAAA,QAPH,CADoB,GAAtB;;;;AAYA;AACE,iCAAC,cAAD,IAAQ,KAAK,EAAE,EAAEW,QAAQ,EAAE,UAAZ,EAAf,EAAyC,QAAQ,EAAE,aAAnD;AACE,iCAAC,0BAAD,CAAc,QAAd;AACG,oBAA0B,KAAvBC,gBAAuB,QAAvBA,gBAAuB;AACzB,UAAId,MAAJ,EAAY;AACV;AACE,uCAAC,cAAD,IAAQ,IAAI,EAAC,QAAb,EAAsB,MAAM,EAAEc,gBAAgB,GAAGT,cAAH,GAAoB,CAAlE;AACGE,UAAAA,aADH,CADF;;;AAKD;;AAED,aAAOA,aAAa,EAApB;AACD,KAXH,CADF,CADF;;;;AAiBD;;AAEDT,WAAW,CAACiB,mBAAZ,GAAkC,aAAlC;AACAjB,WAAW,CAACkB,gBAAZ,GAA+B,IAA/B","sourcesContent":["import React, { ReactNode, useContext, useEffect, useState } from 'react';\r\nimport cn from 'classnames';\r\n\r\nimport { getScrollWidth } from '../../lib/dom/getScrollWidth';\r\nimport { Sticky } from '../Sticky';\r\nimport { ThemeContext } from '../../lib/theming/ThemeContext';\r\nimport { ZIndex } from '../../internal/ZIndex';\r\n\r\nimport { jsStyles } from './Modal.styles';\r\nimport { ModalContext } from './ModalContext';\r\n\r\nexport interface ModalFooterProps {\r\n  /**\r\n   * Включает серый цвет в футере\r\n   */\r\n  panel?: boolean;\r\n  sticky?: boolean;\r\n  children?: ReactNode;\r\n}\r\n\r\n/**\r\n * Футер модального окна.\r\n *\r\n * @visibleName Modal.Footer\r\n */\r\nfunction ModalFooter(props: ModalFooterProps) {\r\n  const { sticky = true, panel, children } = props;\r\n  const theme = useContext(ThemeContext);\r\n  const [scrollbarWidth, setScrollBarWidth] = useState(0);\r\n\r\n  useEffect(() => {\r\n    setScrollBarWidth(getScrollWidth());\r\n  }, []);\r\n\r\n  const renderContent = (fixed = false) => (\r\n    <div\r\n      className={cn({\r\n        [jsStyles.footer()]: true,\r\n        [jsStyles.panel(theme)]: Boolean(panel),\r\n        [jsStyles.fixedFooter(theme)]: fixed,\r\n      })}\r\n    >\r\n      {children}\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <ZIndex style={{ position: 'relative' }} priority={'ModalFooter'}>\r\n      <ModalContext.Consumer>\r\n        {({ horizontalScroll }) => {\r\n          if (sticky) {\r\n            return (\r\n              <Sticky side=\"bottom\" offset={horizontalScroll ? scrollbarWidth : 0}>\r\n                {renderContent}\r\n              </Sticky>\r\n            );\r\n          }\r\n\r\n          return renderContent();\r\n        }}\r\n      </ModalContext.Consumer>\r\n    </ZIndex>\r\n  );\r\n}\r\n\r\nModalFooter.__KONTUR_REACT_UI__ = 'ModalFooter';\r\nModalFooter.__MODAL_FOOTER__ = true;\r\n\r\nexport { ModalFooter };\r\n"]}