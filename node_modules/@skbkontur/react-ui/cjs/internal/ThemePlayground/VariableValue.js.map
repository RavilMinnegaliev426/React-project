{"version":3,"sources":["VariableValue.tsx"],"names":["emitter","EventEmitter","VariableValue","state","value","props","editing","subscription","inputInstance","debounceTimeout","debounceInterval","undefined","renderBaseVariableLink","baseVariables","jsStyles","baseVariableRoot","colorIcon","baseLinkWrapper","textAlign","map","v","emitClickEvent","handleEditLinkClick","renderInputWrapper","renderInput","renderRollbackIcon","inputRef","instance","background","setState","rollbackToBaseVariable","variable","emit","handleChange","window","setInterval","debounceHandler","onChange","clearInterval","handleBlur","emitterEventHandler","name","focus","render","theme","variableName","length","componentDidMount","remove","removeListener","componentDidUpdate","prevProps","componentWillUnmount","isColor","isError","linkRoot","React","Component","BaseVariableLink","baseVariable","color","style","Option","startsWith"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport EditIcon from '@skbkontur/react-icons/Edit';\r\nimport DeleteIcon from '@skbkontur/react-icons/Delete';\r\nimport EventEmitter from 'eventemitter3';\r\n\r\nimport { Input } from '../../components/Input';\r\nimport { Gapped } from '../../components/Gapped';\r\nimport { Theme } from '../../lib/theming/Theme';\r\nimport { Link } from '../../components/Link';\r\nimport { Hint } from '../../components/Hint';\r\nimport { isFunction } from '../../lib/utils';\r\n\r\nimport { jsStyles } from './Playground.styles';\r\n\r\nconst emitter = new EventEmitter();\r\n\r\nexport interface VariableValueProps {\r\n  onChange: (variable: keyof Theme, value: string) => void;\r\n  value: string;\r\n  isError: boolean;\r\n  variable: string;\r\n  theme: Theme;\r\n  baseVariables: Array<keyof Theme>;\r\n}\r\n\r\nexport interface VariableValueState {\r\n  value: string;\r\n  editing: boolean;\r\n}\r\n\r\nexport class VariableValue extends React.Component<VariableValueProps, VariableValueState> {\r\n  public state = {\r\n    value: this.props.value,\r\n    editing: false,\r\n  };\r\n  private subscription: { remove: () => void } | null = null;\r\n  private inputInstance: Input | null = null;\r\n  private readonly debounceTimeout = 500;\r\n  private debounceInterval: number | undefined = undefined;\r\n\r\n  public render() {\r\n    const { variable, theme, baseVariables } = this.props;\r\n    return (\r\n      <Gapped gap={30}>\r\n        <div className={jsStyles.variableName(theme)} title={variable}>{`${variable}: `}</div>\r\n        {baseVariables.length > 0 && !this.state.editing ? this.renderBaseVariableLink() : this.renderInputWrapper()}\r\n      </Gapped>\r\n    );\r\n  }\r\n\r\n  public componentDidMount(): void {\r\n    if (!this.subscription) {\r\n      this.subscription = {\r\n        remove: () => {\r\n          emitter.removeListener('clicked', this.emitterEventHandler);\r\n        },\r\n      };\r\n    }\r\n  }\r\n\r\n  public componentDidUpdate(prevProps: VariableValueProps) {\r\n    if (prevProps.value !== this.props.value) {\r\n      this.setState({ value: this.props.value });\r\n    }\r\n  }\r\n\r\n  public componentWillUnmount(): void {\r\n    if (this.subscription) {\r\n      this.subscription.remove();\r\n    }\r\n    if (this.debounceInterval !== undefined) {\r\n      clearInterval(this.debounceInterval);\r\n    }\r\n  }\r\n\r\n  private renderBaseVariableLink = () => {\r\n    const baseVariables = this.props.baseVariables;\r\n    return (\r\n      <div className={jsStyles.baseVariableRoot()}>\r\n        {this.colorIcon()}\r\n        <div className={jsStyles.baseLinkWrapper()}>\r\n          <Gapped>\r\n            <div style={{ textAlign: 'right' }}>\r\n              <Gapped vertical>\r\n                {baseVariables.map(v => (\r\n                  <BaseVariableLink key={v} baseVariable={v} emitClickEvent={this.emitClickEvent} />\r\n                ))}\r\n              </Gapped>\r\n            </div>\r\n            <Hint text={'Изменить значение'}>\r\n              <Link icon={<EditIcon />} onClick={this.handleEditLinkClick} />\r\n            </Hint>\r\n          </Gapped>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  private renderInputWrapper = () => {\r\n    return this.state.editing ? (\r\n      <Gapped>\r\n        {this.renderInput()}\r\n        {this.renderRollbackIcon()}\r\n      </Gapped>\r\n    ) : (\r\n      this.renderInput()\r\n    );\r\n  };\r\n\r\n  private renderInput() {\r\n    return (\r\n      <Input\r\n        leftIcon={isColor(this.state.value) && this.colorIcon()}\r\n        value={this.state.value}\r\n        onValueChange={this.handleChange}\r\n        onBlur={this.handleBlur}\r\n        align={'right'}\r\n        width={this.state.editing ? 225 : undefined}\r\n        ref={this.inputRef}\r\n        error={this.props.isError}\r\n      />\r\n    );\r\n  }\r\n\r\n  private renderRollbackIcon() {\r\n    return (\r\n      <Hint text={'Вернуться к базовой переменной'} pos={'left'}>\r\n        <div className={jsStyles.linkRoot()}>\r\n          <Link icon={<DeleteIcon />} onClick={this.rollbackToBaseVariable} />\r\n        </div>\r\n      </Hint>\r\n    );\r\n  }\r\n\r\n  private inputRef = (instance: Input) => {\r\n    this.inputInstance = instance;\r\n  };\r\n\r\n  private colorIcon = () => {\r\n    return <div className={jsStyles.colorIcon()} style={{ background: this.state.value }} />;\r\n  };\r\n\r\n  private handleEditLinkClick = () => {\r\n    this.setState({\r\n      editing: true,\r\n    });\r\n  };\r\n\r\n  private rollbackToBaseVariable = () => {\r\n    this.setState({\r\n      editing: false,\r\n      value: this.props.value,\r\n    });\r\n  };\r\n\r\n  private emitClickEvent = (variable: string | number) => {\r\n    emitter.emit('clicked', variable);\r\n  };\r\n\r\n  private handleChange = (value: string) => {\r\n    this.setState({\r\n      value,\r\n    });\r\n\r\n    if (this.debounceInterval === undefined) {\r\n      this.debounceInterval = window.setInterval(this.debounceHandler, this.debounceTimeout);\r\n    }\r\n  };\r\n\r\n  private debounceHandler = () => {\r\n    const { variable, onChange } = this.props;\r\n\r\n    onChange(variable as keyof Theme, this.state.value);\r\n    clearInterval(this.debounceInterval);\r\n    this.debounceInterval = undefined;\r\n  };\r\n\r\n  private handleBlur = () => {\r\n    this.setState({\r\n      editing: false,\r\n    });\r\n  };\r\n\r\n  private emitterEventHandler = (name: keyof Theme) => {\r\n    if (name === this.props.variable && this.inputInstance) {\r\n      this.inputInstance.focus();\r\n    }\r\n  };\r\n}\r\n\r\ninterface BaseVariableLinkProps {\r\n  baseVariable: string | number;\r\n  emitClickEvent: (baseVariable: string | number) => void;\r\n}\r\nclass BaseVariableLink extends React.Component<BaseVariableLinkProps> {\r\n  public render() {\r\n    return <Link onClick={this.emitClickEvent}>{this.props.baseVariable}</Link>;\r\n  }\r\n  private emitClickEvent = () => {\r\n    this.props.emitClickEvent(this.props.baseVariable);\r\n  };\r\n}\r\n\r\nfunction isColor(color: string | (() => string)) {\r\n  if (isFunction(color)) {\r\n    color = color();\r\n  }\r\n  const style = new Option().style;\r\n  style.color = color;\r\n\r\n  return (\r\n    !!color && (color.startsWith('#') || color.startsWith('rgb') || color.startsWith('hsl') || style.color === color)\r\n  );\r\n}\r\n"]}