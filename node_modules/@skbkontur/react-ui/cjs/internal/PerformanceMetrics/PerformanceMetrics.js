"use strict";var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");exports.__esModule = true;exports.PerformanceMetrics = PerformanceMetrics;var _inheritsLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/inheritsLoose"));var _react = _interopRequireDefault(require("react"));
var _reactDom = _interopRequireDefault(require("react-dom"));

var _Button = require("../../components/Button");

var _Spinner = require("../../components/Spinner");

var PANEL_WRAPPER_STYLES = { width: '45%', display: 'inline-block', verticalAlign: 'top' };






function PerformanceMetrics(props) {
  return (
    _react.default.createElement("div", { style: { padding: 10, width: 1200 } },
    _react.default.createElement("div", { style: { position: 'absolute' } },
    _react.default.createElement(_Spinner.Spinner, { type: 'mini', caption: '' })),

    _react.default.createElement("div", { style: { padding: 10 } },
    _react.default.createElement("div", { style: PANEL_WRAPPER_STYLES },
    _react.default.createElement(PerformanceMetricsPanel, { title: 'Case A', component: props.componentsA })),

    _react.default.createElement("div", { style: PANEL_WRAPPER_STYLES },
    _react.default.createElement(PerformanceMetricsPanel, { title: 'Case B', component: props.componentsB })))));




}var









PerformanceMetricsPanel = /*#__PURE__*/function (_React$Component) {(0, _inheritsLoose2.default)(PerformanceMetricsPanel, _React$Component);function PerformanceMetricsPanel() {var _this;for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {args[_key] = arguments[_key];}_this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;_this.
    state = {
      mounted: false };_this.

    container = void 0;_this.
































    setContainerRef = function (element) {
      _this.container = element;
    };_this.

    toggleMountedState = function () {
      _this.setState({
        mounted: !_this.state.mounted });

    };return _this;}var _proto = PerformanceMetricsPanel.prototype;_proto.render = function render() {return _react.default.createElement("div", null, _react.default.createElement("h1", { style: { lineHeight: '2em' } }, this.props.title), _react.default.createElement("div", { style: { marginBottom: 10 } }, _react.default.createElement(_Button.Button, { onClick: this.toggleMountedState, size: 'small' }, this.state.mounted ? 'Unmount' : 'Mount')), _react.default.createElement("div", { ref: this.setContainerRef }));};_proto.componentDidMount = function componentDidMount() {if (this.state.mounted && this.container) {_reactDom.default.render(this.props.component, this.container);}};_proto.componentDidUpdate = function componentDidUpdate() {if (!this.container) {return;}if (this.state.mounted) {_reactDom.default.render(this.props.component, this.container);} else {_reactDom.default.unmountComponentAtNode(this.container);}};return PerformanceMetricsPanel;}(_react.default.Component);