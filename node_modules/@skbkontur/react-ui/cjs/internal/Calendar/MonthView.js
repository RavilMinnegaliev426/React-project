"use strict";var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");exports.__esModule = true;exports.MonthView = MonthView;var _react = _interopRequireWildcard(require("react"));
var _classnames = _interopRequireDefault(require("classnames"));

var _DateSelect = require("../DateSelect");
var _ThemeContext = require("../../lib/theming/ThemeContext");
var ColorFunctions = _interopRequireWildcard(require("../../lib/styles/ColorFunctions"));

var _MonthView = require("./MonthView.styles");
var _config = require("./config");
var CDS = _interopRequireWildcard(require("./CalendarDateShape"));


















function MonthView(props) {var _cn;
  var theme = (0, _react.useContext)(_ThemeContext.ThemeContext);var


  children =












  props.children,height = props.height,isFirstInYear = props.isFirstInYear,isLastInYear = props.isLastInYear,maxDate = props.maxDate,minDate = props.minDate,month = props.month,top = props.top,year = props.year,onMonthSelect = props.onMonthSelect,onYearSelect = props.onYearSelect,monthSelectRef = props.monthSelectRef,yearSelectRef = props.yearSelectRef;

  var isTopNegative = top <= 0;
  var isHeaderSticky = isTopNegative && height >= -top;
  var headerTop = isHeaderSticky ? Math.min(-top, height - _config.config.MONTH_TITLE_HEIGHT) : 0;
  var alpha = isHeaderSticky ? (height + top - _config.config.MONTH_TITLE_HEIGHT) / 10 : 1;
  var borderBottomColor = ColorFunctions.fade(theme.calendarMonthTitleBorderBottomColor, alpha);
  var isYearVisible = isFirstInYear || isHeaderSticky;
  var yearTop = isHeaderSticky && !isLastInYear ? -headerTop - top : 0;
  var monthSelectDisabled = top > 40 || headerTop < 0 || headerTop >= height - _config.config.MONTH_TITLE_HEIGHT;
  var yearSelectDisabled = top > 40 || isLastInYear && top < -height + _config.config.MONTH_TITLE_HEIGHT;

  var getMinMonth = function getMinMonth(value) {
    var min = 0;
    for (var i = 0; i < 12; ++i) {
      if (minDate && CDS.isGreaterOrEqual({ date: 31, month: i, year: value }, minDate)) {
        min = i;
        break;
      }
    }
    return min;
  };

  var getMaxMonth = function getMaxMonth(value) {
    var max = 11;
    for (var i = 11; i >= 0; --i) {
      if (maxDate && CDS.isLessOrEqual({ date: 1, month: i, year: value }, maxDate)) {
        max = i;
        break;
      }
    }
    return max;
  };

  return (
    _react.default.createElement("div", { "data-tid": "MonthView__month", className: _MonthView.jsStyles.month(), style: { top: top }, key: month + '-' + year },
    _react.default.createElement("div", {
      style: { lineHeight: _config.config.MONTH_TITLE_HEIGHT + "px", top: headerTop, borderBottomColor: borderBottomColor },
      className: (0, _classnames.default)((_cn = {}, _cn[
      _MonthView.jsStyles.monthTitle(theme)] = true, _cn[
      _MonthView.jsStyles.headerSticky(theme)] = isHeaderSticky, _cn)) },


    _react.default.createElement("div", { "data-tid": "MonthView__headerMonth", className: _MonthView.jsStyles.headerMonth() },
    _react.default.createElement(_DateSelect.DateSelect, {
      disabled: monthSelectDisabled,
      width: 85,
      type: "month",
      value: month,
      onValueChange: onMonthSelect,
      ref: !monthSelectDisabled ? monthSelectRef : undefined,
      minValue: getMinMonth(year),
      maxValue: getMaxMonth(year) })),


    isYearVisible &&
    _react.default.createElement("div", { "data-tid": "MonthView__headerYear", className: _MonthView.jsStyles.headerYear(), style: { top: yearTop } },
    _react.default.createElement(_DateSelect.DateSelect, {
      disabled: yearSelectDisabled,
      width: 50,
      type: "year",
      value: year,
      minValue: minDate ? minDate.year : undefined,
      maxValue: maxDate ? maxDate.year : undefined,
      onValueChange: onYearSelect,
      ref: !yearSelectDisabled ? yearSelectRef : undefined }))),




    children));


}