{"version":3,"sources":["CalendarUtils.ts"],"names":["calculateScrollPosition","months","scrollPosition","deltaY","scrollDirection","nextScrollPosition","nextMonths","firstMonth","height","getMonths","month","year","lastMonth","length","applyDelta","minDate","maxDate","isMinDateExceeded","isMaxDateExceeded","isMonthVisible","top","config","WRAPPER_HEIGHT","getMonthsHeight","reduce","a","b","map","x","MonthViewModel","create"],"mappings":"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","sourcesContent":["import { config } from './config';\r\nimport { MonthViewModel } from './MonthViewModel';\r\nimport { CalendarProps, CalendarState } from './Calendar';\r\n\r\nexport const calculateScrollPosition = (months: MonthViewModel[], scrollPosition: number, deltaY: number) => {\r\n  const scrollDirection = deltaY > 0 ? 1 : -1;\r\n\r\n  let nextScrollPosition = scrollPosition - deltaY;\r\n  let nextMonths = months;\r\n\r\n  const firstMonth = months[0];\r\n  if (scrollDirection < 0 && nextScrollPosition >= firstMonth.height) {\r\n    do {\r\n      nextScrollPosition -= nextMonths[0].height;\r\n      nextMonths = getMonths(firstMonth.month, firstMonth.year);\r\n    } while (nextScrollPosition >= nextMonths[0].height);\r\n  }\r\n\r\n  const lastMonth = months[months.length - 1];\r\n  if (scrollDirection > 0 && nextScrollPosition < 0) {\r\n    do {\r\n      nextScrollPosition += nextMonths[1].height;\r\n      nextMonths = getMonths(lastMonth.month, lastMonth.year);\r\n    } while (nextScrollPosition < 0);\r\n  }\r\n\r\n  return {\r\n    scrollPosition: nextScrollPosition,\r\n    months: nextMonths,\r\n    scrollDirection,\r\n  };\r\n};\r\n\r\nexport const applyDelta = (deltaY: number) => (\r\n  { scrollPosition, months }: Readonly<CalendarState>,\r\n  { minDate, maxDate }: CalendarProps,\r\n) => {\r\n  const scrollDirection = deltaY > 0 ? 1 : -1;\r\n  const isMinDateExceeded =\r\n    minDate && scrollDirection < 0 && minDate.year * 12 + minDate.month > months[0].year * 12 + months[0].month;\r\n\r\n  const isMaxDateExceeded =\r\n    maxDate && scrollDirection > 0 && maxDate.year * 12 + maxDate.month < months[1].year * 12 + months[1].month;\r\n\r\n  if (isMinDateExceeded) {\r\n    return { scrollPosition: 0, scrollDirection };\r\n  }\r\n\r\n  if (isMaxDateExceeded) {\r\n    return { scrollPosition: months[2].height, scrollDirection };\r\n  }\r\n\r\n  return calculateScrollPosition(months, scrollPosition, deltaY);\r\n};\r\n\r\nexport const isMonthVisible = (top: number, month: MonthViewModel) => {\r\n  return top < config.WRAPPER_HEIGHT && top > -month.height;\r\n};\r\n\r\nexport const getMonthsHeight = (months: MonthViewModel[]) => months.reduce((a, b) => a + b.height, 0);\r\n\r\nexport const getMonths = (month: number, year: number): MonthViewModel[] => {\r\n  return [-1, 0, 1].map(x => MonthViewModel.create(month + x, year));\r\n};\r\n"]}