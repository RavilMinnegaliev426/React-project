{"version":3,"sources":["DayCellView.tsx"],"names":["size","config","DAY_HEIGHT","cellStyle","width","height","lineHeight","borderRadius","DayCellView","props","date","minDate","maxDate","today","value","isWeekend","onDateClick","theme","ThemeContext","handleClick","month","year","CDS","isBetween","jsStyles","cell","Boolean","isEqual","selected","weekend"],"mappings":"qPAAA;AACA;;;AAGA;;AAEA;AACA;AACA;;;;;;;;;;;;AAYA,IAAMA,IAAI,GAAGC,eAAOC,UAApB;;AAEA,IAAMC,SAAS,GAAG;AAChBC,EAAAA,KAAK,EAAEJ,IADS;AAEhBK,EAAAA,MAAM,EAAEL,IAFQ;AAGhBM,EAAAA,UAAU,EAAEN,IAAI,GAAG,CAAP,GAAW,IAHP;AAIhBO,EAAAA,YAAY,EAAEP,IAAI,GAAG,CAJL,EAAlB;;;AAOO,SAASQ,WAAT,CAAqBC,KAArB,EAA8C;AAC3CC,EAAAA,IAD2C,GACsBD,KADtB,CAC3CC,IAD2C,CACrCC,OADqC,GACsBF,KADtB,CACrCE,OADqC,CAC5BC,OAD4B,GACsBH,KADtB,CAC5BG,OAD4B,CACnBC,KADmB,GACsBJ,KADtB,CACnBI,KADmB,CACZC,KADY,GACsBL,KADtB,CACZK,KADY,CACLC,SADK,GACsBN,KADtB,CACLM,SADK,CACMC,WADN,GACsBP,KADtB,CACMO,WADN;AAEnD,MAAMC,KAAK,GAAG,uBAAWC,0BAAX,CAAd;;AAEA,MAAMC,WAAW,GAAG,SAAdA,WAAc,GAAM;AACMV,IAAAA,KAAK,CAACC,IADZ,CAChBA,IADgB,eAChBA,IADgB,CACVU,KADU,eACVA,KADU,CACHC,IADG,eACHA,IADG;AAExBL,IAAAA,WAAW,QAAX,YAAAA,WAAW,CAAG,EAAEN,IAAI,EAAJA,IAAF,EAAQU,KAAK,EAALA,KAAR,EAAeC,IAAI,EAAJA,IAAf,EAAH,CAAX;AACD,GAHD;;AAKA;AACE;AACE,MAAA,KAAK,EAAElB,SADT;AAEE,MAAA,QAAQ,EAAE,CAAC,CAFb;AAGE,MAAA,QAAQ,EAAE,CAACmB,GAAG,CAACC,SAAJ,CAAcb,IAAd,EAAoBC,OAApB,EAA6BC,OAA7B,CAHb;AAIE,MAAA,SAAS,EAAE;AACRY,4BAASC,IAAT,CAAcR,KAAd,CADQ,IACe,IADf;AAERO,4BAASX,KAAT,CAAeI,KAAf,CAFQ,IAEgBS,OAAO,CAACb,KAAK,IAAIS,GAAG,CAACK,OAAJ,CAAYjB,IAAZ,EAAkBG,KAAlB,CAAV,CAFvB;AAGRW,4BAASI,QAAT,CAAkBX,KAAlB,CAHQ,IAGmBS,OAAO,CAACZ,KAAK,IAAIQ,GAAG,CAACK,OAAJ,CAAYjB,IAAZ,EAAkBI,KAAlB,CAAV,CAH1B;AAIRU,4BAASK,OAAT,CAAiBZ,KAAjB,CAJQ,IAIkBS,OAAO,CAACX,SAAD,CAJzB,OAJb;;AAUE,MAAA,OAAO,EAAEI,WAVX;;AAYGT,IAAAA,IAAI,CAACA,IAZR,CADF;;;AAgBD","sourcesContent":["import React, { useContext } from 'react';\r\nimport cn from 'classnames';\r\n\r\nimport { Nullable } from '../../typings/utility-types';\r\nimport { ThemeContext } from '../../lib/theming/ThemeContext';\r\n\r\nimport * as CDS from './CalendarDateShape';\r\nimport { config } from './config';\r\nimport { jsStyles } from './DayCellView.styles';\r\n\r\ninterface DayCellViewProps {\r\n  date: CDS.CalendarDateShape;\r\n  today?: CDS.CalendarDateShape;\r\n  value?: Nullable<CDS.CalendarDateShape>;\r\n  minDate?: CDS.CalendarDateShape;\r\n  maxDate?: CDS.CalendarDateShape;\r\n  onDateClick?: (day: CDS.CalendarDateShape) => void;\r\n  isWeekend?: boolean;\r\n}\r\n\r\nconst size = config.DAY_HEIGHT;\r\n\r\nconst cellStyle = {\r\n  width: size,\r\n  height: size,\r\n  lineHeight: size - 2 + 'px',\r\n  borderRadius: size / 2,\r\n};\r\n\r\nexport function DayCellView(props: DayCellViewProps) {\r\n  const { date, minDate, maxDate, today, value, isWeekend, onDateClick } = props;\r\n  const theme = useContext(ThemeContext);\r\n\r\n  const handleClick = () => {\r\n    const { date, month, year } = props.date;\r\n    onDateClick?.({ date, month, year });\r\n  };\r\n\r\n  return (\r\n    <button\r\n      style={cellStyle}\r\n      tabIndex={-1}\r\n      disabled={!CDS.isBetween(date, minDate, maxDate)}\r\n      className={cn({\r\n        [jsStyles.cell(theme)]: true,\r\n        [jsStyles.today(theme)]: Boolean(today && CDS.isEqual(date, today)),\r\n        [jsStyles.selected(theme)]: Boolean(value && CDS.isEqual(date, value)),\r\n        [jsStyles.weekend(theme)]: Boolean(isWeekend),\r\n      })}\r\n      onClick={handleClick}\r\n    >\r\n      {date.date}\r\n    </button>\r\n  );\r\n}\r\n"]}