"use strict";exports.__esModule = true;exports.MonthViewModel = void 0;var _memo = require("../../lib/memo");

var _config = require("./config");
var _DayCellViewModel = require("./DayCellViewModel");var

MonthViewModel =














// FIXME: shouldbe readonly


// FIXME: shouldbe readonly


function MonthViewModel(month, year) {this.daysCount = void 0;this.offset = void 0;this.month = void 0;this.year = void 0;this.height = void 0;this.days = void 0;this.isLastInYear = void 0;this.isFirstInYear = void 0;
  if (month < 0) {
    year -= Math.ceil(-month / 12);
    month = 12 + month % 12;
  }
  if (month > 11) {
    year += Math.floor(month / 12);
    month %= 12;
  }
  var daysCount = getMonthsDays(month, year);
  var offset = getMonthOffset(month, year);
  this.daysCount = daysCount;
  this.offset = offset;
  this.month = month;
  this.year = year;
  this.height = getMonthHeight(daysCount, offset);
  this.isLastInYear = month === 11;
  this.isFirstInYear = month === 0;
  this.days = Array.from({ length: daysCount }, function (_, i) {
    var isWeekend = (i + getMonthOffset(month, year)) % 7 >= 5;
    return _DayCellViewModel.DayCellViewModel.create(i + 1, month, year, isWeekend);
  });
};exports.MonthViewModel = MonthViewModel;MonthViewModel.create = (0, _memo.memo)(function (month, year) {return new MonthViewModel(month, year);});


var getMonthHeight = (0, _memo.memo)(
function (daysCount, offset) {return (
    Math.ceil((daysCount + offset) / 7) * _config.config.DAY_HEIGHT +
    _config.config.MONTH_TITLE_OFFSET_HEIGHT +
    _config.config.MONTH_BOTTOM_MARGIN);});


var getMonthsDays = (0, _memo.memo)(function (month, year) {return new Date(year, month + 1, 0).getDate();});

var getMonthOffset = (0, _memo.memo)(function (month, year) {
  var day = new Date(year, month, 1).getDay() - 1;
  if (day === -1) {
    return 6;
  }
  return day;
});