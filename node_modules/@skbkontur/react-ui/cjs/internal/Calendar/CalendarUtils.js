"use strict";exports.__esModule = true;exports.getMonths = exports.getMonthsHeight = exports.isMonthVisible = exports.applyDelta = exports.calculateScrollPosition = void 0;var _config = require("./config");
var _MonthViewModel = require("./MonthViewModel");


var calculateScrollPosition = function calculateScrollPosition(months, scrollPosition, deltaY) {
  var scrollDirection = deltaY > 0 ? 1 : -1;

  var nextScrollPosition = scrollPosition - deltaY;
  var nextMonths = months;

  var firstMonth = months[0];
  if (scrollDirection < 0 && nextScrollPosition >= firstMonth.height) {
    do {
      nextScrollPosition -= nextMonths[0].height;
      nextMonths = getMonths(firstMonth.month, firstMonth.year);
    } while (nextScrollPosition >= nextMonths[0].height);
  }

  var lastMonth = months[months.length - 1];
  if (scrollDirection > 0 && nextScrollPosition < 0) {
    do {
      nextScrollPosition += nextMonths[1].height;
      nextMonths = getMonths(lastMonth.month, lastMonth.year);
    } while (nextScrollPosition < 0);
  }

  return {
    scrollPosition: nextScrollPosition,
    months: nextMonths,
    scrollDirection: scrollDirection };

};exports.calculateScrollPosition = calculateScrollPosition;

var applyDelta = function applyDelta(deltaY) {return function (_ref, _ref2)


  {var scrollPosition = _ref.scrollPosition,months = _ref.months;var minDate = _ref2.minDate,maxDate = _ref2.maxDate;
    var scrollDirection = deltaY > 0 ? 1 : -1;
    var isMinDateExceeded =
    minDate && scrollDirection < 0 && minDate.year * 12 + minDate.month > months[0].year * 12 + months[0].month;

    var isMaxDateExceeded =
    maxDate && scrollDirection > 0 && maxDate.year * 12 + maxDate.month < months[1].year * 12 + months[1].month;

    if (isMinDateExceeded) {
      return { scrollPosition: 0, scrollDirection: scrollDirection };
    }

    if (isMaxDateExceeded) {
      return { scrollPosition: months[2].height, scrollDirection: scrollDirection };
    }

    return calculateScrollPosition(months, scrollPosition, deltaY);
  };};exports.applyDelta = applyDelta;

var isMonthVisible = function isMonthVisible(top, month) {
  return top < _config.config.WRAPPER_HEIGHT && top > -month.height;
};exports.isMonthVisible = isMonthVisible;

var getMonthsHeight = function getMonthsHeight(months) {return months.reduce(function (a, b) {return a + b.height;}, 0);};exports.getMonthsHeight = getMonthsHeight;

var getMonths = function getMonths(month, year) {
  return [-1, 0, 1].map(function (x) {return _MonthViewModel.MonthViewModel.create(month + x, year);});
};exports.getMonths = getMonths;