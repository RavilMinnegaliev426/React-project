{"version":3,"sources":["ResizeDetector.tsx"],"names":["ResizeDetector","iframeWindow","handleResize","event","props","onResize","iframeRef","iframe","contentWindow","componentDidMount","addEventListener","render","jsStyles","root","content","children","React","Component","__KONTUR_REACT_UI__"],"mappings":"0PAAA;;AAEA,yD;;;;;;AAMaA,c;;;AAGHC,IAAAA,Y,GAA8B,I;;;;;;;;;;;;;;;;;AAiB9BC,IAAAA,Y,GAAe,UAACC,KAAD,EAAoB;AACzC,UAAI,MAAKC,KAAL,CAAWC,QAAf,EAAyB;AACvB,cAAKD,KAAL,CAAWC,QAAX,CAAoBF,KAApB;AACD;AACF,K;;AAEOG,IAAAA,S,GAAY,UAACC,MAAD,EAA+B;AACjD,UAAIA,MAAM,IAAIA,MAAM,CAACC,aAArB,EAAoC;AAClC,cAAKP,YAAL,GAAoBM,MAAM,CAACC,aAA3B;AACD;AACF,K,4DAzBMC,iB,GAAP,6BAA2B,CACzB,IAAI,KAAKR,YAAT,EAAuB,CACrB,KAAKA,YAAL,CAAkBS,gBAAlB,CAAmC,QAAnC,EAA6C,KAAKR,YAAlD,EACD,CACF,C,QAEMS,M,GAAP,kBAAgB,CACd,OACE,sCAAK,SAAS,EAAEC,yBAASC,IAAT,EAAhB,IACE,yCAAQ,KAAK,EAAC,gBAAd,EAA+B,GAAG,EAAE,KAAKP,SAAzC,EAAoD,SAAS,EAAEM,yBAASL,MAAT,EAA/D,GADF,EAEE,sCAAK,SAAS,EAAEK,yBAASE,OAAT,EAAhB,IAAqC,KAAKV,KAAL,CAAWW,QAAhD,CAFF,CADF,CAMD,C,yBAlBiCC,eAAMC,S,0CAA7BjB,c,CACGkB,mB,GAAsB,gB","sourcesContent":["import React from 'react';\r\n\r\nimport { jsStyles } from './ResizeDetector.styles';\r\n\r\nexport interface ResizeDetectorProps {\r\n  onResize?: (event: UIEvent) => void;\r\n}\r\n\r\nexport class ResizeDetector extends React.Component<ResizeDetectorProps> {\r\n  public static __KONTUR_REACT_UI__ = 'ResizeDetector';\r\n\r\n  private iframeWindow: Window | null = null;\r\n\r\n  public componentDidMount() {\r\n    if (this.iframeWindow) {\r\n      this.iframeWindow.addEventListener('resize', this.handleResize);\r\n    }\r\n  }\r\n\r\n  public render() {\r\n    return (\r\n      <div className={jsStyles.root()}>\r\n        <iframe title=\"resizeDetector\" ref={this.iframeRef} className={jsStyles.iframe()} />\r\n        <div className={jsStyles.content()}>{this.props.children}</div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  private handleResize = (event: UIEvent) => {\r\n    if (this.props.onResize) {\r\n      this.props.onResize(event);\r\n    }\r\n  };\r\n\r\n  private iframeRef = (iframe: HTMLIFrameElement) => {\r\n    if (iframe && iframe.contentWindow) {\r\n      this.iframeWindow = iframe.contentWindow;\r\n    }\r\n  };\r\n}\r\n"]}