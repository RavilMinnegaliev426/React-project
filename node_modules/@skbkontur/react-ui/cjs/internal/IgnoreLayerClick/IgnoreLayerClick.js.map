{"version":3,"sources":["IgnoreLayerClick.tsx"],"names":["IgnoreLayerClick","render","child","React","Children","only","props","children","active","Component","IgnoreLayerClickWrapper","element","handleMouseDown","event","stopPropagation","componentDidMount","Element","addEventListener","componentWillUnmount","removeEventListener","__KONTUR_REACT_UI__"],"mappings":"4PAAA;AACA,qC;;;;;;;AAOaA,gB;AACJC,EAAAA,M,GAAP,kBAAgB;AACd,QAAMC,KAAK,GAAGC,eAAMC,QAAN,CAAeC,IAAf,CAAoB,KAAKC,KAAL,CAAWC,QAA/B,CAAd;AACA,WAAO,KAAKD,KAAL,CAAWE,MAAX,GAAoB,6BAAC,uBAAD,QAA0BN,KAA1B,CAApB,GAAiFA,KAAxF;AACD,G,2BAJmCC,eAAMM,S;;;;;;;AAW5C;IACMC,uB;;;AAGIC,IAAAA,O,GAA0B,I;;;;;;;;;;;;;;;;;;;;;AAqB1BC,IAAAA,e,GAAkB,UAACC,KAAD,EAAkB;AAC1CA,MAAAA,KAAK,CAACC,eAAN;AACD,K,uEArBMC,iB,GAAP,6BAA2B,CACzB,IAAMJ,OAAO,GAAG,2BAAY,IAAZ,CAAhB,CACA,IAAIA,OAAO,IAAIA,OAAO,YAAYK,OAAlC,EAA2C,CACzCL,OAAO,CAACM,gBAAR,CAAyB,WAAzB,EAAsC,KAAKL,eAA3C,EACA,KAAKD,OAAL,GAAeA,OAAf,CACD,CACF,C,SAEMO,oB,GAAP,gCAA8B,CAC5B,IAAI,KAAKP,OAAT,EAAkB,CAChB,KAAKA,OAAL,CAAaQ,mBAAb,CAAiC,WAAjC,EAA8C,KAAKP,eAAnD,EACA,KAAKD,OAAL,GAAe,IAAf,CACD,CACF,C,SAEMV,M,GAAP,kBAAgB,CACd,OAAOE,eAAMC,QAAN,CAAeC,IAAf,CAAoB,KAAKC,KAAL,CAAWC,QAA/B,CAAP,CACD,C,kCAtBmCJ,eAAMM,S,EAAtCC,uB,CACUU,mB,GAAsB,kB","sourcesContent":["import React from 'react';\r\nimport { findDOMNode } from 'react-dom';\r\n\r\nexport interface IgnoreLayerClickProps {\r\n  children: React.ReactNode;\r\n  active: boolean;\r\n}\r\n\r\nexport class IgnoreLayerClick extends React.Component<IgnoreLayerClickProps> {\r\n  public render() {\r\n    const child = React.Children.only(this.props.children);\r\n    return this.props.active ? <IgnoreLayerClickWrapper>{child}</IgnoreLayerClickWrapper> : child;\r\n  }\r\n}\r\n\r\ninterface WrapperProps {\r\n  children: React.ReactNode;\r\n}\r\n\r\n// NOTE Используется только в команде Контур.Бухгалтерия\r\nclass IgnoreLayerClickWrapper extends React.Component<WrapperProps> {\r\n  public static __KONTUR_REACT_UI__ = 'IgnoreLayerClick';\r\n\r\n  private element: Element | null = null;\r\n\r\n  public componentDidMount() {\r\n    const element = findDOMNode(this);\r\n    if (element && element instanceof Element) {\r\n      element.addEventListener('mousedown', this.handleMouseDown);\r\n      this.element = element;\r\n    }\r\n  }\r\n\r\n  public componentWillUnmount() {\r\n    if (this.element) {\r\n      this.element.removeEventListener('mousedown', this.handleMouseDown);\r\n      this.element = null;\r\n    }\r\n  }\r\n\r\n  public render() {\r\n    return React.Children.only(this.props.children);\r\n  }\r\n\r\n  private handleMouseDown = (event: Event) => {\r\n    event.stopPropagation();\r\n  };\r\n}\r\n"]}