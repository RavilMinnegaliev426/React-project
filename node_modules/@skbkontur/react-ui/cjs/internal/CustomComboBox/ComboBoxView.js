"use strict";var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");exports.__esModule = true;exports.ComboBoxView = void 0;var _inheritsLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/inheritsLoose"));var _react = _interopRequireDefault(require("react"));
var _reactDom = require("react-dom");

var _DropdownContainer = require("../DropdownContainer");
var _Input = require("../../components/Input");
var _InputLikeText = require("../InputLikeText");


var _RenderLayer = require("../RenderLayer");
var _Spinner = require("../../components/Spinner");

var _px = require("../icons/16px");

var _ComboBoxMenu = require("./ComboBoxMenu");
var _CustomComboBoxTypes = require("./CustomComboBoxTypes");
var _CustomComboBox = require("./CustomComboBox.styles");var
















































ComboBoxView = /*#__PURE__*/function (_React$Component) {(0, _inheritsLoose2.default)(ComboBoxView, _React$Component);function ComboBoxView() {var _this;for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {args[_key] = arguments[_key];}_this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;_this.


















    input = void 0;_this.



























































































    renderAddButton = function () {
      return _this.props.renderAddButton(_this.props.textValue);
    };_this.




































































    handleItemSelect = function (item) {
      if (_this.props.onValueChange) {
        _this.props.onValueChange(item);
      }
    };_this.

    refInput = function (input) {
      if (_this.props.refInput) {
        _this.props.refInput(input);
      }
      _this.input = input;
    };_this.

    renderSpinner = function () {return (
        _react.default.createElement("span", { className: _CustomComboBox.jsStyles.spinnerWrapper() },
        _react.default.createElement(_Spinner.Spinner, { type: "mini", caption: "", dimmed: true })));};_this.



    getRightIcon = function () {var _this$props =
      _this.props,loading = _this$props.loading,items = _this$props.items,drawArrow = _this$props.drawArrow;

      if (loading && items && !!items.length) {
        return _this.renderSpinner();
      }

      if (drawArrow) {
        return (
          _react.default.createElement("span", { className: _CustomComboBox.jsStyles.arrowWrapper() },
          _react.default.createElement(_px.ArrowTriangleDownIcon, null)));


      }

      return null;
    };return _this;}var _proto = ComboBoxView.prototype;_proto.componentDidMount = function componentDidMount() {if (this.props.autoFocus && this.props.onFocus) {this.props.onFocus();}};_proto.componentDidUpdate = function componentDidUpdate(prevProps) {var input = this.input,props = this.props;if (props.editing && !prevProps.editing && input) {input.focus();}};_proto.render = function render() {var _this2 = this;var _this$props2 = this.props,items = _this$props2.items,loading = _this$props2.loading,menuAlign = _this$props2.menuAlign,onClickOutside = _this$props2.onClickOutside,onFocusOutside = _this$props2.onFocusOutside,onMouseEnter = _this$props2.onMouseEnter,onMouseLeave = _this$props2.onMouseLeave,onMouseOver = _this$props2.onMouseOver,opened = _this$props2.opened,refMenu = _this$props2.refMenu,maxMenuHeight = _this$props2.maxMenuHeight,renderTotalCount = _this$props2.renderTotalCount,renderItem = _this$props2.renderItem,renderNotFound = _this$props2.renderNotFound,repeatRequest = _this$props2.repeatRequest,requestStatus = _this$props2.requestStatus,totalCount = _this$props2.totalCount,size = _this$props2.size,width = _this$props2.width;var input = this.renderInput();var topOffsets = { spinner: 6, arrow: 15 };if (size === 'medium') {topOffsets.spinner += 4;topOffsets.arrow += 4;}if (size === 'large') {topOffsets.spinner += 6;topOffsets.arrow += 6;}return _react.default.createElement(_RenderLayer.RenderLayer, { onClickOutside: onClickOutside, onFocusOutside: onFocusOutside, active: opened }, _react.default.createElement("span", { style: { width: width }, className: _CustomComboBox.jsStyles.root(), onMouseEnter: onMouseEnter, onMouseLeave: onMouseLeave, onMouseOver: onMouseOver }, input, opened && _react.default.createElement(_DropdownContainer.DropdownContainer, { align: menuAlign, getParent: function getParent() {return (0, _reactDom.findDOMNode)(_this2);}, offsetY: 1, disablePortal: this.props.disablePortal }, _react.default.createElement(_ComboBoxMenu.ComboBoxMenu, { items: items, loading: loading, maxMenuHeight: maxMenuHeight, onValueChange: this.handleItemSelect, opened: opened, refMenu: refMenu, renderTotalCount: renderTotalCount, renderItem: renderItem, renderNotFound: renderNotFound, renderAddButton: this.renderAddButton, repeatRequest: repeatRequest, requestStatus: requestStatus, totalCount: totalCount }))));};_proto.renderInput = function renderInput() {var _this$props3 = this.props,align = _this$props3.align,borderless = _this$props3.borderless,disabled = _this$props3.disabled,editing = _this$props3.editing,error = _this$props3.error,onFocus = _this$props3.onFocus,onInputBlur = _this$props3.onInputBlur,onInputValueChange = _this$props3.onInputValueChange,onInputFocus = _this$props3.onInputFocus,onInputClick = _this$props3.onInputClick,onInputKeyDown = _this$props3.onInputKeyDown,placeholder = _this$props3.placeholder,renderValue = _this$props3.renderValue,size = _this$props3.size,textValue = _this$props3.textValue,value = _this$props3.value,warning = _this$props3.warning,refInputLikeText = _this$props3.refInputLikeText;var rightIcon = this.getRightIcon();if (editing) {return _react.default.createElement(_Input.Input, { align: align, borderless: borderless, disabled: disabled, error: error, maxLength: this.props.maxLength, onBlur: onInputBlur, onValueChange: onInputValueChange, onFocus: onInputFocus, onClick: onInputClick, rightIcon: rightIcon, value: textValue || '', onKeyDown: onInputKeyDown, placeholder: placeholder, width: "100%", size: size, ref: this.refInput, warning: warning });}return _react.default.createElement(_InputLikeText.InputLikeText, { align: align, borderless: borderless, error: error, onFocus: onFocus, rightIcon: rightIcon, disabled: disabled, warning: warning, placeholder: placeholder, size: size, width: "100%", ref: refInputLikeText }, value ? renderValue(value) : null);};return ComboBoxView;}(_react.default.Component);exports.ComboBoxView = ComboBoxView;ComboBoxView.__KONTUR_REACT_UI__ = 'ComboBoxView';ComboBoxView.defaultProps = { renderItem: function renderItem(item) {return item;}, renderValue: function renderValue(item) {return item;}, renderAddButton: function renderAddButton() {return null;}, repeatRequest: function repeatRequest() {return undefined;}, requestStatus: _CustomComboBoxTypes.ComboBoxRequestStatus.Unknown, onClickOutside: function onClickOutside() {/**/}, onFocusOutside: function onFocusOutside() {/**/}, size: 'small', width: 250 };