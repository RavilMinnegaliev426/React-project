{"version":3,"sources":["ComboBoxView.tsx"],"names":["ComboBoxView","input","renderAddButton","props","textValue","handleItemSelect","item","onValueChange","refInput","renderSpinner","jsStyles","spinnerWrapper","getRightIcon","loading","items","drawArrow","length","arrowWrapper","componentDidMount","autoFocus","onFocus","componentDidUpdate","prevProps","editing","focus","render","menuAlign","onClickOutside","onFocusOutside","onMouseEnter","onMouseLeave","onMouseOver","opened","refMenu","maxMenuHeight","renderTotalCount","renderItem","renderNotFound","repeatRequest","requestStatus","totalCount","size","width","renderInput","topOffsets","spinner","arrow","root","disablePortal","align","borderless","disabled","error","onInputBlur","onInputValueChange","onInputFocus","onInputClick","onInputKeyDown","placeholder","renderValue","value","warning","refInputLikeText","rightIcon","maxLength","React","Component","__KONTUR_REACT_UI__","defaultProps","undefined","ComboBoxRequestStatus","Unknown"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { findDOMNode } from 'react-dom';\r\n\r\nimport { DropdownContainer } from '../DropdownContainer';\r\nimport { Input } from '../../components/Input';\r\nimport { InputLikeText } from '../InputLikeText';\r\nimport { Menu } from '../Menu';\r\nimport { MenuItemState } from '../../components/MenuItem';\r\nimport { RenderLayer } from '../RenderLayer';\r\nimport { Spinner } from '../../components/Spinner';\r\nimport { Nullable } from '../../typings/utility-types';\r\nimport { ArrowTriangleDownIcon } from '../icons/16px';\r\n\r\nimport { ComboBoxMenu } from './ComboBoxMenu';\r\nimport { ComboBoxRequestStatus } from './CustomComboBoxTypes';\r\nimport { jsStyles } from './CustomComboBox.styles';\r\n\r\ninterface ComboBoxViewProps<T> {\r\n  align?: 'left' | 'center' | 'right';\r\n  autoFocus?: boolean;\r\n  borderless?: boolean;\r\n  disablePortal?: boolean;\r\n  disabled?: boolean;\r\n  editing?: boolean;\r\n  error?: boolean;\r\n  items?: Nullable<T[]>;\r\n  loading?: boolean;\r\n  menuAlign?: 'left' | 'right';\r\n  opened?: boolean;\r\n  drawArrow?: boolean;\r\n  placeholder?: string;\r\n  size?: 'small' | 'medium' | 'large';\r\n  textValue?: string;\r\n  totalCount?: number;\r\n  value?: Nullable<T>;\r\n  warning?: boolean;\r\n  width?: string | number;\r\n  maxLength?: number;\r\n  maxMenuHeight?: number | string;\r\n\r\n  onValueChange?: (value: T) => void;\r\n  onClickOutside?: (e: Event) => void;\r\n  onFocus?: () => void;\r\n  onFocusOutside?: () => void;\r\n  onInputBlur?: () => void;\r\n  onInputValueChange?: (value: string) => void;\r\n  onInputFocus?: () => void;\r\n  onInputClick?: () => void;\r\n  onInputKeyDown?: (e: React.KeyboardEvent) => void;\r\n  onMouseEnter?: (e: React.MouseEvent) => void;\r\n  onMouseOver?: (e: React.MouseEvent) => void;\r\n  onMouseLeave?: (e: React.MouseEvent) => void;\r\n  renderItem?: (item: T, state: MenuItemState) => React.ReactNode;\r\n  renderNotFound?: () => React.ReactNode;\r\n  renderTotalCount?: (found: number, total: number) => React.ReactNode;\r\n  renderValue?: (item: T) => React.ReactNode;\r\n  renderAddButton: (query?: string) => React.ReactNode;\r\n  repeatRequest?: () => void;\r\n  requestStatus?: ComboBoxRequestStatus;\r\n  refInput?: (input: Nullable<Input>) => void;\r\n  refMenu?: (menu: Nullable<Menu>) => void;\r\n  refInputLikeText?: (inputLikeText: Nullable<InputLikeText>) => void;\r\n}\r\n\r\nexport class ComboBoxView<T> extends React.Component<ComboBoxViewProps<T>> {\r\n  public static __KONTUR_REACT_UI__ = 'ComboBoxView';\r\n\r\n  public static defaultProps = {\r\n    renderItem: (item: any) => item,\r\n    renderValue: (item: any) => item,\r\n    renderAddButton: () => null,\r\n    repeatRequest: () => undefined,\r\n    requestStatus: ComboBoxRequestStatus.Unknown,\r\n    onClickOutside: () => {\r\n      /**/\r\n    },\r\n    onFocusOutside: () => {\r\n      /**/\r\n    },\r\n    size: 'small',\r\n    width: 250 as string | number,\r\n  };\r\n\r\n  private input: Nullable<Input>;\r\n\r\n  public componentDidMount() {\r\n    if (this.props.autoFocus && this.props.onFocus) {\r\n      this.props.onFocus();\r\n    }\r\n  }\r\n\r\n  public componentDidUpdate(prevProps: ComboBoxViewProps<T>) {\r\n    const { input, props } = this;\r\n    if (props.editing && !prevProps.editing && input) {\r\n      input.focus();\r\n    }\r\n  }\r\n\r\n  public render() {\r\n    const {\r\n      items,\r\n      loading,\r\n      menuAlign,\r\n      onClickOutside,\r\n      onFocusOutside,\r\n      onMouseEnter,\r\n      onMouseLeave,\r\n      onMouseOver,\r\n      opened,\r\n      refMenu,\r\n      maxMenuHeight,\r\n      renderTotalCount,\r\n      renderItem,\r\n      renderNotFound,\r\n      repeatRequest,\r\n      requestStatus,\r\n      totalCount,\r\n      size,\r\n      width,\r\n    } = this.props;\r\n\r\n    const input = this.renderInput();\r\n\r\n    const topOffsets = {\r\n      spinner: 6,\r\n      arrow: 15,\r\n    };\r\n    if (size === 'medium') {\r\n      topOffsets.spinner += 4;\r\n      topOffsets.arrow += 4;\r\n    }\r\n    if (size === 'large') {\r\n      topOffsets.spinner += 6;\r\n      topOffsets.arrow += 6;\r\n    }\r\n\r\n    return (\r\n      <RenderLayer onClickOutside={onClickOutside} onFocusOutside={onFocusOutside} active={opened}>\r\n        <span\r\n          style={{ width }}\r\n          className={jsStyles.root()}\r\n          onMouseEnter={onMouseEnter}\r\n          onMouseLeave={onMouseLeave}\r\n          onMouseOver={onMouseOver}\r\n        >\r\n          {input}\r\n          {opened && (\r\n            <DropdownContainer\r\n              align={menuAlign}\r\n              getParent={() => findDOMNode(this)}\r\n              offsetY={1}\r\n              disablePortal={this.props.disablePortal}\r\n            >\r\n              <ComboBoxMenu\r\n                items={items}\r\n                loading={loading}\r\n                maxMenuHeight={maxMenuHeight}\r\n                onValueChange={this.handleItemSelect}\r\n                opened={opened}\r\n                refMenu={refMenu}\r\n                renderTotalCount={renderTotalCount}\r\n                renderItem={renderItem!}\r\n                renderNotFound={renderNotFound}\r\n                renderAddButton={this.renderAddButton}\r\n                repeatRequest={repeatRequest}\r\n                requestStatus={requestStatus}\r\n                totalCount={totalCount}\r\n              />\r\n            </DropdownContainer>\r\n          )}\r\n        </span>\r\n      </RenderLayer>\r\n    );\r\n  }\r\n\r\n  private renderAddButton = (): React.ReactNode => {\r\n    return this.props.renderAddButton(this.props.textValue);\r\n  };\r\n\r\n  private renderInput(): React.ReactNode {\r\n    const {\r\n      align,\r\n      borderless,\r\n      disabled,\r\n      editing,\r\n      error,\r\n      onFocus,\r\n      onInputBlur,\r\n      onInputValueChange,\r\n      onInputFocus,\r\n      onInputClick,\r\n      onInputKeyDown,\r\n      placeholder,\r\n      renderValue,\r\n      size,\r\n      textValue,\r\n      value,\r\n      warning,\r\n      refInputLikeText,\r\n    } = this.props;\r\n\r\n    const rightIcon = this.getRightIcon();\r\n\r\n    if (editing) {\r\n      return (\r\n        <Input\r\n          align={align}\r\n          borderless={borderless}\r\n          disabled={disabled}\r\n          error={error}\r\n          maxLength={this.props.maxLength}\r\n          onBlur={onInputBlur}\r\n          onValueChange={onInputValueChange}\r\n          onFocus={onInputFocus}\r\n          onClick={onInputClick}\r\n          rightIcon={rightIcon}\r\n          value={textValue || ''}\r\n          onKeyDown={onInputKeyDown}\r\n          placeholder={placeholder}\r\n          width=\"100%\"\r\n          size={size}\r\n          ref={this.refInput}\r\n          warning={warning}\r\n        />\r\n      );\r\n    }\r\n\r\n    return (\r\n      <InputLikeText\r\n        align={align}\r\n        borderless={borderless}\r\n        error={error}\r\n        onFocus={onFocus}\r\n        rightIcon={rightIcon}\r\n        disabled={disabled}\r\n        warning={warning}\r\n        placeholder={placeholder}\r\n        size={size}\r\n        width=\"100%\"\r\n        ref={refInputLikeText}\r\n      >\r\n        {value ? renderValue!(value) : null}\r\n      </InputLikeText>\r\n    );\r\n  }\r\n\r\n  private handleItemSelect = (item: T) => {\r\n    if (this.props.onValueChange) {\r\n      this.props.onValueChange(item);\r\n    }\r\n  };\r\n\r\n  private refInput = (input: Nullable<Input>) => {\r\n    if (this.props.refInput) {\r\n      this.props.refInput(input);\r\n    }\r\n    this.input = input;\r\n  };\r\n\r\n  private renderSpinner = () => (\r\n    <span className={jsStyles.spinnerWrapper()}>\r\n      <Spinner type=\"mini\" caption=\"\" dimmed />\r\n    </span>\r\n  );\r\n\r\n  private getRightIcon = () => {\r\n    const { loading, items, drawArrow } = this.props;\r\n\r\n    if (loading && items && !!items.length) {\r\n      return this.renderSpinner();\r\n    }\r\n\r\n    if (drawArrow) {\r\n      return (\r\n        <span className={jsStyles.arrowWrapper()}>\r\n          <ArrowTriangleDownIcon />\r\n        </span>\r\n      );\r\n    }\r\n\r\n    return null;\r\n  };\r\n}\r\n"]}