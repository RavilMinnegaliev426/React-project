{"version":3,"sources":["RenderLayer.tsx"],"names":["RenderLayer","focusOutsideListenerToken","handleFocusOutside","event","props","onFocusOutside","handleNativeDocClick","target","srcElement","node","getDomNode","Element","onClickOutside","componentDidMount","active","attachListeners","componentDidUpdate","prevProps","detachListeners","componentWillUnmount","render","React","Children","only","children","window","addEventListener","document","documentElement","remove","removeEventListener","Component","__KONTUR_REACT_UI__","propTypes","propName","componentName","Error","defaultProps"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { findDOMNode } from 'react-dom';\r\n\r\nimport { listen as listenFocusOutside, containsTargetOrRenderContainer } from '../../lib/listenFocusOutside';\r\n\r\nexport interface RenderLayerProps {\r\n  children: JSX.Element;\r\n  onClickOutside?: (e: Event) => void;\r\n  onFocusOutside?: (e: Event) => void;\r\n  active?: boolean;\r\n}\r\n\r\nexport class RenderLayer extends React.Component<RenderLayerProps> {\r\n  public static __KONTUR_REACT_UI__ = 'RenderLayer';\r\n\r\n  public static propTypes = {\r\n    active(props: RenderLayerProps, propName: keyof RenderLayerProps, componentName: string) {\r\n      const { active, onClickOutside, onFocusOutside } = props;\r\n      if (active && !(onClickOutside || onFocusOutside)) {\r\n        return new Error(\r\n          `[${componentName}]: using the component without either 'onClickOutside' or 'onFocusOutside' callback is pointless.`,\r\n        );\r\n      }\r\n    },\r\n  };\r\n\r\n  public static defaultProps = {\r\n    active: true,\r\n  };\r\n\r\n  private focusOutsideListenerToken: {\r\n    remove: () => void;\r\n  } | null = null;\r\n\r\n  public componentDidMount() {\r\n    if (this.props.active) {\r\n      this.attachListeners();\r\n    }\r\n  }\r\n\r\n  public componentDidUpdate(prevProps: RenderLayerProps) {\r\n    if (!prevProps.active && this.props.active) {\r\n      this.attachListeners();\r\n    }\r\n    if (prevProps.active && !this.props.active) {\r\n      this.detachListeners();\r\n    }\r\n  }\r\n\r\n  public componentWillUnmount() {\r\n    if (this.props.active) {\r\n      this.detachListeners();\r\n    }\r\n  }\r\n\r\n  public render(): JSX.Element {\r\n    return React.Children.only(this.props.children);\r\n  }\r\n\r\n  private attachListeners() {\r\n    this.focusOutsideListenerToken = listenFocusOutside(() => [this.getDomNode()], this.handleFocusOutside);\r\n    window.addEventListener('blur', this.handleFocusOutside);\r\n    document.addEventListener(\r\n      'ontouchstart' in document.documentElement ? 'touchstart' : 'mousedown',\r\n      this.handleNativeDocClick,\r\n    );\r\n  }\r\n\r\n  private detachListeners() {\r\n    if (this.focusOutsideListenerToken) {\r\n      this.focusOutsideListenerToken.remove();\r\n      this.focusOutsideListenerToken = null;\r\n    }\r\n\r\n    window.removeEventListener('blur', this.handleFocusOutside);\r\n    document.removeEventListener(\r\n      'ontouchstart' in document.documentElement ? 'touchstart' : 'mousedown',\r\n      this.handleNativeDocClick,\r\n    );\r\n  }\r\n\r\n  private getDomNode() {\r\n    return findDOMNode(this) as HTMLElement;\r\n  }\r\n\r\n  private handleFocusOutside = (event: Event) => {\r\n    if (this.props.onFocusOutside) {\r\n      this.props.onFocusOutside(event);\r\n    }\r\n  };\r\n\r\n  private handleNativeDocClick = (event: Event) => {\r\n    const target = event.target || event.srcElement;\r\n    const node = this.getDomNode();\r\n\r\n    if (target instanceof Element && containsTargetOrRenderContainer(target)(node)) {\r\n      return;\r\n    }\r\n\r\n    if (this.props.onClickOutside) {\r\n      this.props.onClickOutside(event);\r\n    }\r\n  };\r\n}\r\n"]}