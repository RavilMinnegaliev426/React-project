{"version":3,"sources":["PopupMenu.tsx"],"names":["PopupMenuType","Dropdown","Tooltip","PopupMenu","state","menuVisible","firstItemShouldBeSelected","captionWrapper","savedFocusableElement","menu","open","showMenu","close","hideMenu","refInternalMenu","element","handleOpen","focus","renderCaption","props","caption","opened","openMenu","closeMenu","toggleMenu","jsStyles","handleCaptionClick","handleCaptionKeyDown","hideMenuWithoutFocusing","saveFocus","setState","handleChangeMenuVisible","restoreFocus","e","isKeyEnter","isKeySpace","isKeyArrowVertical","preventDefault","handleKeyDown","document","activeElement","focusShouldBeRestored","onChangeMenuState","handleItemSelection","event","isDefaultPrevented","type","render","container","children","popupMargin","popupHasPin","popupPinOffset","getPositions","disableAnimations","menuMaxHeight","menuWidth","header","footer","positions","PopupMenuPositions","React","Component","__KONTUR_REACT_UI__","defaultProps","Type"],"mappings":"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","sourcesContent":["import React from 'react';\r\n\r\nimport {\r\n  isKeyArrowVertical,\r\n  isKeyEnter,\r\n  isKeyEscape,\r\n  isKeySpace,\r\n  someKeys,\r\n} from '../../lib/events/keyboard/identifiers';\r\nimport { InternalMenu } from '../InternalMenu';\r\nimport { Popup, PopupPosition } from '../Popup';\r\nimport { RenderLayer } from '../RenderLayer';\r\nimport { Nullable } from '../../typings/utility-types';\r\n\r\nimport { PopupMenuPositions } from './PopupMenuPositions';\r\nimport { isValidPositions } from './validatePositions';\r\nimport { jsStyles } from './PopupMenu.styles';\r\n\r\nexport interface PopupMenuCaptionProps {\r\n  opened: boolean;\r\n  openMenu: (firstItemShouldBeSelected?: boolean) => void;\r\n  closeMenu: (restoreFocus?: boolean) => void;\r\n  toggleMenu: () => void;\r\n}\r\n\r\nexport interface PopupMenuProps {\r\n  children?: React.ReactNode;\r\n  /** Максимальная высота меню */\r\n  menuMaxHeight?: number | string;\r\n  /** Ширина меню */\r\n  menuWidth?: number | string;\r\n\r\n  /**\r\n   * Элемент или функция возвращающая элемент,\r\n   * если передана, используется вместо ```caption```,\r\n   * в таком случае управлять открытием и закрытием меню\r\n   * придется в этой функции\r\n   */\r\n  caption: React.ReactNode | ((props: PopupMenuCaptionProps) => React.ReactNode);\r\n\r\n  header?: React.ReactNode;\r\n  footer?: React.ReactNode;\r\n\r\n  /**  Массив разрешенных положений меню относительно caption'а. */\r\n  positions?: PopupPosition[];\r\n  /** Колбэк, вызываемый после открытия/закрытия меню */\r\n  onChangeMenuState?: (isOpened: boolean, restoreFocus: boolean) => void;\r\n  /** Пропсы, передающиеся в Popup */\r\n  popupHasPin?: boolean;\r\n  popupMargin?: number;\r\n  popupPinOffset?: number;\r\n  type?: 'dropdown' | 'tooltip';\r\n  disableAnimations: boolean;\r\n}\r\n\r\ninterface PopupMenuState {\r\n  menuVisible: boolean;\r\n  firstItemShouldBeSelected?: boolean;\r\n}\r\n\r\nexport const PopupMenuType = {\r\n  Dropdown: 'dropdown',\r\n  Tooltip: 'tooltip',\r\n};\r\n\r\nexport class PopupMenu extends React.Component<PopupMenuProps, PopupMenuState> {\r\n  public static __KONTUR_REACT_UI__ = 'PopupMenu';\r\n\r\n  public static defaultProps = {\r\n    positions: PopupMenuPositions,\r\n    type: PopupMenuType.Tooltip,\r\n    popupHasPin: true,\r\n    popupMargin: 0,\r\n    disableAnimations: false,\r\n  };\r\n\r\n  public static Type = PopupMenuType;\r\n\r\n  public state = {\r\n    menuVisible: false,\r\n    firstItemShouldBeSelected: false,\r\n  };\r\n\r\n  private captionWrapper: HTMLSpanElement | null = null;\r\n  private savedFocusableElement: HTMLElement | null = null;\r\n  private menu: Nullable<InternalMenu> = null;\r\n\r\n  public render() {\r\n    return (\r\n      <RenderLayer\r\n        onClickOutside={this.hideMenuWithoutFocusing}\r\n        onFocusOutside={this.hideMenuWithoutFocusing}\r\n        active={this.state.menuVisible}\r\n      >\r\n        <div className={jsStyles.container()}>\r\n          {this.renderCaption()}\r\n          {this.captionWrapper && this.props.children && (\r\n            <Popup\r\n              anchorElement={this.captionWrapper}\r\n              opened={this.state.menuVisible}\r\n              hasShadow\r\n              margin={this.props.popupMargin}\r\n              hasPin={this.props.popupHasPin}\r\n              pinOffset={this.props.popupPinOffset}\r\n              positions={this.getPositions()}\r\n              disableAnimations={this.props.disableAnimations}\r\n              onOpen={this.handleOpen}\r\n            >\r\n              <InternalMenu\r\n                hasShadow={false}\r\n                maxHeight={this.props.menuMaxHeight || 'none'}\r\n                onKeyDown={this.handleKeyDown}\r\n                width={this.props.menuWidth || 'auto'}\r\n                onItemClick={this.handleItemSelection}\r\n                cyclicSelection={false}\r\n                ref={this.refInternalMenu}\r\n                initialSelectedItemIndex={this.state.firstItemShouldBeSelected ? 0 : -1}\r\n                header={this.props.header}\r\n                footer={this.props.footer}\r\n              >\r\n                {this.props.children}\r\n              </InternalMenu>\r\n            </Popup>\r\n          )}\r\n        </div>\r\n      </RenderLayer>\r\n    );\r\n  }\r\n\r\n  public open = (): void => this.showMenu();\r\n  public close = (): void => this.hideMenu();\r\n\r\n  private refInternalMenu = (element: Nullable<InternalMenu>) => (this.menu = element);\r\n\r\n  private handleOpen = () => {\r\n    if (this.menu) {\r\n      this.menu.focus();\r\n    }\r\n  };\r\n\r\n  private renderCaption = () => {\r\n    if (typeof this.props.caption === 'function') {\r\n      const caption = this.props.caption({\r\n        opened: this.state.menuVisible,\r\n        openMenu: this.showMenu,\r\n        closeMenu: this.hideMenu,\r\n        toggleMenu: this.toggleMenu,\r\n      });\r\n\r\n      return (\r\n        <span\r\n          data-tid=\"PopupMenu__caption\"\r\n          className={jsStyles.caption()}\r\n          ref={element => (this.captionWrapper = element)}\r\n        >\r\n          {caption}\r\n        </span>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <span\r\n        data-tid=\"PopupMenu__caption\"\r\n        onClick={this.handleCaptionClick}\r\n        onKeyDown={this.handleCaptionKeyDown}\r\n        ref={element => (this.captionWrapper = element)}\r\n        className={jsStyles.caption()}\r\n      >\r\n        {this.props.caption}\r\n      </span>\r\n    );\r\n  };\r\n\r\n  private hideMenuWithoutFocusing = () => this.hideMenu();\r\n\r\n  private getPositions() {\r\n    if (this.props.positions && isValidPositions(this.props.positions)) {\r\n      return this.props.positions;\r\n    }\r\n\r\n    return PopupMenuPositions;\r\n  }\r\n\r\n  private showMenu = (firstItemShouldBeSelected?: boolean): void => {\r\n    this.saveFocus();\r\n    this.setState(\r\n      {\r\n        menuVisible: true,\r\n        firstItemShouldBeSelected,\r\n      },\r\n      () => {\r\n        this.handleChangeMenuVisible(false);\r\n      },\r\n    );\r\n  };\r\n\r\n  private hideMenu = (restoreFocus?: boolean): void => {\r\n    this.setState(\r\n      {\r\n        menuVisible: false,\r\n        firstItemShouldBeSelected: false,\r\n      },\r\n      () => {\r\n        this.handleChangeMenuVisible(!!restoreFocus);\r\n      },\r\n    );\r\n  };\r\n\r\n  private toggleMenu = (): void => {\r\n    this.state.menuVisible ? this.hideMenu() : this.showMenu();\r\n  };\r\n\r\n  private handleCaptionClick = (): void => {\r\n    this.toggleMenu();\r\n  };\r\n\r\n  private handleCaptionKeyDown = (e: React.KeyboardEvent<HTMLElement>): void => {\r\n    if (someKeys(isKeyEnter, isKeySpace, isKeyArrowVertical)(e)) {\r\n      e.preventDefault();\r\n      this.showMenu(true);\r\n    }\r\n  };\r\n\r\n  private handleKeyDown = (e: React.KeyboardEvent<HTMLElement>) => {\r\n    if (isKeyEscape(e)) {\r\n      const restoreFocus = true;\r\n      this.hideMenu(restoreFocus);\r\n    }\r\n  };\r\n\r\n  private saveFocus = (): void => {\r\n    if (document) {\r\n      this.savedFocusableElement = document.activeElement as HTMLElement;\r\n    }\r\n  };\r\n\r\n  private restoreFocus = (): void => {\r\n    if (this.savedFocusableElement) {\r\n      this.savedFocusableElement.focus();\r\n      this.savedFocusableElement = null;\r\n    }\r\n  };\r\n\r\n  private handleChangeMenuVisible = (focusShouldBeRestored: boolean): void => {\r\n    if (focusShouldBeRestored) {\r\n      this.restoreFocus();\r\n    }\r\n    if (typeof this.props.onChangeMenuState === 'function') {\r\n      this.props.onChangeMenuState(this.state.menuVisible, focusShouldBeRestored);\r\n    }\r\n  };\r\n\r\n  private handleItemSelection = (event: React.SyntheticEvent<HTMLElement>): void => {\r\n    if (event.isDefaultPrevented()) {\r\n      return;\r\n    }\r\n\r\n    if (event.type === 'keydown') {\r\n      event.preventDefault();\r\n    }\r\n\r\n    const restoreFocus = event.type === 'keydown';\r\n    this.hideMenu(restoreFocus);\r\n  };\r\n}\r\n"]}