"use strict";var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");exports.__esModule = true;exports.HiddenInput = void 0;var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));var _objectWithoutPropertiesLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutPropertiesLoose"));var _inheritsLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/inheritsLoose"));var _taggedTemplateLiteralLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/taggedTemplateLiteralLoose"));var _react = _interopRequireDefault(require("react"));

var _Emotion = require("../../lib/theming/Emotion");function _templateObject() {var data = (0, _taggedTemplateLiteralLoose2.default)(["\n  position: absolute;\n  width: 1px;\n  height: 0;\n  border: 0;\n  outline: 0;\n  margin: 0;\n  padding: 0;\n  overflow: hidden;\n  opacity: 0;\n"]);_templateObject = function _templateObject() {return data;};return data;}





var cap = function cap(e) {return e.stopPropagation();};

var className = (0, _Emotion.css)(_templateObject());











/**
                                                       * В **IE11** событие `onPaste` вызывается только у редактируемых элементов: `input`, `textarea`, `[contenteditable]`.
                                                       * Для решения этой проблемы, перед "вставкой" фокусируемся на инпуте
                                                       * после этого `onPaste` вызывается у инпута и всплывает.
                                                       */var
HiddenInput = /*#__PURE__*/function (_React$Component) {(0, _inheritsLoose2.default)(HiddenInput, _React$Component);function HiddenInput() {return _React$Component.apply(this, arguments) || this;}var _proto = HiddenInput.prototype;_proto.
  render = function render() {var _this$props =
    this.props,nodeRef = _this$props.nodeRef,props = (0, _objectWithoutPropertiesLoose2.default)(_this$props, ["nodeRef"]);
    return (
      _react.default.createElement("input", (0, _extends2.default)({},
      props, {
        ref: nodeRef,
        type: "text",
        tabIndex: -1,
        onBlur: cap,
        onFocus: cap,
        onChange: cap,
        className: className })));


  };return HiddenInput;}(_react.default.Component);exports.HiddenInput = HiddenInput;