{"version":3,"sources":["SpinnerOld.styles.ts"],"names":["styles","cloudStroke","t","css","spinnerBgColor","cloudWrapper","cloud","red","AnimationKeyframes","spinnerCloudOffset","spinnerCloudLength","spinnerColor","cloudDimmed","spinnerDimmedColor","circle","spinnerCircleOffset","spinnerCircleLength","spinnerCircleRotate","circleDimmed","caption","spinnerCaptionColor","spinner","inner","captionRight","captionBottom","fallback","jsStyles"],"mappings":"8QAAA;;AAEA,0E;;AAEA,IAAMA,MAAM,GAAG;AACbC,EAAAA,WADa,uBACDC,CADC,EACS;AACpB,eAAOC,YAAP;AACYD,IAAAA,CAAC,CAACE,cADd;;AAGD,GALY;AAMbC,EAAAA,YANa,0BAME;AACb,eAAOF,YAAP;;;;AAID,GAXY;AAYbG,EAAAA,KAZa,iBAYPJ,CAZO,EAYG;AACd,eAAOC,YAAP;;;AAGYD,IAAAA,CAAC,CAACK,GAHd;AAIeC,2CAAmBC,kBAAnB,CAAsCP,CAAtC,CAJf;AAKMM,2CAAmBE,kBAAnB,CAAsCR,CAAtC,CALN;AAMMM,2CAAmBG,YAAnB,CAAgCT,CAAhC,CANN;;AAQD,GArBY;AAsBbU,EAAAA,WAtBa,uBAsBDV,CAtBC,EAsBS;AACpB,eAAOC,YAAP;;;AAGYD,IAAAA,CAAC,CAACW,kBAHd;AAIeL,2CAAmBC,kBAAnB,CAAsCP,CAAtC,CAJf;AAKMM,2CAAmBE,kBAAnB,CAAsCR,CAAtC,CALN;;AAOD,GA9BY;AA+BbY,EAAAA,MA/Ba,kBA+BNZ,CA/BM,EA+BI;AACf,eAAOC,YAAP;AACYD,IAAAA,CAAC,CAACK,GADd;AAEeC,2CAAmBO,mBAAnB,CAAuCb,CAAvC,CAFf;AAGMM,2CAAmBQ,mBAAnB,CAAuCd,CAAvC,CAHN;AAIMM,2CAAmBS,mBAAnB,CAAuCf,CAAvC,CAJN;AAKMM,2CAAmBG,YAAnB,CAAgCT,CAAhC,CALN;;AAOD,GAvCY;AAwCbgB,EAAAA,YAxCa,wBAwCAhB,CAxCA,EAwCU;AACrB,eAAOC,YAAP;AACYD,IAAAA,CAAC,CAACW,kBADd;AAEeL,2CAAmBO,mBAAnB,CAAuCb,CAAvC,CAFf;AAGMM,2CAAmBQ,mBAAnB,CAAuCd,CAAvC,CAHN;AAIMM,2CAAmBS,mBAAnB,CAAuCf,CAAvC,CAJN;;AAMD,GA/CY;;AAiDbiB,EAAAA,OAjDa,mBAiDLjB,CAjDK,EAiDK;AAChB,eAAOC,YAAP;;AAEWD,IAAAA,CAAC,CAACkB,mBAFb;;AAID,GAtDY;;AAwDbC,EAAAA,OAxDa,qBAwDH;AACR,eAAOlB,YAAP;;;;AAID,GA7DY;;AA+DbmB,EAAAA,KA/Da,mBA+DL;AACN,eAAOnB,YAAP;;;AAGD,GAnEY;;AAqEboB,EAAAA,YArEa,0BAqEE;AACb,eAAOpB,YAAP;;;AAGD,GAzEY;;AA2EbqB,EAAAA,aA3Ea,2BA2EG;AACd,eAAOrB,YAAP;;;AAGD,GA/EY;;AAiFbsB,EAAAA,QAjFa,sBAiFF;AACT,eAAOtB,YAAP;;;;AAID,GAtFY,EAAf;;;AAyFO,IAAMuB,QAAQ,GAAG,2BAAa1B,MAAb,CAAjB,C","sourcesContent":["import { css, memoizeStyle } from '../../lib/theming/Emotion';\r\nimport { Theme } from '../../lib/theming/Theme';\r\nimport { AnimationKeyframes } from '../../lib/theming/AnimationKeyframes';\r\n\r\nconst styles = {\r\n  cloudStroke(t: Theme) {\r\n    return css`\r\n      stroke: ${t.spinnerBgColor};\r\n    `;\r\n  },\r\n  cloudWrapper() {\r\n    return css`\r\n      fill: none;\r\n      stroke-linecap: round;\r\n    `;\r\n  },\r\n  cloud(t: Theme) {\r\n    return css`\r\n      stroke-dasharray: 20, 86;\r\n      stroke-dashoffset: 15;\r\n      stroke: ${t.red};\r\n      animation: ${AnimationKeyframes.spinnerCloudOffset(t)} 1s cubic-bezier(0.5, 0.2, 0.5, 0.8) infinite,\r\n        ${AnimationKeyframes.spinnerCloudLength(t)} 2s cubic-bezier(0.36, 0.14, 0.38, 0.69) infinite,\r\n        ${AnimationKeyframes.spinnerColor(t)} 6s ease-in-out infinite;\r\n    `;\r\n  },\r\n  cloudDimmed(t: Theme) {\r\n    return css`\r\n      stroke-dasharray: 20, 86;\r\n      stroke-dashoffset: 15;\r\n      stroke: ${t.spinnerDimmedColor};\r\n      animation: ${AnimationKeyframes.spinnerCloudOffset(t)} 1s cubic-bezier(0.5, 0.2, 0.5, 0.8) infinite,\r\n        ${AnimationKeyframes.spinnerCloudLength(t)} 2s cubic-bezier(0.36, 0.14, 0.38, 0.69) infinite;\r\n    `;\r\n  },\r\n  circle(t: Theme) {\r\n    return css`\r\n      stroke: ${t.red};\r\n      animation: ${AnimationKeyframes.spinnerCircleOffset(t)} 1s cubic-bezier(0.5, 0.2, 0.5, 0.8) infinite,\r\n        ${AnimationKeyframes.spinnerCircleLength(t)} 2s cubic-bezier(0.36, 0.14, 0.38, 0.69) infinite,\r\n        ${AnimationKeyframes.spinnerCircleRotate(t)} 2s linear infinite,\r\n        ${AnimationKeyframes.spinnerColor(t)} 6s ease-in-out infinite;\r\n    `;\r\n  },\r\n  circleDimmed(t: Theme) {\r\n    return css`\r\n      stroke: ${t.spinnerDimmedColor};\r\n      animation: ${AnimationKeyframes.spinnerCircleOffset(t)} 1s cubic-bezier(0.5, 0.2, 0.5, 0.8) infinite,\r\n        ${AnimationKeyframes.spinnerCircleLength(t)} 2s cubic-bezier(0.36, 0.14, 0.38, 0.69) infinite,\r\n        ${AnimationKeyframes.spinnerCircleRotate(t)} 2s linear infinite;\r\n    `;\r\n  },\r\n\r\n  caption(t: Theme) {\r\n    return css`\r\n      font-size: 14px;\r\n      color: ${t.spinnerCaptionColor};\r\n    `;\r\n  },\r\n\r\n  spinner() {\r\n    return css`\r\n      display: inline-block;\r\n      text-align: center;\r\n    `;\r\n  },\r\n\r\n  inner() {\r\n    return css`\r\n      display: inline-block;\r\n    `;\r\n  },\r\n\r\n  captionRight() {\r\n    return css`\r\n      margin-left: 5px;\r\n    `;\r\n  },\r\n\r\n  captionBottom() {\r\n    return css`\r\n      display: block;\r\n    `;\r\n  },\r\n\r\n  fallback() {\r\n    return css`\r\n      display: inline-block;\r\n      position: relative;\r\n    `;\r\n  },\r\n};\r\n\r\nexport const jsStyles = memoizeStyle(styles);\r\n"]}