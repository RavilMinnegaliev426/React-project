{"version":3,"sources":["SpinnerOld.tsx"],"names":["SpinnerOld","SpinnerLocaleHelper","props","theme","locale","renderCloud","type","cloudClassName","dimmed","jsStyles","cloudDimmed","cloud","cloudWrapper","cloudStroke","renderCircle","circleClassName","circleDimmed","circle","renderSpinnerOld","renderCaption","caption","captionClassName","captionRight","captionBottom","render","renderMain","loading","spinner","inner","hasSvgAnimationSupport","React","Component","__KONTUR_REACT_UI__","propTypes","PropTypes","node","bool","oneOf","Object","keys","types","defaultProps","Types"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport * as PropTypes from 'prop-types';\r\nimport cn from 'classnames';\r\n\r\nimport { locale } from '../../lib/locale/decorators';\r\nimport { Theme } from '../../lib/theming/Theme';\r\nimport { ThemeContext } from '../../lib/theming/ThemeContext';\r\nimport { hasSvgAnimationSupport } from '../../lib/utils';\r\nimport { SpinnerOldIcon } from '../icons/SpinnerOldIcon';\r\n\r\nimport { jsStyles } from './SpinnerOld.styles';\r\nimport { types, SpinnerOldFallback } from './SpinnerOldFallback';\r\nimport { SpinnerLocale, SpinnerLocaleHelper } from './locale';\r\n\r\nexport type SpinnerOldType = 'mini' | 'normal' | 'big';\r\n\r\nexport interface SpinnerOldProps {\r\n  caption?: React.ReactNode;\r\n  dimmed?: boolean;\r\n  /**\r\n   * Тип спиннера\r\n   * @default mini\r\n   */\r\n  type: SpinnerOldType;\r\n}\r\n\r\n/**\r\n * @deprecated Контур-специфичный компонент, будет удален в 3.0.0, перенесен в `@skbkontur/react-ui-addons` смотри [миграцию](https://github.com/skbkontur/retail-ui/blob/master/packages/react-ui/MIGRATION.md)\r\n */\r\n@locale('Spinner', SpinnerLocaleHelper)\r\nexport class SpinnerOld extends React.Component<SpinnerOldProps> {\r\n  public static __KONTUR_REACT_UI__ = 'SpinnerOld';\r\n\r\n  public static propTypes = {\r\n    /**\r\n     * Текст рядом с мини-лоадером.\r\n     *\r\n     * 'Загрузка' - значение по-умолчанию\r\n     */\r\n    caption: PropTypes.node,\r\n\r\n    dimmed: PropTypes.bool,\r\n\r\n    /**\r\n     * Тип спиннера: mini, normal, big\r\n     *\r\n     * Значение по-умолчанию - normal\r\n     *\r\n     * SpinnerOld.types - все доступные типы\r\n     */\r\n    type: PropTypes.oneOf(Object.keys(types)),\r\n  };\r\n\r\n  public static defaultProps: SpinnerOldProps = {\r\n    type: 'normal',\r\n  };\r\n\r\n  public static Types: typeof types = types;\r\n  private theme!: Theme;\r\n  private readonly locale!: SpinnerLocale;\r\n\r\n  public constructor(props: SpinnerOldProps) {\r\n    super(props);\r\n  }\r\n\r\n  public render() {\r\n    return (\r\n      <ThemeContext.Consumer>\r\n        {theme => {\r\n          this.theme = theme;\r\n          return this.renderMain();\r\n        }}\r\n      </ThemeContext.Consumer>\r\n    );\r\n  }\r\n\r\n  private renderMain() {\r\n    const { type, caption = this.locale.loading, dimmed } = this.props;\r\n\r\n    return (\r\n      <div className={jsStyles.spinner()}>\r\n        <span className={jsStyles.inner()}>\r\n          {hasSvgAnimationSupport && this.renderSpinnerOld(type)}\r\n          {!hasSvgAnimationSupport && <SpinnerOldFallback type={type} dimmed={dimmed} />}\r\n        </span>\r\n        {caption && this.renderCaption(type, caption)}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  private renderCloud = (type: Exclude<SpinnerOldType, 'mini'>) => {\r\n    const cloudClassName = this.props.dimmed ? jsStyles.cloudDimmed(this.theme) : jsStyles.cloud(this.theme);\r\n\r\n    return (\r\n      <span className={jsStyles.cloudWrapper()}>\r\n        <SpinnerOldIcon size={type} className={cloudClassName} strokeClassName={jsStyles.cloudStroke(this.theme)} />\r\n      </span>\r\n    );\r\n  };\r\n\r\n  private renderCircle = () => {\r\n    const theme = this.theme;\r\n    const circleClassName = this.props.dimmed ? jsStyles.circleDimmed(theme) : jsStyles.circle(theme);\r\n\r\n    return <SpinnerOldIcon size=\"mini\" className={circleClassName} />;\r\n  };\r\n\r\n  private renderSpinnerOld = (type: SpinnerOldType) => {\r\n    return type === 'mini' ? this.renderCircle() : this.renderCloud(type);\r\n  };\r\n\r\n  private renderCaption = (type: SpinnerOldType, caption: React.ReactNode) => {\r\n    const captionClassName = cn(\r\n      jsStyles.caption(this.theme),\r\n      type === 'mini' ? jsStyles.captionRight() : jsStyles.captionBottom(),\r\n    );\r\n    return <span className={captionClassName}>{caption}</span>;\r\n  };\r\n}\r\n"]}