{"version":3,"sources":["SpinnerOldFallback.tsx"],"names":["types","big","mini","normal","SpinnerOldFallback","state","frame","mounted","_framesCount","dimmed","imageUrls","fallbackImage_mini","fallbackImage_normal","fallbackImage_big","fallbackImage_mini_dimmed","animate","framesCount","getSpriteSettingsKey","nextFrame","setState","setTimeout","props","type","componentDidMount","componentWillUnmount","render","renderCircle","renderCloud","cssSet","backgroundImage","height","width","marginBottom","marginLeft","marginRight","process","env","enableReactTesting","backgroundPosition","jsStyles","fallback","multiply","SPINNER_CLOUD_SIZE","top","React","Component","__KONTUR_REACT_UI__","propTypes","PropTypes","oneOf","Object","keys","bool"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport * as PropTypes from 'prop-types';\r\n\r\nimport { SPINNER_CLOUD_SIZE } from '../icons/SpinnerOldIcon';\r\n\r\nimport fallbackImage_mini from './fallback_circle.png';\r\nimport fallbackImage_mini_dimmed from './fallback_circle_dimmed.png';\r\nimport fallbackImage_big from './fallback_cloud_big.png';\r\nimport fallbackImage_normal from './fallback_cloud_normal.png';\r\nimport { jsStyles } from './SpinnerOld.styles';\r\nimport { SpinnerOldType } from './SpinnerOld';\r\n\r\nexport const types: {\r\n  [key: string]: SpinnerOldType;\r\n} = {\r\n  big: 'big',\r\n  mini: 'mini',\r\n  normal: 'normal',\r\n};\r\n\r\nexport interface SpinnerOldFallbackProps {\r\n  type: SpinnerOldType;\r\n  dimmed?: boolean;\r\n}\r\n\r\nexport class SpinnerOldFallback extends React.Component<SpinnerOldFallbackProps> {\r\n  public static __KONTUR_REACT_UI__ = 'SpinnerOldFallback';\r\n\r\n  public static propTypes = {\r\n    type: PropTypes.oneOf(Object.keys(types)),\r\n\r\n    dimmed: PropTypes.bool,\r\n  };\r\n\r\n  public state = {\r\n    frame: 0,\r\n  };\r\n\r\n  private mounted = false;\r\n\r\n  private _framesCount = {\r\n    [types.mini]: 180,\r\n    [types.normal]: 60,\r\n    [types.big]: 60,\r\n    dimmed: 60,\r\n  };\r\n\r\n  private imageUrls = {\r\n    [types.mini]: fallbackImage_mini,\r\n    [types.normal]: fallbackImage_normal,\r\n    [types.big]: fallbackImage_big,\r\n    dimmed: fallbackImage_mini_dimmed,\r\n  };\r\n\r\n  public componentDidMount() {\r\n    this.mounted = true;\r\n    this.animate();\r\n  }\r\n\r\n  public componentWillUnmount() {\r\n    this.mounted = false;\r\n  }\r\n\r\n  public render() {\r\n    return this.props.type === 'mini' ? this.renderCircle() : this.renderCloud();\r\n  }\r\n\r\n  private renderCircle() {\r\n    const { dimmed } = this.props;\r\n    const { frame } = this.state;\r\n\r\n    const cssSet: React.CSSProperties = {\r\n      backgroundImage: `url('${this.imageUrls[dimmed ? 'dimmed' : 'mini']}')`,\r\n      height: 16,\r\n      width: 16,\r\n      marginBottom: -3,\r\n      marginLeft: -1,\r\n      marginRight: -1,\r\n    };\r\n\r\n    if (!process.env.enableReactTesting) {\r\n      cssSet.backgroundPosition = `0 -${frame * 16}px`;\r\n    }\r\n\r\n    return <span className={jsStyles.fallback()} style={cssSet} />;\r\n  }\r\n\r\n  private renderCloud() {\r\n    const { type } = this.props;\r\n    const { frame } = this.state;\r\n    const multiply = type === 'big' ? 2 : 1;\r\n    const cssSet: React.CSSProperties = {\r\n      backgroundImage: `url('${this.imageUrls[type]}')`,\r\n      height: SPINNER_CLOUD_SIZE.height * multiply,\r\n      top: 0,\r\n      width: SPINNER_CLOUD_SIZE.width * multiply,\r\n    };\r\n\r\n    if (!process.env.enableReactTesting) {\r\n      cssSet.backgroundPosition = `0 -${frame * SPINNER_CLOUD_SIZE.height * multiply}px`;\r\n    }\r\n\r\n    return <span className={jsStyles.fallback()} style={cssSet} />;\r\n  }\r\n\r\n  private animate = () => {\r\n    if (!this.mounted) {\r\n      return;\r\n    }\r\n\r\n    const { frame } = this.state;\r\n    const framesCount = this._framesCount[this.getSpriteSettingsKey()];\r\n    const nextFrame = frame < framesCount ? frame + 1 : 0;\r\n    this.setState({ frame: nextFrame });\r\n\r\n    setTimeout(this.animate, 1000 / 25);\r\n  };\r\n\r\n  private getSpriteSettingsKey = () =>\r\n    this.props.type === types.mini && this.props.dimmed ? 'dimmed' : this.props.type;\r\n}\r\n"]}