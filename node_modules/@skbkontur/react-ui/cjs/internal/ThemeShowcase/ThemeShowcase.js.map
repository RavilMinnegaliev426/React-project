{"version":3,"sources":["ThemeShowcase.tsx"],"names":["EMPTY_ARRAY","ALL_VARIABLES","Object","keys","defaultVariables","ThemeShowcase","state","isUnmounting","variablesDiff","getItems","query","Promise","resolve","getValues","handleVariableChange","item","setState","selectedVariable","handleUnexpectedVariableInput","values","length","resetVariable","undefined","UNSAFE_componentWillMount","props","isDebugMode","forEach","variable","found","ALL_USED_VARIABLES","includes","push","render","IS_PROXY_SUPPORTED","descriptionsToRender","COMPONENT_DESCRIPTIONS_BY_VARIABLE","value","COMPONENT_DESCRIPTIONS","callsCount","CALLS_COUNT","executionTime","EXECUTION_TIME","toFixed","jsStyles","searchBar","sort","map","componentName","componentWillUnmount","lowerCaseQuery","toLowerCase","trim","allItems","filter","usedVariable","startsWith","usedVariableName","label","React","Component","ComponentShowcase","name","description","onVariableSelect","elements","isSticky","heading","headingSticky","table","width","el","ComponentShowcaseRow","element","row","rowSpan","variables","invisibleRow","elementName","invisibleCell","varName","dependencies","variableDefault","variableFlat","flatVariables","hasNoVariables","suspiciousRow","VariableName","handleVariableSelect","variableName","renderDependencies","dependency","DependencyName","dependencyName","dependencyDefault","dependencyFlat","handleDependencySelect","onDependencySelect","VariableValue","valueIsColor","isColor","valueIsGradient","isGradient","hasExample","borderColor","ColorFunctions","contrast","colorExample","background","ShowUnusedVariables","diff","unusedVariablesWarning","v","input"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport cn from 'classnames';\r\nimport { Theme } from 'react-ui/lib/theming/Theme';\r\n\r\nimport { DEFAULT_THEME as defaultVariables } from '../../lib/theming/themes/DefaultTheme';\r\nimport { FLAT_THEME as flatVariables } from '../../lib/theming/themes/FlatTheme';\r\nimport { ComboBox, ComboBoxItem } from '../../components/ComboBox';\r\nimport { Gapped } from '../../components/Gapped';\r\nimport { Link } from '../../components/Link';\r\nimport { Sticky } from '../../components/Sticky';\r\nimport * as ColorFunctions from '../../lib/styles/ColorFunctions';\r\nimport { Tooltip } from '../../components/Tooltip';\r\nimport { IS_PROXY_SUPPORTED } from '../../lib/Supports';\r\n\r\nimport {\r\n  ALL_USED_VARIABLES,\r\n  CALLS_COUNT,\r\n  COMPONENT_DESCRIPTIONS,\r\n  COMPONENT_DESCRIPTIONS_BY_VARIABLE,\r\n  ComponentDescriptionType,\r\n  ComponentRowDescriptionType,\r\n  EXECUTION_TIME,\r\n} from './VariablesCollector';\r\nimport { jsStyles } from './ThemeShowcase.styles';\r\n\r\nconst EMPTY_ARRAY: string[] = [];\r\n\r\nconst ALL_VARIABLES = Object.keys(defaultVariables) as Array<keyof Theme>;\r\n\r\ninterface ShowcaseProps {\r\n  isDebugMode?: boolean;\r\n}\r\ninterface ShowcaseState {\r\n  selectedVariable?: ComboBoxItem;\r\n}\r\n\r\nexport class ThemeShowcase extends React.Component<ShowcaseProps, ShowcaseState> {\r\n  public state: ShowcaseState = {};\r\n\r\n  private isUnmounting = false;\r\n  private variablesDiff: string[] = [];\r\n\r\n  public UNSAFE_componentWillMount(): void {\r\n    if (this.props.isDebugMode) {\r\n      ALL_VARIABLES.forEach(variable => {\r\n        const found = ALL_USED_VARIABLES.includes(variable);\r\n        if (!found) {\r\n          this.variablesDiff.push(variable);\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  public render() {\r\n    if (!IS_PROXY_SUPPORTED) {\r\n      return (\r\n        <div>\r\n          Таблица использования переменных доступна только в{' '}\r\n          <Link href={'https://caniuse.com/#feat=proxy'} target={'_blank'}>\r\n            браузерах с поддержкой Proxy\r\n          </Link>\r\n          .\r\n        </div>\r\n      );\r\n    }\r\n\r\n    const selectedVariable = this.state.selectedVariable;\r\n    const descriptionsToRender = selectedVariable\r\n      ? COMPONENT_DESCRIPTIONS_BY_VARIABLE[selectedVariable.value] || {}\r\n      : COMPONENT_DESCRIPTIONS;\r\n\r\n    const isDebugMode = this.props.isDebugMode;\r\n    const callsCount = isDebugMode ? `(${CALLS_COUNT} вызовов)` : '';\r\n    const executionTime = isDebugMode ? `Сгенерировано за ${EXECUTION_TIME.toFixed(3)}ms` : '';\r\n\r\n    return (\r\n      <Gapped wrap gap={30} verticalAlign={'top'}>\r\n        <div>\r\n          <Sticky side={'top'}>\r\n            <div className={jsStyles.searchBar()} data-perf-info={`${executionTime} ${callsCount}`}>\r\n              <Gapped gap={15}>\r\n                <ComboBox\r\n                  getItems={this.getItems}\r\n                  value={selectedVariable}\r\n                  onValueChange={this.handleVariableChange}\r\n                  onUnexpectedInput={this.handleUnexpectedVariableInput}\r\n                  placeholder={'поиск по названию переменной'}\r\n                />\r\n                {!!selectedVariable && <Link onClick={this.resetVariable}>сбросить</Link>}\r\n              </Gapped>\r\n            </div>\r\n          </Sticky>\r\n          {Object.keys(descriptionsToRender)\r\n            .sort()\r\n            .map(componentName => (\r\n              <ComponentShowcase\r\n                key={componentName}\r\n                name={componentName}\r\n                description={descriptionsToRender[componentName]}\r\n                isDebugMode={isDebugMode}\r\n                onVariableSelect={this.handleVariableChange}\r\n              />\r\n            ))}\r\n        </div>\r\n        <ShowUnusedVariables diff={this.variablesDiff} />\r\n      </Gapped>\r\n    );\r\n  }\r\n  public componentWillUnmount(): void {\r\n    this.isUnmounting = true;\r\n  }\r\n\r\n  private getValues(query: string) {\r\n    const lowerCaseQuery = query && query.toLowerCase().trim();\r\n    let allItems = ALL_USED_VARIABLES;\r\n    if (lowerCaseQuery) {\r\n      allItems = ALL_USED_VARIABLES.filter(usedVariable => usedVariable.toLowerCase().startsWith(lowerCaseQuery));\r\n    }\r\n    return allItems.map(usedVariableName => ({\r\n      value: usedVariableName,\r\n      label: usedVariableName,\r\n    }));\r\n  }\r\n  private getItems = (query: string) => {\r\n    return Promise.resolve(this.getValues(query));\r\n  };\r\n  private handleVariableChange = (item: ComboBoxItem) => {\r\n    if (!this.isUnmounting) {\r\n      this.setState({ selectedVariable: item });\r\n    }\r\n  };\r\n  private handleUnexpectedVariableInput = (query: string) => {\r\n    const values = this.getValues(query);\r\n    if (values.length > 0) {\r\n      return values[0];\r\n    } else {\r\n      return this.resetVariable();\r\n    }\r\n  };\r\n  private resetVariable = () => {\r\n    if (!this.isUnmounting) {\r\n      this.setState({ selectedVariable: undefined });\r\n    }\r\n  };\r\n}\r\n\r\ninterface ComponentShowcaseProps {\r\n  name: string;\r\n  description: ComponentDescriptionType;\r\n  isDebugMode?: boolean;\r\n  onVariableSelect: (item: ComboBoxItem) => void;\r\n}\r\nclass ComponentShowcase extends React.Component<ComponentShowcaseProps, {}> {\r\n  public render() {\r\n    const { name, description, onVariableSelect, isDebugMode } = this.props;\r\n    const elements = Object.keys(description);\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <Sticky side={'top'} offset={40}>\r\n          {isSticky => (\r\n            <h2\r\n              className={cn({\r\n                [jsStyles.heading()]: true,\r\n                [jsStyles.headingSticky()]: isSticky,\r\n              })}\r\n            >\r\n              {this.props.name}\r\n            </h2>\r\n          )}\r\n        </Sticky>\r\n        <table className={jsStyles.table()}>\r\n          <thead>\r\n            <tr>\r\n              <th style={{ width: 170 }}>ClassName</th>\r\n              <th style={{ width: 210 }}>Variable Name</th>\r\n              <th style={{ width: 250 }}>Default Value</th>\r\n              <th style={{ width: 250 }}>Flat Value</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {elements.map(el => (\r\n              <ComponentShowcaseRow\r\n                key={`${name}_${el}`}\r\n                element={el}\r\n                row={description[el]}\r\n                onVariableSelect={onVariableSelect}\r\n                isDebugMode={isDebugMode}\r\n              />\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\ninterface ComponentShowcaseRowProps {\r\n  element: string;\r\n  row: ComponentRowDescriptionType;\r\n  isDebugMode?: boolean;\r\n  onVariableSelect: (item: ComboBoxItem) => void;\r\n}\r\n\r\nclass ComponentShowcaseRow extends React.Component<ComponentShowcaseRowProps> {\r\n  public render() {\r\n    const { element: el, row, isDebugMode } = this.props;\r\n    const rowSpan = row.variables.length + 1;\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <tr className={jsStyles.invisibleRow()}>\r\n          <td rowSpan={rowSpan}>\r\n            <span className={jsStyles.elementName()}>.{el}</span>\r\n          </td>\r\n          <td className={jsStyles.invisibleCell()} />\r\n          <td className={jsStyles.invisibleCell()} />\r\n          <td className={jsStyles.invisibleCell()} />\r\n        </tr>\r\n        {row.variables.map(varName => {\r\n          const dependencies = row.dependencies[varName] || EMPTY_ARRAY;\r\n          const variableDefault = defaultVariables[varName] as string;\r\n          const variableFlat = flatVariables[varName] as string;\r\n          const hasNoVariables = isDebugMode && !variableDefault && !variableFlat;\r\n\r\n          return (\r\n            <tr key={`${el}_${varName}`} className={cn({ [jsStyles.suspiciousRow()]: hasNoVariables })}>\r\n              <td>\r\n                <VariableName\r\n                  variableName={varName as string}\r\n                  dependencies={dependencies}\r\n                  onVariableSelect={this.props.onVariableSelect}\r\n                />\r\n              </td>\r\n              <td>\r\n                <VariableValue value={variableDefault} />\r\n              </td>\r\n              <td>\r\n                <VariableValue value={variableFlat} />\r\n              </td>\r\n            </tr>\r\n          );\r\n        })}\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\ninterface VariableNameProps {\r\n  variableName: string;\r\n  dependencies: Array<keyof Theme>;\r\n  onVariableSelect: (item: ComboBoxItem) => void;\r\n}\r\n\r\nclass VariableName extends React.Component<VariableNameProps> {\r\n  public render() {\r\n    return (\r\n      <span>\r\n        <span className={jsStyles.variableName()} onClick={this.handleVariableSelect}>\r\n          {this.props.variableName}\r\n        </span>\r\n        {this.props.dependencies.length > 0 && this.renderDependencies()}\r\n      </span>\r\n    );\r\n  }\r\n\r\n  private renderDependencies() {\r\n    const { dependencies, onVariableSelect } = this.props;\r\n    return (\r\n      <React.Fragment>\r\n        <br />\r\n        <br />\r\n        зависит от:\r\n        {dependencies.map(dependency => (\r\n          <DependencyName\r\n            key={`dependency_${dependency}`}\r\n            dependencyName={dependency}\r\n            onDependencySelect={onVariableSelect}\r\n          />\r\n        ))}\r\n      </React.Fragment>\r\n    );\r\n  }\r\n\r\n  private handleVariableSelect = () => {\r\n    const { variableName, onVariableSelect } = this.props;\r\n    if (onVariableSelect) {\r\n      onVariableSelect({ value: variableName, label: variableName });\r\n    }\r\n  };\r\n}\r\n\r\ninterface DependencyNameProps {\r\n  dependencyName: keyof Theme;\r\n  onDependencySelect: (item: ComboBoxItem) => void;\r\n}\r\nclass DependencyName extends React.Component<DependencyNameProps> {\r\n  public render() {\r\n    return (\r\n      <React.Fragment>\r\n        <br />\r\n        &ndash;{' '}\r\n        <Tooltip trigger={'hover'} render={this.getValues} pos={'right middle'}>\r\n          <span className={jsStyles.variableName()} onClick={this.handleDependencySelect}>\r\n            {this.props.dependencyName}\r\n          </span>\r\n        </Tooltip>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n\r\n  private getValues = () => {\r\n    const dependencyName = this.props.dependencyName;\r\n    const dependencyDefault = defaultVariables[dependencyName] as string;\r\n    const dependencyFlat = flatVariables[dependencyName] as string;\r\n    return (\r\n      <React.Fragment>\r\n        <span>Default value: {<VariableValue value={dependencyDefault} />}</span>\r\n        <br />\r\n        <span>Flat value: {<VariableValue value={dependencyFlat} />}</span>\r\n      </React.Fragment>\r\n    );\r\n  };\r\n\r\n  private handleDependencySelect = () => {\r\n    const { dependencyName, onDependencySelect } = this.props;\r\n    if (onDependencySelect) {\r\n      onDependencySelect({ value: dependencyName, label: dependencyName });\r\n    }\r\n  };\r\n}\r\n\r\nconst VariableValue = (props: { value: string }) => {\r\n  const value = props.value;\r\n  const valueIsColor = isColor(value);\r\n  const valueIsGradient = isGradient(value);\r\n  const hasExample = valueIsColor || valueIsGradient;\r\n  let borderColor = 'transparent';\r\n  if (hasExample) {\r\n    borderColor = valueIsColor ? ColorFunctions.contrast(value) : '#000';\r\n  }\r\n\r\n  return (\r\n    <span className={cn({ [jsStyles.undefined()]: !value })}>\r\n      {hasExample && <span className={jsStyles.colorExample()} style={{ background: value, borderColor }} />}\r\n      {value || 'undefined'}\r\n    </span>\r\n  );\r\n};\r\n\r\nconst ShowUnusedVariables = (props: { diff: string[] }) => {\r\n  if (props.diff.length === 0) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <div className={jsStyles.unusedVariablesWarning()}>\r\n      Неиспользованные переменные ({props.diff.length}\r\n      ):\r\n      <ul>\r\n        {props.diff.sort().map(v => (\r\n          <li key={v}>{v}</li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction isColor(input: string) {\r\n  return !!input && (input.startsWith('#') || input.startsWith('rgb') || input.startsWith('hsl'));\r\n}\r\n\r\nfunction isGradient(input: string) {\r\n  return !!input && input.startsWith('linear-gradient');\r\n}\r\n"]}