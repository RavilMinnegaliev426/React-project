{"version":3,"sources":["DimensionFunctions.ts"],"names":["EPS","shift","value","unitSymbolsArray","match","unit","join","floatNumber","parseFloat","intNumber","parseInt","result","Math","round"],"mappings":"8DAAA,IAAMA,GAAG,GAAG,OAAZ;AACO,IAAMC,KAAK,GAAG,eAACC,KAAD,EAAgBD,MAAhB,EAA0C;AAC7D,MAAI,CAACC,KAAD,IAAU,CAACD,MAAf,EAAsB;AACpB,WAAOC,KAAP;AACD;AACD,MAAMC,gBAAgB,GAAGD,KAAK,CAACE,KAAN,CAAY,UAAZ,KAA2B,EAApD;AACA,MAAMC,IAAI,GAAGF,gBAAgB,CAACG,IAAjB,CAAsB,EAAtB,CAAb;AACA,MAAMC,WAAW,GAAGC,UAAU,CAACN,KAAD,CAAV,GAAoBM,UAAU,CAACP,MAAD,CAAlD;AACA,MAAMQ,SAAS,GAAGC,QAAQ,MAAIH,WAAJ,EAAmB,EAAnB,CAA1B;AACA,MAAMI,MAAM,GAAGJ,WAAW,GAAGE,SAAd,GAA0BT,GAA1B,GAAgCS,SAAhC,GAA4CG,IAAI,CAACC,KAAL,CAAWN,WAAW,GAAG,KAAzB,IAAkC,KAA7F;AACA,cAAUI,MAAV,IAAmBN,IAAI,IAAI,IAA3B;AACD,CAVM,C","sourcesContent":["const EPS = 0.00001;\r\nexport const shift = (value: string, shift: string): string => {\r\n  if (!value || !shift) {\r\n    return value;\r\n  }\r\n  const unitSymbolsArray = value.match(/[a-z]|%/g) || [];\r\n  const unit = unitSymbolsArray.join('');\r\n  const floatNumber = parseFloat(value) + parseFloat(shift);\r\n  const intNumber = parseInt(`${floatNumber}`, 10);\r\n  const result = floatNumber % intNumber < EPS ? intNumber : Math.round(floatNumber * 10000) / 10000;\r\n  return `${result}${unit || 'px'}`;\r\n};\r\n"]}