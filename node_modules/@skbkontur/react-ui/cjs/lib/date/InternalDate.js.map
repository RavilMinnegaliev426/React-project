{"version":3,"sources":["InternalDate.ts"],"names":["InternalDate","order","separator","langCode","defaultLangCode","value","components","emptyDateComponents","start","end","internalDateLocale","undefined","parseInternalValue","getComponentsRaw","getComponentsLikeNumber","InternalDateTransformer","dateComponentsStringToNumber","getSeparator","getOrder","getYear","year","getMonth","month","getDate","date","getRangeStart","getRangeEnd","setOrder","defaultDateComponentsOrder","setSeparator","defaultDateComponentsSeparator","setComponents","isNativeMonth","clone","shiftMonth","validate","checks","InternalDateValidateCheck","Native","setYear","setMonth","setDate","shiftYear","step","isLoop","isRange","isCutFeb","min","getMinValue","InternalDateComponentType","Year","max","getMaxValue","InternalDateCalculator","calcShiftValueDateComponent","Month","shiftDate","Date","setRangeStart","internalDate","setRangeEnd","get","type","InternalDateGetter","getValueDateComponent","set","InternalDateSetter","setValueDateComponent","shift","settings","shiftValueDateComponent","parseValue","parseValueToDate","InternalDateOrder","DMY","nextValue","Object","values","filter","isInternalDateValidateCheck","self","includes","NotNull","InternalDateValidator","checkForNull","Number","every","testParseToNumber","Limits","checkLimits","compareWithNativeDate","Range","checkRangePiecemeal","checkRangeFully","toNumber","toFragments","dateToFragments","YMD","withPad","map","valueWithPad","join","toString","withSeparator","Separator","toInternalString","dateToInternalString","toNativeFormat","duplicateOf","pattern","restore","prev","today","getTodayComponents","restoreYear","All","cutOffExcess","isIncomplete","isEmpty","some","component","isEqualComponentDate","compared","isEqual","isEqualDateValues","isEqualDateFormats","calcRangeStartDateComponent","getDefaultMin","calcRangeEndDateComponent","getDefaultMax"],"mappings":"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","sourcesContent":["import { defaultLangCode } from '../locale/constants';\r\n\r\nimport { defaultDateComponentsOrder, defaultDateComponentsSeparator, emptyDateComponents } from './constants';\r\nimport { InternalDateCalculator } from './InternalDateCalculator';\r\nimport { InternalDateGetter } from './InternalDateGetter';\r\nimport { InternalDateSetter } from './InternalDateSetter';\r\nimport { InternalDateTransformer } from './InternalDateTransformer';\r\nimport { InternalDateValidator } from './InternalDateValidator';\r\nimport { internalDateLocale } from './localeSets';\r\nimport {\r\n  InternalDateChangeSettings,\r\n  InternalDateComponentRaw,\r\n  InternalDateComponentsNumber,\r\n  InternalDateComponentsRaw,\r\n  InternalDateComponentType,\r\n  InternalDateConstructorProps,\r\n  InternalDateFragment,\r\n  InternalDateOrder,\r\n  InternalDateSeparator,\r\n  InternalDateToFragmentsSettings,\r\n  InternalDateValidateCheck,\r\n  isInternalDateValidateCheck,\r\n} from './types';\r\n\r\nexport class InternalDate {\r\n  private order: InternalDateOrder;\r\n  private separator: InternalDateSeparator;\r\n  private components: InternalDateComponentsRaw = { ...emptyDateComponents };\r\n\r\n  private start: InternalDate | null = null;\r\n  private end: InternalDate | null = null;\r\n\r\n  public constructor({ order, separator, langCode = defaultLangCode, value }: InternalDateConstructorProps = {}) {\r\n    this.order = order ?? internalDateLocale[langCode].order;\r\n    this.separator = separator ?? internalDateLocale[langCode].separator;\r\n    if (value !== undefined) {\r\n      this.parseInternalValue(value);\r\n    }\r\n  }\r\n\r\n  public getComponentsRaw(): InternalDateComponentsRaw {\r\n    return { ...this.components };\r\n  }\r\n\r\n  public getComponentsLikeNumber(): InternalDateComponentsNumber {\r\n    return InternalDateTransformer.dateComponentsStringToNumber(this.getComponentsRaw());\r\n  }\r\n\r\n  public getSeparator(): InternalDateSeparator {\r\n    return this.separator;\r\n  }\r\n\r\n  public getOrder(): InternalDateOrder {\r\n    return this.order;\r\n  }\r\n\r\n  public getYear(): InternalDateComponentRaw {\r\n    return this.components.year;\r\n  }\r\n\r\n  public getMonth(): InternalDateComponentRaw {\r\n    return this.components.month;\r\n  }\r\n\r\n  public getDate(): InternalDateComponentRaw {\r\n    return this.components.date;\r\n  }\r\n\r\n  public getRangeStart(): InternalDate | null {\r\n    return this.start;\r\n  }\r\n\r\n  public getRangeEnd(): InternalDate | null {\r\n    return this.end;\r\n  }\r\n\r\n  public setOrder(order: InternalDateOrder = defaultDateComponentsOrder): InternalDate {\r\n    this.order = order;\r\n    return this;\r\n  }\r\n\r\n  public setSeparator(separator: InternalDateSeparator = defaultDateComponentsSeparator): InternalDate {\r\n    this.separator = separator;\r\n    return this;\r\n  }\r\n\r\n  public setComponents(components: InternalDateComponentsRaw | null, isNativeMonth = false): InternalDate {\r\n    if (components && isNativeMonth) {\r\n      const clone = this.clone()\r\n        .setComponents(components)\r\n        .shiftMonth(1);\r\n      if (clone.validate({ checks: [InternalDateValidateCheck.Native] })) {\r\n        this.components = { ...clone.getComponentsLikeNumber() };\r\n      }\r\n      return this;\r\n    }\r\n    this.components = components || { ...emptyDateComponents };\r\n    return this;\r\n  }\r\n\r\n  public setYear(year: InternalDateComponentRaw): InternalDate {\r\n    this.components.year = year;\r\n    return this;\r\n  }\r\n\r\n  public setMonth(month: InternalDateComponentRaw): InternalDate {\r\n    this.components.month = month;\r\n    return this;\r\n  }\r\n\r\n  public setDate(date: InternalDateComponentRaw): InternalDate {\r\n    this.components.date = date;\r\n    return this;\r\n  }\r\n\r\n  public shiftYear(step: number, { isLoop, isRange, isCutFeb }: InternalDateChangeSettings = {}): InternalDate {\r\n    const min = this.getMinValue(InternalDateComponentType.Year, isRange);\r\n    const max = this.getMaxValue(InternalDateComponentType.Year, { isRange, isCutFeb });\r\n    const { year } = this.getComponentsLikeNumber();\r\n    this.components.year = InternalDateCalculator.calcShiftValueDateComponent(step, year, min, max, isLoop);\r\n    return this;\r\n  }\r\n\r\n  public shiftMonth(step: number, { isLoop, isRange, isCutFeb }: InternalDateChangeSettings = {}): InternalDate {\r\n    const min = this.getMinValue(InternalDateComponentType.Month, isRange);\r\n    const max = this.getMaxValue(InternalDateComponentType.Month, { isRange, isCutFeb });\r\n    const { month } = this.getComponentsLikeNumber();\r\n    this.components.month = InternalDateCalculator.calcShiftValueDateComponent(step, month, min, max, isLoop);\r\n    return this;\r\n  }\r\n\r\n  public shiftDate(step: number, { isLoop, isRange, isCutFeb }: InternalDateChangeSettings = {}): InternalDate {\r\n    const min = this.getMinValue(InternalDateComponentType.Date, isRange);\r\n    const max = this.getMaxValue(InternalDateComponentType.Date, { isRange, isCutFeb });\r\n    const { date } = this.getComponentsLikeNumber();\r\n    this.components.date = InternalDateCalculator.calcShiftValueDateComponent(step, date, min, max, isLoop);\r\n    return this;\r\n  }\r\n\r\n  public setRangeStart(internalDate: InternalDate | null): InternalDate {\r\n    this.start = internalDate;\r\n    return this;\r\n  }\r\n\r\n  public setRangeEnd(internalDate: InternalDate | null): InternalDate {\r\n    this.end = internalDate;\r\n    return this;\r\n  }\r\n\r\n  public get(type: InternalDateComponentType | null): InternalDateComponentRaw {\r\n    return type !== null ? InternalDateGetter.getValueDateComponent(type, this.getComponentsRaw()) : null;\r\n  }\r\n\r\n  public set(type: InternalDateComponentType | null, value: InternalDateComponentRaw): InternalDate {\r\n    return type !== null ? InternalDateSetter.setValueDateComponent(this, type, value) : this;\r\n  }\r\n\r\n  public shift(\r\n    type: InternalDateComponentType | null,\r\n    step: number,\r\n    settings?: InternalDateChangeSettings,\r\n  ): InternalDate {\r\n    return type !== null ? InternalDateSetter.shiftValueDateComponent(this, type, step, settings) : this;\r\n  }\r\n\r\n  public parseValue(value: string | null = ''): InternalDate {\r\n    const components = InternalDateTransformer.parseValueToDate(value, this.order) || { ...emptyDateComponents };\r\n    this.setComponents(components);\r\n    return this;\r\n  }\r\n\r\n  public parseInternalValue(value: string | null = ''): InternalDate {\r\n    const components = InternalDateTransformer.parseValueToDate(value, InternalDateOrder.DMY) || {\r\n      ...emptyDateComponents,\r\n    };\r\n    this.setComponents(components);\r\n    return this;\r\n  }\r\n\r\n  public validate({\r\n    type,\r\n    nextValue,\r\n    checks = Object.values(InternalDateValidateCheck).filter<InternalDateValidateCheck>(isInternalDateValidateCheck),\r\n  }: {\r\n    type?: InternalDateComponentType;\r\n    nextValue?: InternalDateComponentRaw;\r\n    checks?: InternalDateValidateCheck[];\r\n  } = {}): boolean {\r\n    // eslint-disable-next-line @typescript-eslint/no-this-alias\r\n    let self: InternalDate = this;\r\n    if (type !== undefined) {\r\n      const clone = this.clone();\r\n      if (nextValue !== undefined) {\r\n        clone.set(type, nextValue);\r\n      }\r\n      self = clone;\r\n    }\r\n    if (\r\n      checks.includes(InternalDateValidateCheck.NotNull) &&\r\n      !InternalDateValidator.checkForNull(self.getComponentsRaw(), type)\r\n    ) {\r\n      return false;\r\n    }\r\n    if (\r\n      checks.includes(InternalDateValidateCheck.Number) &&\r\n      !Object.values(self.getComponentsRaw()).every(InternalDateValidator.testParseToNumber)\r\n    ) {\r\n      return false;\r\n    }\r\n    if (\r\n      checks.includes(InternalDateValidateCheck.Limits) &&\r\n      !InternalDateValidator.checkLimits(self.getComponentsLikeNumber(), type)\r\n    ) {\r\n      return false;\r\n    }\r\n    if (\r\n      checks.includes(InternalDateValidateCheck.Native) &&\r\n      !InternalDateValidator.compareWithNativeDate(self.getComponentsLikeNumber())\r\n    ) {\r\n      return false;\r\n    }\r\n    if (checks.includes(InternalDateValidateCheck.Range)) {\r\n      return type !== undefined\r\n        ? InternalDateValidator.checkRangePiecemeal(\r\n            type,\r\n            self.getComponentsLikeNumber(),\r\n            self.start && self.start.getComponentsLikeNumber(),\r\n            self.end && self.end.getComponentsLikeNumber(),\r\n          )\r\n        : InternalDateValidator.checkRangeFully(\r\n            self.toNumber(),\r\n            self.start && self.start.toNumber(),\r\n            self.end && self.end.toNumber(),\r\n          );\r\n    }\r\n    return true;\r\n  }\r\n\r\n  public toFragments(\r\n    settings: InternalDateToFragmentsSettings = {},\r\n    components: InternalDateComponentsRaw = this.getComponentsRaw(),\r\n  ): InternalDateFragment[] {\r\n    return InternalDateTransformer.dateToFragments(components, {\r\n      order: this.order,\r\n      separator: this.separator,\r\n      ...settings,\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Перевод даты в числовое представление (**НЕ** аналог `timestamp`)\r\n   * Предназначено для быстрого сравнивания дат `<=>`\r\n   */\r\n  public toNumber(): number {\r\n    return Number(\r\n      this.toFragments({ order: InternalDateOrder.YMD, withPad: true })\r\n        .map(({ valueWithPad }) => valueWithPad)\r\n        .join(''),\r\n    );\r\n  }\r\n\r\n  public toString(settings: InternalDateToFragmentsSettings = {}): string {\r\n    return this.toFragments({ withPad: true, withSeparator: true, ...settings })\r\n      .filter(({ value }) => value !== null)\r\n      .map(({ type, valueWithPad, value }) =>\r\n        settings.withPad && type !== InternalDateComponentType.Separator ? valueWithPad : value,\r\n      )\r\n      .join('');\r\n  }\r\n\r\n  public toInternalString(): string {\r\n    return InternalDateTransformer.dateToInternalString(this.getComponentsRaw());\r\n  }\r\n\r\n  public toNativeFormat(): InternalDateComponentsNumber | null {\r\n    const components = this.getComponentsLikeNumber();\r\n    if (InternalDateValidator.compareWithNativeDate(components)) {\r\n      return { ...components, month: components.month - 1 };\r\n    }\r\n    return null;\r\n  }\r\n\r\n  public clone(): InternalDate {\r\n    return new InternalDate({ order: this.order, separator: this.separator })\r\n      .setComponents({ ...this.components })\r\n      .setRangeStart(this.start && this.start.clone())\r\n      .setRangeEnd(this.end && this.end.clone());\r\n  }\r\n\r\n  public duplicateOf(pattern: InternalDate): InternalDate {\r\n    return this.setComponents(pattern.getComponentsRaw());\r\n  }\r\n\r\n  public restore(type: InternalDateComponentType | null = null): InternalDate {\r\n    const prev = this.getComponentsRaw();\r\n    const today = InternalDateGetter.getTodayComponents();\r\n\r\n    if (prev.year === null && prev.month === null && prev.date === null) {\r\n      return this;\r\n    }\r\n\r\n    const restoreYear =\r\n      prev.year !== null && InternalDateValidator.testParseToNumber(prev.year)\r\n        ? prev.year > 50 && prev.year < 100\r\n          ? Number(prev.year) + 1900\r\n          : prev.year > 0 && prev.year < 51\r\n          ? Number(prev.year) + 2000\r\n          : prev.year\r\n        : today.year;\r\n    if (\r\n      (type === null && restoreYear !== prev.year) ||\r\n      type === InternalDateComponentType.Year ||\r\n      type === InternalDateComponentType.All\r\n    ) {\r\n      this.setYear(restoreYear);\r\n    }\r\n    if (\r\n      (type === null && prev.month === null) ||\r\n      type === InternalDateComponentType.Month ||\r\n      type === InternalDateComponentType.All\r\n    ) {\r\n      this.setMonth(today.month);\r\n    }\r\n    if (\r\n      (type === null && prev.date === null) ||\r\n      type === InternalDateComponentType.Date ||\r\n      type === InternalDateComponentType.All\r\n    ) {\r\n      this.setDate(today.date);\r\n    }\r\n    return this;\r\n  }\r\n\r\n  public cutOffExcess(\r\n    type: InternalDateComponentType | null = null,\r\n    { isLoop = false, isRange, isCutFeb = false }: InternalDateChangeSettings = {},\r\n  ): InternalDate {\r\n    const { year, month, date } = this.components;\r\n    if ((type === null || type === InternalDateComponentType.Year) && InternalDateValidator.testParseToNumber(year)) {\r\n      this.shiftYear(0, { isLoop, isRange, isCutFeb });\r\n    }\r\n    if ((type === null || type === InternalDateComponentType.Month) && InternalDateValidator.testParseToNumber(month)) {\r\n      this.shiftMonth(0, { isLoop, isRange, isCutFeb });\r\n    }\r\n    if ((type === null || type === InternalDateComponentType.Date) && InternalDateValidator.testParseToNumber(date)) {\r\n      this.shiftDate(0, { isLoop, isRange, isCutFeb });\r\n    }\r\n    return this;\r\n  }\r\n\r\n  public isIncomplete(): boolean {\r\n    return !this.isEmpty() && Object.values(this.components).some(component => component === null);\r\n  }\r\n\r\n  public isEmpty(): boolean {\r\n    return Object.values(this.components).every(component => component === null);\r\n  }\r\n\r\n  public isEqualComponentDate(type: InternalDateComponentType | null, compared: InternalDate): boolean {\r\n    return this.get(type) === compared.get(type);\r\n  }\r\n\r\n  public isEqual(compared: InternalDate): boolean {\r\n    return (\r\n      InternalDateValidator.isEqualDateValues(this, compared) &&\r\n      InternalDateValidator.isEqualDateFormats(this, compared)\r\n    );\r\n  }\r\n\r\n  private getMinValue(type: InternalDateComponentType, isRange?: boolean): number {\r\n    if (isRange === true && this.start !== null) {\r\n      return Number(\r\n        InternalDateCalculator.calcRangeStartDateComponent(\r\n          type,\r\n          this.getComponentsLikeNumber(),\r\n          this.start.getComponentsLikeNumber(),\r\n        ),\r\n      );\r\n    }\r\n    return InternalDateGetter.getDefaultMin(type);\r\n  }\r\n\r\n  private getMaxValue(\r\n    type: InternalDateComponentType,\r\n    { isRange, isCutFeb }: { isRange?: boolean; isCutFeb?: boolean } = {},\r\n  ): number {\r\n    if (isRange && this.end !== null) {\r\n      return Number(\r\n        InternalDateCalculator.calcRangeEndDateComponent(\r\n          type,\r\n          this.getComponentsLikeNumber(),\r\n          this.end.getComponentsLikeNumber(),\r\n        ),\r\n      );\r\n    }\r\n    if (!isCutFeb) {\r\n      return InternalDateGetter.getDefaultMax(type);\r\n    }\r\n    return InternalDateGetter.getDefaultMax(type, this.getComponentsLikeNumber());\r\n  }\r\n}\r\n"]}