{"version":3,"sources":["index.ts"],"names":["noop","Animation","animating","currentPosition","currentVelocity","rafId","target","deltaHandler","animationEndHandler","reset","inProgress","cancel","finish","animate","amount","onDelta","onEnd","animateInternal","nextPosition","nextVelocity","delta"],"mappings":"yJAAA;;AAEA;;AAEA,IAAMA,IAAI,GAAG,SAAPA,IAAO,GAAoB;AAC/B;AACD,CAFD;;AAIO,IAAMC,SAAS,GAAG,SAAZA,SAAY,GAAM;AAC7B,MAAIC,SAAS,GAAG,KAAhB;AACA,MAAIC,eAAe,GAAG,CAAtB;AACA,MAAIC,eAAe,GAAG,CAAtB;AACA,MAAIC,KAAK,GAAG,CAAZ;AACA,MAAIC,MAAM,GAAG,CAAb;;AAEA,MAAIC,YAAY,GAAGP,IAAnB;AACA,MAAIQ,mBAAmB,GAAGR,IAA1B;;AAEA,WAASS,KAAT,GAAiB;AACfL,IAAAA,eAAe,GAAG,CAAlB;AACAD,IAAAA,eAAe,GAAG,CAAlB;AACAG,IAAAA,MAAM,GAAG,CAAT;AACAJ,IAAAA,SAAS,GAAG,KAAZ;AACAK,IAAAA,YAAY,GAAGP,IAAf;AACAQ,IAAAA,mBAAmB,GAAGR,IAAtB;AACD;;AAED,WAASU,UAAT,GAAsB;AACpB,WAAOR,SAAP;AACD;;AAED,WAASS,MAAT,GAAkB;AAChB,qBAAqBN,KAArB;AACAI,IAAAA,KAAK;AACN;;AAED,WAASG,MAAT,GAAkB;AAChBJ,IAAAA,mBAAmB;AACnBG,IAAAA,MAAM;AACP;;AAED,WAASE,OAAT,CAAiBC,MAAjB,EAAiCC,OAAjC,EAAgEC,KAAhE,EAA0F,KAA1BA,KAA0B,cAA1BA,KAA0B,GAANhB,IAAM;AACxFM,IAAAA,MAAM,IAAIQ,MAAV;AACAP,IAAAA,YAAY,GAAGQ,OAAf;AACAP,IAAAA,mBAAmB,GAAGQ,KAAtB;;AAEA,QAAMC,eAAe,GAAG,SAAlBA,eAAkB,GAAM;AAC5Bf,MAAAA,SAAS,GAAG,IAAZ,CAD4B;AAES,6BAAQC,eAAR,EAAyBC,eAAzB,EAA0CE,MAA1C,CAFT,CAErBY,YAFqB,eAEPC,YAFO;AAG5B,UAAMC,KAAK,GAAGF,YAAY,GAAGf,eAA7B;;AAEAI,MAAAA,YAAY,CAACa,KAAD,CAAZ;;AAEA,UAAIF,YAAY,KAAKZ,MAAjB,IAA2Ba,YAAY,KAAK,CAAhD,EAAmD;AACjDX,QAAAA,mBAAmB;AACnBC,QAAAA,KAAK;AACL;AACD;;AAEDN,MAAAA,eAAe,GAAGe,YAAlB;AACAd,MAAAA,eAAe,GAAGe,YAAlB;;AAEAd,MAAAA,KAAK,GAAG,kBAAsBY,eAAtB,CAAR;AACD,KAjBD;;AAmBA,QAAI,CAACP,UAAU,EAAf,EAAmB;AACjBO,MAAAA,eAAe;AAChB;AACF;;AAED,SAAO;AACLJ,IAAAA,OAAO,EAAPA,OADK;AAELH,IAAAA,UAAU,EAAVA,UAFK;AAGLC,IAAAA,MAAM,EAANA,MAHK;AAILC,IAAAA,MAAM,EAANA,MAJK,EAAP;;AAMD,CApEM,C","sourcesContent":["import requestAnimationFrame, { cancel as cancelAnimationFrame } from 'raf';\r\n\r\nimport { stepper } from './stepper';\r\n\r\nconst noop = (...args: any[]) => {\r\n  /* do nothing */\r\n};\r\n\r\nexport const Animation = () => {\r\n  let animating = false;\r\n  let currentPosition = 0;\r\n  let currentVelocity = 0;\r\n  let rafId = 0;\r\n  let target = 0;\r\n\r\n  let deltaHandler = noop;\r\n  let animationEndHandler = noop;\r\n\r\n  function reset() {\r\n    currentVelocity = 0;\r\n    currentPosition = 0;\r\n    target = 0;\r\n    animating = false;\r\n    deltaHandler = noop;\r\n    animationEndHandler = noop;\r\n  }\r\n\r\n  function inProgress() {\r\n    return animating;\r\n  }\r\n\r\n  function cancel() {\r\n    cancelAnimationFrame(rafId);\r\n    reset();\r\n  }\r\n\r\n  function finish() {\r\n    animationEndHandler();\r\n    cancel();\r\n  }\r\n\r\n  function animate(amount: number, onDelta: (x0: number) => void, onEnd: () => void = noop) {\r\n    target += amount;\r\n    deltaHandler = onDelta;\r\n    animationEndHandler = onEnd;\r\n\r\n    const animateInternal = () => {\r\n      animating = true;\r\n      const [nextPosition, nextVelocity] = stepper(currentPosition, currentVelocity, target);\r\n      const delta = nextPosition - currentPosition;\r\n\r\n      deltaHandler(delta);\r\n\r\n      if (nextPosition === target && nextVelocity === 0) {\r\n        animationEndHandler();\r\n        reset();\r\n        return;\r\n      }\r\n\r\n      currentPosition = nextPosition;\r\n      currentVelocity = nextVelocity;\r\n\r\n      rafId = requestAnimationFrame(animateInternal);\r\n    };\r\n\r\n    if (!inProgress()) {\r\n      animateInternal();\r\n    }\r\n  }\r\n\r\n  return {\r\n    animate,\r\n    inProgress,\r\n    cancel,\r\n    finish,\r\n  };\r\n};\r\n"]}