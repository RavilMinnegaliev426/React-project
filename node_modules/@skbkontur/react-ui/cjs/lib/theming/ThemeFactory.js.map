{"version":3,"sources":["ThemeFactory.ts"],"names":["IS_THEME_KEY","Object","defineProperty","DefaultThemeInternal","value","writable","enumerable","configurable","ThemeFactory","create","theme","baseTheme","freeze","setPrototypeOf","isFullTheme","overrideDefaultTheme","keys","forEach","variableName","descriptor","getOwnPropertyDescriptor","getKeys","key","includes","push","getPrototypeOf","sort"],"mappings":"qEAAA;;;;AAIA,IAAMA,YAAY,GAAG,uBAArB;;AAEAC,MAAM,CAACC,cAAP,CAAsBC,kCAAtB,EAA4CH,YAA5C,EAA0D;AACxDI,EAAAA,KAAK,EAAE,IADiD;AAExDC,EAAAA,QAAQ,EAAE,KAF8C;AAGxDC,EAAAA,UAAU,EAAE,KAH4C;AAIxDC,EAAAA,YAAY,EAAE,KAJ0C,EAA1D,E;;;AAOaC,Y;AACGC,EAAAA,M,GAAd,gBAAmCC,KAAnC,EAAuDC,SAAvD,EAAqH,KAA9DA,SAA8D,cAA9DA,SAA8D,GAA3CR,kCAA2C;AACnH,WAAOF,MAAM,CAACW,MAAP,CAAcX,MAAM,CAACY,cAAP,CAAsBH,KAAtB,EAA6BC,SAA7B,CAAd,CAAP;AACD,G;;AAEaG,EAAAA,W,GAAd,qBAA0BJ,KAA1B,EAAkE;AAChE;AACA,WAAOA,KAAK,CAACV,YAAD,CAAL,KAAwB,IAA/B;AACD,G;;AAEae,EAAAA,oB,GAAd,8BAAmCL,KAAnC,EAAmD;AACjDT,IAAAA,MAAM,CAACe,IAAP,CAAYN,KAAZ,EAAmBO,OAAnB,CAA2B,UAAAC,YAAY,EAAI;AACzC,UAAMC,UAAU,GAAGlB,MAAM,CAACmB,wBAAP,CAAgCV,KAAhC,EAAuCQ,YAAvC,CAAnB;AACAjB,MAAAA,MAAM,CAACC,cAAP,CAAsBC,kCAAtB,EAA4Ce,YAA5C,EAA0DC,UAA1D;AACD,KAHD;AAID,G;;AAEaE,EAAAA,O,GAAd,iBAAuCX,KAAvC,EAAiD;AAC/C,QAAMM,IAAoB,GAAG,EAA7B;AACA,WAAON,KAAK,IAAI,IAAhB,EAAsB;AACnBT,MAAAA,MAAM,CAACe,IAAP,CAAYN,KAAZ,CAAD,CAAuCO,OAAvC,CAA+C,UAAAK,GAAG,EAAI;AACpD,YAAI,CAACN,IAAI,CAACO,QAAL,CAAcD,GAAd,CAAL,EAAyB;AACvBN,UAAAA,IAAI,CAACQ,IAAL,CAAUF,GAAV;AACD;AACF,OAJD;AAKAZ,MAAAA,KAAK,GAAGT,MAAM,CAACwB,cAAP,CAAsBf,KAAtB,CAAR;AACD;AACD,WAAOM,IAAI,CAACU,IAAL,EAAP;AACD,G","sourcesContent":["import { DefaultThemeInternal } from '../../internal/themes/DefaultTheme';\r\n\r\nimport { Theme, ThemeIn } from './Theme';\r\n\r\nconst IS_THEME_KEY = '__IS_REACT_UI_THEME__';\r\n\r\nObject.defineProperty(DefaultThemeInternal, IS_THEME_KEY, {\r\n  value: true,\r\n  writable: false,\r\n  enumerable: false,\r\n  configurable: false,\r\n});\r\n\r\nexport class ThemeFactory {\r\n  public static create<T extends {}>(theme: ThemeIn & T, baseTheme: Theme = DefaultThemeInternal): Readonly<Theme & T> {\r\n    return Object.freeze(Object.setPrototypeOf(theme, baseTheme));\r\n  }\r\n\r\n  public static isFullTheme(theme: ThemeIn | Theme): theme is Theme {\r\n    // @ts-ignore\r\n    return theme[IS_THEME_KEY] === true;\r\n  }\r\n\r\n  public static overrideDefaultTheme(theme: ThemeIn) {\r\n    Object.keys(theme).forEach(variableName => {\r\n      const descriptor = Object.getOwnPropertyDescriptor(theme, variableName)!;\r\n      Object.defineProperty(DefaultThemeInternal, variableName, descriptor);\r\n    });\r\n  }\r\n\r\n  public static getKeys<T extends Theme>(theme: T) {\r\n    const keys: Array<keyof T> = [];\r\n    while (theme != null) {\r\n      (Object.keys(theme) as Array<keyof T>).forEach(key => {\r\n        if (!keys.includes(key)) {\r\n          keys.push(key);\r\n        }\r\n      });\r\n      theme = Object.getPrototypeOf(theme);\r\n    }\r\n    return keys.sort();\r\n  }\r\n}\r\n"]}