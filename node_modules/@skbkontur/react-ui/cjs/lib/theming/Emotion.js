"use strict";var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");exports.__esModule = true;exports.memoizeStyle = exports.cssName = exports.cache = exports.sheet = exports.css = exports.keyframes = exports.injectGlobal = exports.getRegisteredStyles = exports.merge = exports.cx = exports.hydrate = exports.flush = void 0;var _createEmotion2 = _interopRequireDefault(require("create-emotion"));
var _stylisPluginExtraScope = _interopRequireDefault(require("stylis-plugin-extra-scope"));

var _Upgrades = require("../Upgrades");



var PREFIX = 'react-ui';

var scope = new Array(_Upgrades.Upgrade.getSpecificityLevel()).fill("." + PREFIX).join('');var _createEmotion =












(0, _createEmotion2.default)({
  key: PREFIX,
  stylisPlugins: scope ? [(0, _stylisPluginExtraScope.default)(scope)] : undefined }),flush = _createEmotion.flush,hydrate = _createEmotion.hydrate,cx = _createEmotion.cx,merge = _createEmotion.merge,getRegisteredStyles = _createEmotion.getRegisteredStyles,injectGlobal = _createEmotion.injectGlobal,keyframes = _createEmotion.keyframes,css = _createEmotion.css,sheet = _createEmotion.sheet,cache = _createEmotion.cache;exports.cache = cache;exports.sheet = sheet;exports.css = css;exports.keyframes = keyframes;exports.injectGlobal = injectGlobal;exports.getRegisteredStyles = getRegisteredStyles;exports.merge = merge;exports.cx = cx;exports.hydrate = hydrate;exports.flush = flush;


var cssName = function cssName(className) {return "." + className;};exports.cssName = cssName;

function isZeroArgs(fn) {
  return fn.length == 0;
}

var memoize = function memoize(fn) {
  if (isZeroArgs(fn)) {
    var isCalled = false;
    var result;
    return function () {
      if (!isCalled) {
        isCalled = true;
        result = fn();
      }
      return result;
    };
  }

  var cache = new WeakMap();
  return function (arg) {
    if (!cache.has(arg)) cache.set(arg, fn(arg));
    return cache.get(arg);
  };
};

var memoizeStyle = function memoizeStyle(
styles)
{
  Object.keys(styles).forEach(function (className) {return styles[className] = memoize(styles[className]);});
  return styles;
};exports.memoizeStyle = memoizeStyle;