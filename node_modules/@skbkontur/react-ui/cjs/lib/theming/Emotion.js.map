{"version":3,"sources":["Emotion.ts"],"names":["PREFIX","scope","Array","Upgrade","getSpecificityLevel","fill","join","key","stylisPlugins","undefined","flush","hydrate","cx","merge","getRegisteredStyles","injectGlobal","keyframes","css","sheet","cache","cssName","className","isZeroArgs","fn","length","memoize","isCalled","result","WeakMap","arg","has","set","get","memoizeStyle","styles","Object","keys","forEach"],"mappings":"kWAAA;AACA;;AAEA;;;;AAIA,IAAMA,MAAM,GAAG,UAAf;;AAEA,IAAMC,KAAK,GAAG,IAAIC,KAAJ,CAAUC,kBAAQC,mBAAR,EAAV,EAAyCC,IAAzC,OAAkDL,MAAlD,EAA4DM,IAA5D,CAAiE,EAAjE,CAAd,C;;;;;;;;;;;;;AAaI,6BAAc;AAChBC,EAAAA,GAAG,EAAEP,MADW;AAEhBQ,EAAAA,aAAa,EAAEP,KAAK,GAAG,CAAC,qCAAiBA,KAAjB,CAAD,CAAH,GAA+BQ,SAFnC,EAAd,C,CAVFC,K,kBAAAA,K,CACAC,O,kBAAAA,O,CACAC,E,kBAAAA,E,CACAC,K,kBAAAA,K,CACAC,mB,kBAAAA,mB,CACAC,Y,kBAAAA,Y,CACAC,S,kBAAAA,S,CACAC,G,kBAAAA,G,CACAC,K,kBAAAA,K,CACAC,K,kBAAAA,K;;;AAMK,IAAMC,OAAO,GAAG,SAAVA,OAAU,CAACC,SAAD,gBAAmCA,SAAnC,EAAhB,C;;AAEP,SAASC,UAAT,CAAwDC,EAAxD,EAAyF;AACvF,SAAOA,EAAE,CAACC,MAAH,IAAa,CAApB;AACD;;AAED,IAAMC,OAAO,GAAG,SAAVA,OAAU,CAAsBF,EAAtB,EAAuF;AACrG,MAAID,UAAU,CAACC,EAAD,CAAd,EAAoB;AAClB,QAAIG,QAAQ,GAAG,KAAf;AACA,QAAIC,MAAJ;AACA,WAAO,YAAM;AACX,UAAI,CAACD,QAAL,EAAe;AACbA,QAAAA,QAAQ,GAAG,IAAX;AACAC,QAAAA,MAAM,GAAGJ,EAAE,EAAX;AACD;AACD,aAAOI,MAAP;AACD,KAND;AAOD;;AAED,MAAMR,KAAK,GAAG,IAAIS,OAAJ,EAAd;AACA,SAAO,UAACC,GAAD,EAAY;AACjB,QAAI,CAACV,KAAK,CAACW,GAAN,CAAUD,GAAV,CAAL,EAAqBV,KAAK,CAACY,GAAN,CAAUF,GAAV,EAAeN,EAAE,CAACM,GAAD,CAAjB;AACrB,WAAOV,KAAK,CAACa,GAAN,CAAUH,GAAV,CAAP;AACD,GAHD;AAID,CAlBD;;AAoBO,IAAMI,YAAY,GAAG,SAAfA,YAAe;AAC1BC,MAD0B;AAEpB;AACNC,EAAAA,MAAM,CAACC,IAAP,CAAYF,MAAZ,EAAoBG,OAApB,CAA4B,UAAAhB,SAAS,UAAKa,MAAM,CAACb,SAAD,CAAN,GAA+BI,OAAO,CAACS,MAAM,CAACb,SAAD,CAAP,CAA3C,EAArC;AACA,SAAOa,MAAP;AACD,CALM,C","sourcesContent":["import createEmotion from 'create-emotion';\r\nimport extraScopePlugin from 'stylis-plugin-extra-scope';\r\n\r\nimport { Upgrade } from '../Upgrades';\r\n\r\nimport { Theme } from './Theme';\r\n\r\nconst PREFIX = 'react-ui';\r\n\r\nconst scope = new Array(Upgrade.getSpecificityLevel()).fill(`.${PREFIX}`).join('');\r\n\r\nexport const {\r\n  flush,\r\n  hydrate,\r\n  cx,\r\n  merge,\r\n  getRegisteredStyles,\r\n  injectGlobal,\r\n  keyframes,\r\n  css,\r\n  sheet,\r\n  cache,\r\n} = createEmotion({\r\n  key: PREFIX,\r\n  stylisPlugins: scope ? [extraScopePlugin(scope)] : undefined,\r\n});\r\n\r\nexport const cssName = (className: string): string => `.${className}`;\r\n\r\nfunction isZeroArgs<R, T extends (...args: any[]) => R>(fn: T | Function): fn is () => R {\r\n  return fn.length == 0;\r\n}\r\n\r\nconst memoize = <A extends object, R>(fn: (() => R) | ((arg: A) => R)): (() => R) | ((arg: A) => R) => {\r\n  if (isZeroArgs(fn)) {\r\n    let isCalled = false;\r\n    let result: R;\r\n    return () => {\r\n      if (!isCalled) {\r\n        isCalled = true;\r\n        result = fn();\r\n      }\r\n      return result;\r\n    };\r\n  }\r\n\r\n  const cache = new WeakMap();\r\n  return (arg: A) => {\r\n    if (!cache.has(arg)) cache.set(arg, fn(arg));\r\n    return cache.get(arg);\r\n  };\r\n};\r\n\r\nexport const memoizeStyle = <S extends { [className: string]: (() => string) | ((t: Theme) => string) }>(\r\n  styles: S,\r\n): S => {\r\n  Object.keys(styles).forEach(className => (styles[className as keyof S] = memoize(styles[className]) as S[keyof S]));\r\n  return styles;\r\n};\r\n"]}