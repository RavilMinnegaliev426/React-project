"use strict";exports.__esModule = true;exports.someKeys = exports.isModShift = exports.isUnmodified = exports.isModified = exports.isKeyFs = exports.isKeyChar = exports.isKeyNumber = exports.isKeyArrow = exports.isKeyArrowVertical = exports.isKeyArrowHorizontal = exports.isCodePeriod = exports.isCodeComma = exports.isCodeIntlBackslash = exports.isCodeBackslash = exports.isCodeSlash = exports.isCodeNumpadSubtract = exports.isCodeNumpadDivide = exports.isCodeNumpadDecimal = exports.isCodeMinus = exports.isKeySpace = exports.isKeyArrowLeft = exports.isKeyArrowDown = exports.isKeyArrowRight = exports.isKeyArrowUp = exports.isKeyEnter = exports.isKeyTab = exports.isKeyInsert = exports.isKeyCapsLock = exports.isKeyBackspace = exports.isKeyDelete = exports.isKeyAlt = exports.isKeyShift = exports.isKeyControl = exports.isKeyMeta = exports.isKeyEnd = exports.isKeyHome = exports.isKeyEscape = exports.isShortcutSelectAll = exports.isShortcutCut = exports.isShortcutPaste = exports.isShortcutCopy = void 0;var _utils = require("../../utils");

var _extractCode = require("./extractCode");
var _KeyboardEventCodes = require("./KeyboardEventCodes");






var isShortcutCopy = function isShortcutCopy(e) {return (
    (_utils.isMac ? e.metaKey : e.ctrlKey) && (0, _extractCode.extractCode)(e) === _KeyboardEventCodes.KeyboardEventCodes.KeyC ||
    !_utils.isMac && e.ctrlKey && isKeyInsert(e) ||
    e.key === 'Copy');};exports.isShortcutCopy = isShortcutCopy;

var isShortcutPaste = function isShortcutPaste(e) {return (
    (_utils.isMac ? e.metaKey : e.ctrlKey) && (0, _extractCode.extractCode)(e) === _KeyboardEventCodes.KeyboardEventCodes.KeyV ||
    !_utils.isMac && e.shiftKey && isKeyInsert(e) ||
    e.key === 'Paste');};exports.isShortcutPaste = isShortcutPaste;

var isShortcutCut = function isShortcutCut(e) {return (
    (_utils.isMac ? e.metaKey : e.ctrlKey) && (0, _extractCode.extractCode)(e) === _KeyboardEventCodes.KeyboardEventCodes.KeyX ||
    !_utils.isMac && e.shiftKey && isKeyDelete(e) ||
    e.key === 'Cut');};exports.isShortcutCut = isShortcutCut;

var isShortcutSelectAll = function isShortcutSelectAll(e) {return (_utils.isMac ? e.metaKey : e.ctrlKey) && (0, _extractCode.extractCode)(e) === _KeyboardEventCodes.KeyboardEventCodes.KeyA;};exports.isShortcutSelectAll = isShortcutSelectAll;

var isKeyEscape = function isKeyEscape(e) {return e.key === 'Escape' || e.key === 'Esc';};exports.isKeyEscape = isKeyEscape;
var isKeyHome = function isKeyHome(e) {return e.key === 'Home';};exports.isKeyHome = isKeyHome;
var isKeyEnd = function isKeyEnd(e) {return e.key === 'End';};exports.isKeyEnd = isKeyEnd;
var isKeyMeta = function isKeyMeta(e) {return e.key === 'Meta' || e.key === 'Win';};exports.isKeyMeta = isKeyMeta;
var isKeyControl = function isKeyControl(e) {return e.key === 'Control';};exports.isKeyControl = isKeyControl;
var isKeyShift = function isKeyShift(e) {return e.key === 'Shift';};exports.isKeyShift = isKeyShift;
var isKeyAlt = function isKeyAlt(e) {return e.key === 'Alt';};exports.isKeyAlt = isKeyAlt;
var isKeyDelete = function isKeyDelete(e) {return e.key === 'Delete' || e.key === 'Del';};exports.isKeyDelete = isKeyDelete;
var isKeyBackspace = function isKeyBackspace(e) {return e.key === 'Backspace';};exports.isKeyBackspace = isKeyBackspace;
var isKeyCapsLock = function isKeyCapsLock(e) {return e.key === 'CapsLock';};exports.isKeyCapsLock = isKeyCapsLock;
var isKeyInsert = function isKeyInsert(e) {return e.key === 'Insert';};exports.isKeyInsert = isKeyInsert;
var isKeyTab = function isKeyTab(e) {return e.key === 'Tab';};exports.isKeyTab = isKeyTab;
var isKeyEnter = function isKeyEnter(e) {return e.key === 'Enter';};exports.isKeyEnter = isKeyEnter;
var isKeyArrowUp = function isKeyArrowUp(e) {return e.key === 'ArrowUp' || e.key === 'Up';};exports.isKeyArrowUp = isKeyArrowUp;
var isKeyArrowRight = function isKeyArrowRight(e) {return e.key === 'ArrowRight' || e.key === 'Right';};exports.isKeyArrowRight = isKeyArrowRight;
var isKeyArrowDown = function isKeyArrowDown(e) {return e.key === 'ArrowDown' || e.key === 'Down';};exports.isKeyArrowDown = isKeyArrowDown;
var isKeyArrowLeft = function isKeyArrowLeft(e) {return e.key === 'ArrowLeft' || e.key === 'Left';};exports.isKeyArrowLeft = isKeyArrowLeft;
var isKeySpace = function isKeySpace(e) {return e.key === ' ' || e.key === 'Spacebar';};exports.isKeySpace = isKeySpace;

var isCodeMinus = function isCodeMinus(e) {return (0, _extractCode.extractCode)(e) === _KeyboardEventCodes.KeyboardEventCodes.Minus;};exports.isCodeMinus = isCodeMinus;
var isCodeNumpadDecimal = function isCodeNumpadDecimal(e) {return (0, _extractCode.extractCode)(e) === _KeyboardEventCodes.KeyboardEventCodes.NumpadDecimal;};exports.isCodeNumpadDecimal = isCodeNumpadDecimal;
var isCodeNumpadDivide = function isCodeNumpadDivide(e) {return (0, _extractCode.extractCode)(e) === _KeyboardEventCodes.KeyboardEventCodes.NumpadDivide;};exports.isCodeNumpadDivide = isCodeNumpadDivide;
var isCodeNumpadSubtract = function isCodeNumpadSubtract(e) {return (0, _extractCode.extractCode)(e) === _KeyboardEventCodes.KeyboardEventCodes.NumpadSubtract;};exports.isCodeNumpadSubtract = isCodeNumpadSubtract;
var isCodeSlash = function isCodeSlash(e) {return (0, _extractCode.extractCode)(e) === _KeyboardEventCodes.KeyboardEventCodes.Slash;};exports.isCodeSlash = isCodeSlash;
var isCodeBackslash = function isCodeBackslash(e) {return (0, _extractCode.extractCode)(e) === _KeyboardEventCodes.KeyboardEventCodes.Backslash;};exports.isCodeBackslash = isCodeBackslash;
var isCodeIntlBackslash = function isCodeIntlBackslash(e) {return (0, _extractCode.extractCode)(e) === _KeyboardEventCodes.KeyboardEventCodes.IntlBackslash;};exports.isCodeIntlBackslash = isCodeIntlBackslash;
var isCodeComma = function isCodeComma(e) {return (0, _extractCode.extractCode)(e) === _KeyboardEventCodes.KeyboardEventCodes.Comma;};exports.isCodeComma = isCodeComma;
var isCodePeriod = function isCodePeriod(e) {return (0, _extractCode.extractCode)(e) === _KeyboardEventCodes.KeyboardEventCodes.Period;};exports.isCodePeriod = isCodePeriod;

var isKeyArrowHorizontal = function isKeyArrowHorizontal(e) {return isKeyArrowRight(e) || isKeyArrowLeft(e);};exports.isKeyArrowHorizontal = isKeyArrowHorizontal;
var isKeyArrowVertical = function isKeyArrowVertical(e) {return isKeyArrowUp(e) || isKeyArrowDown(e);};exports.isKeyArrowVertical = isKeyArrowVertical;
var isKeyArrow = function isKeyArrow(e) {return isKeyArrowHorizontal(e) || isKeyArrowVertical(e);};exports.isKeyArrow = isKeyArrow;
var isKeyNumber = function isKeyNumber(e) {return /^\d+$/.test(e.key);};exports.isKeyNumber = isKeyNumber;
var isKeyChar = function isKeyChar(e) {return e.key.trim().length === 1;};exports.isKeyChar = isKeyChar;
var isKeyFs = function isKeyFs(e) {return /^(?:F[1-9]|F1[0-2]|Soft[1-4])$/.test(e.key);};exports.isKeyFs = isKeyFs;

var isModified = function isModified(is) {return function (e) {return (e.shiftKey || e.metaKey || e.ctrlKey || e.altKey) && (is ? is(e) : true);};};exports.isModified = isModified;
var isUnmodified = function isUnmodified(is) {return function (e) {return !isModified()(e) && (is ? is(e) : true);};};exports.isUnmodified = isUnmodified;
var isModShift = function isModShift(is) {return function (e) {return e.shiftKey && (is ? is(e) : true);};};exports.isModShift = isModShift;

var someKeys = function someKeys() {for (var _len = arguments.length, iss = new Array(_len), _key = 0; _key < _len; _key++) {iss[_key] = arguments[_key];}return function (e) {return iss.some(function (is) {return is(e);});};};exports.someKeys = someKeys;