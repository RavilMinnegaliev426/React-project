{"version":3,"sources":["identifiers.ts"],"names":["isShortcutCopy","e","isMac","metaKey","ctrlKey","Codes","KeyC","isKeyInsert","key","isShortcutPaste","KeyV","shiftKey","isShortcutCut","KeyX","isKeyDelete","isShortcutSelectAll","KeyA","isKeyEscape","isKeyHome","isKeyEnd","isKeyMeta","isKeyControl","isKeyShift","isKeyAlt","isKeyBackspace","isKeyCapsLock","isKeyTab","isKeyEnter","isKeyArrowUp","isKeyArrowRight","isKeyArrowDown","isKeyArrowLeft","isKeySpace","isCodeMinus","Minus","isCodeNumpadDecimal","NumpadDecimal","isCodeNumpadDivide","NumpadDivide","isCodeNumpadSubtract","NumpadSubtract","isCodeSlash","Slash","isCodeBackslash","Backslash","isCodeIntlBackslash","IntlBackslash","isCodeComma","Comma","isCodePeriod","Period","isKeyArrowHorizontal","isKeyArrowVertical","isKeyArrow","isKeyNumber","test","isKeyChar","trim","length","isKeyFs","isModified","is","altKey","isUnmodified","isModShift","someKeys","iss","some"],"mappings":"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","sourcesContent":["import { isMac } from '../../utils';\r\n\r\nimport { extractCode } from './extractCode';\r\nimport { KeyboardEventCodes as Codes } from './KeyboardEventCodes';\r\n\r\ntype E = React.KeyboardEvent<HTMLElement> | KeyboardEvent;\r\ntype IS = (e: E) => boolean;\r\ntype ISMod = (is?: IS) => IS;\r\ntype ISSome = (...is: IS[]) => IS;\r\n\r\nexport const isShortcutCopy: IS = e =>\r\n  ((isMac ? e.metaKey : e.ctrlKey) && extractCode(e) === Codes.KeyC) ||\r\n  (!isMac && e.ctrlKey && isKeyInsert(e)) ||\r\n  e.key === 'Copy';\r\n\r\nexport const isShortcutPaste: IS = e =>\r\n  ((isMac ? e.metaKey : e.ctrlKey) && extractCode(e) === Codes.KeyV) ||\r\n  (!isMac && e.shiftKey && isKeyInsert(e)) ||\r\n  e.key === 'Paste';\r\n\r\nexport const isShortcutCut: IS = e =>\r\n  ((isMac ? e.metaKey : e.ctrlKey) && extractCode(e) === Codes.KeyX) ||\r\n  (!isMac && e.shiftKey && isKeyDelete(e)) ||\r\n  e.key === 'Cut';\r\n\r\nexport const isShortcutSelectAll: IS = e => (isMac ? e.metaKey : e.ctrlKey) && extractCode(e) === Codes.KeyA;\r\n\r\nexport const isKeyEscape: IS = e => e.key === 'Escape' || e.key === 'Esc';\r\nexport const isKeyHome: IS = e => e.key === 'Home';\r\nexport const isKeyEnd: IS = e => e.key === 'End';\r\nexport const isKeyMeta: IS = e => e.key === 'Meta' || e.key === 'Win';\r\nexport const isKeyControl: IS = e => e.key === 'Control';\r\nexport const isKeyShift: IS = e => e.key === 'Shift';\r\nexport const isKeyAlt: IS = e => e.key === 'Alt';\r\nexport const isKeyDelete: IS = e => e.key === 'Delete' || e.key === 'Del';\r\nexport const isKeyBackspace: IS = e => e.key === 'Backspace';\r\nexport const isKeyCapsLock: IS = e => e.key === 'CapsLock';\r\nexport const isKeyInsert: IS = e => e.key === 'Insert';\r\nexport const isKeyTab: IS = e => e.key === 'Tab';\r\nexport const isKeyEnter: IS = e => e.key === 'Enter';\r\nexport const isKeyArrowUp: IS = e => e.key === 'ArrowUp' || e.key === 'Up';\r\nexport const isKeyArrowRight: IS = e => e.key === 'ArrowRight' || e.key === 'Right';\r\nexport const isKeyArrowDown: IS = e => e.key === 'ArrowDown' || e.key === 'Down';\r\nexport const isKeyArrowLeft: IS = e => e.key === 'ArrowLeft' || e.key === 'Left';\r\nexport const isKeySpace: IS = e => e.key === ' ' || e.key === 'Spacebar';\r\n\r\nexport const isCodeMinus: IS = e => extractCode(e) === Codes.Minus;\r\nexport const isCodeNumpadDecimal: IS = e => extractCode(e) === Codes.NumpadDecimal;\r\nexport const isCodeNumpadDivide: IS = e => extractCode(e) === Codes.NumpadDivide;\r\nexport const isCodeNumpadSubtract: IS = e => extractCode(e) === Codes.NumpadSubtract;\r\nexport const isCodeSlash: IS = e => extractCode(e) === Codes.Slash;\r\nexport const isCodeBackslash: IS = e => extractCode(e) === Codes.Backslash;\r\nexport const isCodeIntlBackslash: IS = e => extractCode(e) === Codes.IntlBackslash;\r\nexport const isCodeComma: IS = e => extractCode(e) === Codes.Comma;\r\nexport const isCodePeriod: IS = e => extractCode(e) === Codes.Period;\r\n\r\nexport const isKeyArrowHorizontal: IS = e => isKeyArrowRight(e) || isKeyArrowLeft(e);\r\nexport const isKeyArrowVertical: IS = e => isKeyArrowUp(e) || isKeyArrowDown(e);\r\nexport const isKeyArrow: IS = e => isKeyArrowHorizontal(e) || isKeyArrowVertical(e);\r\nexport const isKeyNumber: IS = e => /^\\d+$/.test(e.key);\r\nexport const isKeyChar: IS = e => e.key.trim().length === 1;\r\nexport const isKeyFs: IS = e => /^(?:F[1-9]|F1[0-2]|Soft[1-4])$/.test(e.key);\r\n\r\nexport const isModified: ISMod = is => e => (e.shiftKey || e.metaKey || e.ctrlKey || e.altKey) && (is ? is(e) : true);\r\nexport const isUnmodified: ISMod = is => e => !isModified()(e) && (is ? is(e) : true);\r\nexport const isModShift: ISMod = is => e => e.shiftKey && (is ? is(e) : true);\r\n\r\nexport const someKeys: ISSome = (...iss) => e => iss.some(is => is(e));\r\n"]}