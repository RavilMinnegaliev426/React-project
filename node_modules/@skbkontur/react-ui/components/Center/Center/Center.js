import _extends from "@babel/runtime/helpers/esm/extends";
import _objectWithoutPropertiesLoose from "@babel/runtime/helpers/esm/objectWithoutPropertiesLoose";
import _inheritsLoose from "@babel/runtime/helpers/esm/inheritsLoose";
import React from 'react';
import cn from 'classnames';
import { jsStyles } from "../Center.styles";
/**
                                             * Контейнер для вертикального центрирования. В компонент можно передавать
                                             * свойства как в любой *div* (кроме `className`)
                                             */

export var Center =
/*#__PURE__*/
function (_React$Component) {
  _inheritsLoose(Center, _React$Component);

  function Center() {
    return _React$Component.apply(this, arguments) || this;
  }

  var _proto = Center.prototype;

  _proto.render = function render() {
    var _cn;

    var _this$props = this.props,
        align = _this$props.align,
        children = _this$props.children,
        rest = _objectWithoutPropertiesLoose(_this$props, ["align", "children"]);

    return React.createElement("div", _extends({
      className: cn((_cn = {}, _cn[jsStyles.root()] = true, _cn[jsStyles.rootAlignLeft()] = align === 'left', _cn[jsStyles.rootAlignRight()] = align === 'right', _cn))
    }, rest), React.createElement("span", {
      className: jsStyles.spring()
    }), React.createElement("span", {
      className: jsStyles.container()
    }, children));
  };

  return Center;
}(React.Component);
Center.__KONTUR_REACT_UI__ = 'Center';
Center.defaultProps = {
  align: 'center'
};