{"version":3,"sources":["FxInput.tsx"],"names":["React","PropTypes","Button","Group","Input","CurrencyInput","createPropsGetter","FunctionIcon","UndoIcon","FxInput","input","getProps","defaultProps","focus","blur","refInput","element","props","render","type","onRestore","auto","rest","inputProps","align","button","leftIcon","borderless","width","value","onValueChange","Component","__KONTUR_REACT_UI__","propTypes","bool","string"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { Button } from '../Button';\r\nimport { Group } from '../Group';\r\nimport { Input, InputProps, InputType } from '../Input';\r\nimport { CurrencyInput, CurrencyInputProps } from '../CurrencyInput';\r\nimport { createPropsGetter } from '../../lib/createPropsGetter';\r\nimport { Override } from '../../typings/utility-types';\r\nimport { FunctionIcon, UndoIcon } from '../../internal/icons/16px';\r\n\r\nexport type FxInputProps = Override<\r\n  CurrencyInputProps,\r\n  {\r\n    /** Авто-режим */\r\n    auto?: boolean;\r\n    /** Тип инпута */\r\n    type?: 'currency' | InputProps['type'];\r\n    /** onRestore */\r\n    onRestore?: () => void;\r\n    /** onValueChange */\r\n    onValueChange: CurrencyInputProps['onValueChange'] | InputProps['onValueChange'];\r\n    /** Значение */\r\n    value?: React.ReactText;\r\n    /** ref Input'а */\r\n    refInput?: (element: CurrencyInput | Input | null) => void;\r\n    /** Убрать лишние нули после запятой */\r\n    hideTrailingZeros?: boolean;\r\n  }\r\n>;\r\n\r\n/** Принимает все свойства `Input`'a */\r\nexport class FxInput extends React.Component<FxInputProps> {\r\n  public static __KONTUR_REACT_UI__ = 'FxInput';\r\n\r\n  public static propTypes = {\r\n    auto: PropTypes.bool,\r\n    type: PropTypes.string,\r\n  };\r\n\r\n  public static defaultProps = {\r\n    width: 250,\r\n    type: 'text',\r\n    value: '',\r\n  };\r\n\r\n  private input: Input | CurrencyInput | null = null;\r\n\r\n  private getProps = createPropsGetter(FxInput.defaultProps);\r\n\r\n  public render(): JSX.Element {\r\n    const { type, onRestore, auto, ...rest } = this.props;\r\n    const inputProps: Partial<CurrencyInputProps> = {\r\n      align: 'right',\r\n    };\r\n\r\n    let button = null;\r\n\r\n    if (auto) {\r\n      inputProps.leftIcon = <FunctionIcon />;\r\n    } else {\r\n      button = (\r\n        <Button narrow onClick={this.props.onRestore} borderless={this.props.borderless}>\r\n          <UndoIcon />\r\n        </Button>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <Group width={this.props.width}>\r\n        {button}\r\n        {this.getProps().type === 'currency' ? (\r\n          <CurrencyInput\r\n            {...inputProps}\r\n            {...rest}\r\n            width={'100%'}\r\n            ref={this.refInput}\r\n            value={this.props.value as CurrencyInputProps['value']}\r\n            onValueChange={this.props.onValueChange as CurrencyInputProps['onValueChange']}\r\n          />\r\n        ) : (\r\n          <Input\r\n            {...inputProps}\r\n            {...rest}\r\n            width={'100%'}\r\n            ref={this.refInput}\r\n            type={this.props.type as InputType}\r\n            value={this.props.value as InputProps['value']}\r\n            onValueChange={this.props.onValueChange as InputProps['onValueChange']}\r\n          />\r\n        )}\r\n      </Group>\r\n    );\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   */\r\n  public focus = () => {\r\n    if (this.input) {\r\n      this.input.focus();\r\n    }\r\n  };\r\n\r\n  /**\r\n   * @public\r\n   */\r\n  public blur = () => {\r\n    if (this.input) {\r\n      this.input.blur();\r\n    }\r\n  };\r\n\r\n  private refInput = (element: Input | CurrencyInput | null) => {\r\n    this.input = element;\r\n\r\n    if (this.props.refInput) {\r\n      this.props.refInput(this.input);\r\n    }\r\n  };\r\n}\r\n"]}