{"version":3,"sources":["Autocomplete.tsx"],"names":["React","PropTypes","findDOMNode","isKeyArrowDown","isKeyArrowUp","isKeyEnter","isKeyEscape","Input","DropdownContainer","Menu","MenuItem","RenderLayer","createPropsGetter","fixClickFocusIE","match","pattern","items","Promise","resolve","toLowerCase","filteredItems","filter","item","includes","renderItem","Autocomplete","state","selected","opened","input","menu","focused","requestId","getProps","defaultProps","handleValueChange","value","fireChange","handleFocus","event","props","onFocus","handleBlur","setState","blur","onBlur","handleClickOutside","e","handleKeyDown","onKeyDown","preventDefault","up","down","enter","getAnchor","refInput","el","refMenu","focus","componentDidUpdate","prevProps","updateItems","render","onValueChange","_renderItem","disablePortal","hasShadow","menuAlign","menuMaxHeight","preventWindowScroll","source","rest","inputProps","ref","display","renderMenu","menuProps","maxHeight","width","menuWidth","length","map","i","handleMenuItemClick","handleItemClick","index","button","choose","trim","promise","expectingId","then","Component","__KONTUR_REACT_UI__","propTypes","func","oneOfType","array","size"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { findDOMNode } from 'react-dom';\r\n\r\nimport { isKeyArrowDown, isKeyArrowUp, isKeyEnter, isKeyEscape } from '../../lib/events/keyboard/identifiers';\r\nimport { Input, InputProps } from '../Input';\r\nimport { DropdownContainer } from '../../internal/DropdownContainer';\r\nimport { Menu } from '../../internal/Menu';\r\nimport { MenuItem } from '../MenuItem';\r\nimport { RenderLayer } from '../../internal/RenderLayer';\r\nimport { createPropsGetter } from '../../lib/createPropsGetter';\r\nimport { Nullable, Override } from '../../typings/utility-types';\r\nimport { fixClickFocusIE } from '../../lib/events/fixClickFocusIE';\r\n\r\nfunction match(pattern: string, items: string[]) {\r\n  if (!pattern || !items) {\r\n    return Promise.resolve([]);\r\n  }\r\n\r\n  pattern = pattern.toLowerCase();\r\n  const filteredItems = items.filter(item => item.toLowerCase().includes(pattern));\r\n  return Promise.resolve(filteredItems);\r\n}\r\n\r\nfunction renderItem(item: any) {\r\n  return item;\r\n}\r\n\r\nexport type AutocompleteProps = Override<\r\n  InputProps,\r\n  {\r\n    /** Функция отрисовки элемента меню */\r\n    renderItem: (item: string) => React.ReactNode;\r\n    /** Промис, резолвящий элементы меню */\r\n    source?: string[] | ((patter: string) => Promise<string[]>);\r\n    /** Отключает использование портала */\r\n    disablePortal: boolean;\r\n    /** Отрисовка тени у выпадающего меню */\r\n    hasShadow: boolean;\r\n    /** Выравнивание выпадающего меню */\r\n    menuAlign: 'left' | 'right';\r\n    /** Максимальная высота меню */\r\n    menuMaxHeight: number | string;\r\n    /** Ширина меню */\r\n    menuWidth?: number | string;\r\n    /** Отключить скролл окна, когда меню открыто */\r\n    preventWindowScroll: boolean;\r\n    /** Вызывается при изменении `value` */\r\n    onValueChange: (value: string) => void;\r\n    /** onBlur */\r\n    onBlur?: () => void;\r\n    /** Размер инпута */\r\n    size: InputProps['size'];\r\n    /** value */\r\n    value: string;\r\n  }\r\n>;\r\n\r\nexport interface AutocompleteState {\r\n  items: Nullable<string[]>;\r\n  selected: number;\r\n}\r\n\r\n/**\r\n * Стандартный инпут с подсказками.\r\n *\r\n * Все свойства передаются во внутренний *Input*.\r\n */\r\nexport class Autocomplete extends React.Component<AutocompleteProps, AutocompleteState> {\r\n  public static __KONTUR_REACT_UI__ = 'Autocomplete';\r\n\r\n  public static propTypes = {\r\n    /**\r\n     * Функция для отрисовки элемента в выпадающем списке. Единственный аргумент\r\n     * — *item*.\r\n     */\r\n    renderItem: PropTypes.func,\r\n\r\n    /**\r\n     * Если передан массив, то совпадения ищутся по этому массиву.\r\n     *\r\n     * Если передается функция, то она должна возвращать thenable, который\r\n     * резолвится уже отфильтрованным массивом. Возвращенный thenable может\r\n     * иметь метод cancel, который будет вызван при отмене поиска (пользователь\r\n     * изменил строку поиска, автокомплит потерял фокус).\r\n     * ```\r\n     * function(pattern) {\r\n     *   return service.findAll(pattern);\r\n     * }\r\n     * ```\r\n     */\r\n    source: PropTypes.oneOfType([PropTypes.array, PropTypes.func]),\r\n  };\r\n\r\n  public static defaultProps = {\r\n    renderItem,\r\n    size: 'small',\r\n    disablePortal: false,\r\n    hasShadow: true,\r\n    menuMaxHeight: 300,\r\n    menuAlign: 'left',\r\n    preventWindowScroll: true,\r\n  };\r\n\r\n  public state: AutocompleteState = {\r\n    items: null,\r\n    selected: -1,\r\n  };\r\n\r\n  private opened = false;\r\n  private input: Nullable<Input> = null;\r\n  private menu: Nullable<Menu>;\r\n\r\n  private focused = false;\r\n  private requestId = 0;\r\n\r\n  private getProps = createPropsGetter(Autocomplete.defaultProps);\r\n\r\n  /**\r\n   * @public\r\n   */\r\n  public focus() {\r\n    if (this.input) {\r\n      this.input.focus();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   */\r\n  public blur() {\r\n    this.handleBlur();\r\n  }\r\n\r\n  public componentDidUpdate(prevProps: AutocompleteProps) {\r\n    if (prevProps.value !== this.props.value) {\r\n      this.updateItems(this.props.value || '');\r\n    }\r\n  }\r\n\r\n  public render() {\r\n    const {\r\n      onValueChange,\r\n      onKeyDown,\r\n      onFocus,\r\n      onBlur,\r\n      renderItem: _renderItem,\r\n      disablePortal,\r\n      hasShadow,\r\n      menuAlign,\r\n      menuMaxHeight,\r\n      preventWindowScroll,\r\n      source,\r\n      ...rest\r\n    } = this.props;\r\n\r\n    const inputProps = {\r\n      ...rest,\r\n      onValueChange: this.handleValueChange,\r\n      onKeyDown: this.handleKeyDown,\r\n      onFocus: this.handleFocus,\r\n      ref: this.refInput,\r\n    };\r\n    return (\r\n      <RenderLayer onFocusOutside={this.handleBlur} onClickOutside={this.handleClickOutside}>\r\n        <span style={{ display: 'inline-block' }}>\r\n          <Input {...inputProps} />\r\n          {this.renderMenu()}\r\n        </span>\r\n      </RenderLayer>\r\n    );\r\n  }\r\n\r\n  private renderMenu(): React.ReactNode {\r\n    const items = this.state.items;\r\n    const menuProps = {\r\n      ref: this.refMenu,\r\n      maxHeight: this.props.menuMaxHeight,\r\n      hasShadow: this.props.hasShadow,\r\n      width: this.props.menuWidth || this.props.width,\r\n      preventWindowScroll: this.props.preventWindowScroll,\r\n    };\r\n    if (!items || items.length === 0) {\r\n      return null;\r\n    }\r\n\r\n    return (\r\n      <DropdownContainer\r\n        offsetY={1}\r\n        getParent={this.getAnchor}\r\n        align={this.props.menuAlign}\r\n        disablePortal={this.props.disablePortal}\r\n      >\r\n        <Menu {...menuProps}>\r\n          {items.map((item, i) => {\r\n            return (\r\n              <MenuItem onClick={this.handleMenuItemClick(i)} key={i}>\r\n                {this.getProps().renderItem(item)}\r\n              </MenuItem>\r\n            );\r\n          })}\r\n        </Menu>\r\n      </DropdownContainer>\r\n    );\r\n  }\r\n\r\n  private handleValueChange = (value: string) => {\r\n    this.opened = true;\r\n\r\n    this.fireChange(value);\r\n  };\r\n\r\n  private handleFocus = (event: React.FocusEvent<HTMLInputElement>) => {\r\n    if (this.focused) {\r\n      return;\r\n    }\r\n\r\n    this.focused = true;\r\n    if (this.props.onFocus) {\r\n      this.props.onFocus(event);\r\n    }\r\n  };\r\n\r\n  private handleBlur = () => {\r\n    if (!this.focused) {\r\n      return;\r\n    }\r\n\r\n    this.focused = false;\r\n    this.opened = false;\r\n    this.setState({ items: null });\r\n\r\n    if (this.input) {\r\n      this.input.blur();\r\n    }\r\n\r\n    if (this.props.onBlur) {\r\n      this.props.onBlur();\r\n    }\r\n  };\r\n\r\n  private handleClickOutside = (e: Event) => {\r\n    fixClickFocusIE(e);\r\n    this.handleBlur();\r\n  };\r\n\r\n  private handleKeyDown = (e: React.KeyboardEvent<HTMLInputElement>) => {\r\n    if (this.props.onKeyDown) {\r\n      this.props.onKeyDown(e);\r\n    }\r\n    switch (true) {\r\n      case isKeyEscape(e):\r\n        e.preventDefault();\r\n        this.setState({ items: null });\r\n        return;\r\n      case isKeyArrowUp(e):\r\n        e.preventDefault();\r\n        if (this.menu) {\r\n          this.menu.up();\r\n        }\r\n        return;\r\n      case isKeyArrowDown(e):\r\n        e.preventDefault();\r\n        if (this.menu) {\r\n          this.menu.down();\r\n        }\r\n        return;\r\n      case isKeyEnter(e):\r\n        e.preventDefault(); // To prevent form submission.\r\n        if (this.menu) {\r\n          this.menu.enter(e);\r\n        }\r\n        return;\r\n    }\r\n  };\r\n\r\n  private handleMenuItemClick(i: number) {\r\n    return (event: React.SyntheticEvent<HTMLElement>) => this.handleItemClick(event, i);\r\n  }\r\n\r\n  private getAnchor = () => {\r\n    return findDOMNode(this);\r\n  };\r\n\r\n  private handleItemClick(event: React.SyntheticEvent<HTMLElement> | React.MouseEvent<HTMLElement>, index: number) {\r\n    if ((event as React.MouseEvent<HTMLElement>).button) {\r\n      return;\r\n    }\r\n\r\n    event.preventDefault();\r\n    this.choose(index);\r\n  }\r\n\r\n  private choose(index: number) {\r\n    if (!this.state.items) {\r\n      return;\r\n    }\r\n\r\n    const value = this.state.items[index];\r\n    this.opened = false;\r\n    this.setState({\r\n      selected: -1,\r\n      items: null,\r\n    });\r\n\r\n    this.fireChange(value);\r\n    this.blur();\r\n  }\r\n\r\n  private updateItems(value: string) {\r\n    if (!this.opened) {\r\n      return;\r\n    }\r\n    const pattern = value.trim();\r\n    const source = this.props.source;\r\n\r\n    if (!source) {\r\n      return;\r\n    }\r\n\r\n    let promise;\r\n    const expectingId = (this.requestId += 1);\r\n    if (typeof source === 'function') {\r\n      promise = source(pattern);\r\n    } else {\r\n      promise = match(pattern, source);\r\n    }\r\n    promise.then(items => {\r\n      if (this.opened && expectingId === this.requestId) {\r\n        this.setState({\r\n          items,\r\n          selected: -1,\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  private fireChange(value: string) {\r\n    if (this.props.onValueChange) {\r\n      this.props.onValueChange(value);\r\n    }\r\n  }\r\n\r\n  private refInput = (el: Input | null) => {\r\n    this.input = el;\r\n  };\r\n\r\n  private refMenu = (menu: Menu | null) => {\r\n    this.menu = menu;\r\n  };\r\n}\r\n"]}