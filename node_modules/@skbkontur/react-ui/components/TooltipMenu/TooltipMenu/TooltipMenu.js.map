{"version":3,"sources":["TooltipMenu.tsx"],"names":["React","PopupMenu","isProductionEnv","TooltipMenu","props","caption","Error","render","menuMaxHeight","menuWidth","header","footer","positions","disableAnimations","children","Component","__KONTUR_REACT_UI__","defaultProps","Boolean","process","env","enableReactTesting"],"mappings":"sEAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,SAASC,SAAT,QAA0C,0BAA1C;;AAEA,SAASC,eAAT,QAAgC,8BAAhC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6BA;;;;;;;;AAQA,WAAaC,WAAb;;;;;;AAME,uBAAYC,KAAZ,EAAqC;AACnC,wCAAMA,KAAN;;AAEA,QAAI,CAACA,KAAK,CAACC,OAAP,IAAkB,CAACH,eAAvB,EAAwC;AACtC,YAAM,IAAII,KAAJ,CAAU,+BAAV,CAAN;AACD,KALkC;AAMpC,GAZH;;AAcSC,EAAAA,MAdT,GAcE,kBAAgB;AACd,QAAI,CAAC,KAAKH,KAAL,CAAWC,OAAhB,EAAyB;AACvB,aAAO,IAAP;AACD;;AAED;AACE,0BAAC,SAAD;AACE,QAAA,aAAa,EAAE,KAAKD,KAAL,CAAWI,aAD5B;AAEE,QAAA,SAAS,EAAE,KAAKJ,KAAL,CAAWK,SAFxB;AAGE,QAAA,OAAO,EAAE,KAAKL,KAAL,CAAWC,OAHtB;AAIE,QAAA,MAAM,EAAE,KAAKD,KAAL,CAAWM,MAJrB;AAKE,QAAA,MAAM,EAAE,KAAKN,KAAL,CAAWO,MALrB;AAME,QAAA,SAAS,EAAE,KAAKP,KAAL,CAAWQ,SANxB;AAOE,QAAA,WAAW,EAAE,IAPf;AAQE,QAAA,WAAW,EAAE,EARf;AASE,QAAA,cAAc,EAAE,EATlB;AAUE,QAAA,iBAAiB,EAAE,KAAKR,KAAL,CAAWS,iBAVhC;;AAYG,WAAKT,KAAL,CAAWU,QAZd,CADF;;;AAgBD,GAnCH,sBAAiCd,KAAK,CAACe,SAAvC,EAAaZ,W,CACGa,mB,GAAsB,a,CADzBb,W,CAGGc,Y,GAAe,EAC3BJ,iBAAiB,EAAEK,OAAO,CAACC,OAAO,CAACC,GAAR,CAAYC,kBAAb,CADC,E","sourcesContent":["import React from 'react';\r\n\r\nimport { PopupMenu, PopupMenuProps } from '../../internal/PopupMenu';\r\nimport { MenuItemProps } from '../MenuItem';\r\nimport { isProductionEnv } from '../../lib/currentEnvironment';\r\nimport { MenuHeaderProps } from '../MenuHeader';\r\nimport { PopupPosition } from '../../internal/Popup';\r\n\r\nexport type TooltipMenuChildType = React.ReactElement<MenuItemProps | {} | MenuHeaderProps>;\r\n\r\nexport interface TooltipMenuProps {\r\n  children?: TooltipMenuChildType | TooltipMenuChildType[];\r\n  /** Максимальная высота меню */\r\n  menuMaxHeight?: number | string;\r\n  /** Ширина меню */\r\n  menuWidth?: number | string;\r\n  /**\r\n   * Элемент или функция возвращающая элемент,\r\n   * если передана, используется вместо ```caption```,\r\n   * в таком случае управлять открытием и закрытием меню\r\n   * придется в этой функции\r\n   */\r\n  caption: PopupMenuProps['caption'];\r\n  header?: React.ReactNode;\r\n  footer?: React.ReactNode;\r\n  /**  Массив разрешенных положений меню относительно caption'а. */\r\n  positions?: PopupPosition[];\r\n  /**\r\n   * Не показывать анимацию\r\n   */\r\n  disableAnimations: boolean;\r\n}\r\n\r\n/**\r\n * Меню, раскрывающееся по клику на переданный в ```caption``` элемент.\r\n * Положение зависит от переданного массива ```positions``` и работает так:\r\n * первое значаение в массиве - дефолтная позиция, меню раскрывается так, если ничего не мешает ему раскрыться,\r\n * если раскрыться в данной позиции не получается - берется следующие значение, и так далее.\r\n * Если меню должно раскрываться только в одну сторону - передаем в ```positions``` массив с одним элементом.\r\n * Если ```positions``` передан или передан пустой массив, используются все возможные положения.\r\n */\r\nexport class TooltipMenu extends React.Component<TooltipMenuProps> {\r\n  public static __KONTUR_REACT_UI__ = 'TooltipMenu';\r\n\r\n  public static defaultProps = {\r\n    disableAnimations: Boolean(process.env.enableReactTesting),\r\n  };\r\n  constructor(props: TooltipMenuProps) {\r\n    super(props);\r\n\r\n    if (!props.caption && !isProductionEnv) {\r\n      throw new Error('Prop \"caption\" is required!!!');\r\n    }\r\n  }\r\n\r\n  public render() {\r\n    if (!this.props.caption) {\r\n      return null;\r\n    }\r\n\r\n    return (\r\n      <PopupMenu\r\n        menuMaxHeight={this.props.menuMaxHeight}\r\n        menuWidth={this.props.menuWidth}\r\n        caption={this.props.caption}\r\n        header={this.props.header}\r\n        footer={this.props.footer}\r\n        positions={this.props.positions}\r\n        popupHasPin={true}\r\n        popupMargin={10}\r\n        popupPinOffset={15}\r\n        disableAnimations={this.props.disableAnimations}\r\n      >\r\n        {this.props.children}\r\n      </PopupMenu>\r\n    );\r\n  }\r\n}\r\n"]}