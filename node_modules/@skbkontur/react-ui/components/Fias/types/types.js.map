{"version":3,"sources":["types.ts"],"names":["FiasEstateStatuses","FiasStructureStatuses","FiasLiveStatuses","FiasFields","FiasExtraFields","FiasFormValidation"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqCA,WAAYA,kBAAZ,C,WAAYA,kB,GAAAA,kB,kBAAAA,kB,oBAAAA,kB,4BAAAA,kB,qBAAAA,kB,KAAAA,kB;;;;;;;AAOZ,WAAYC,qBAAZ,C,WAAYA,qB,GAAAA,qB,4BAAAA,qB,kCAAAA,qB,oBAAAA,qB,qBAAAA,qB,KAAAA,qB;;;;;;;AAOZ,WAAYC,gBAAZ,C,WAAYA,gB,GAAAA,gB,sBAAAA,gB,6BAAAA,gB,KAAAA,gB;;;;;;;AAOZ,WAAYC,UAAZ,C,WAAYA,U,GAAAA,U,sBAAAA,U,0BAAAA,U,kBAAAA,U,oCAAAA,U,8BAAAA,U,4CAAAA,U,sBAAAA,U,oBAAAA,U,oBAAAA,U,qBAAAA,U,KAAAA,U;;;;;;;;;;;;;AAaZ,WAAYC,eAAZ,C,WAAYA,e,GAAAA,e,iCAAAA,e,KAAAA,e;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqCZ,WAAYC,kBAAZ,C,WAAYA,kB,GAAAA,kB,oBAAAA,kB,wBAAAA,kB,qBAAAA,kB,KAAAA,kB","sourcesContent":["import { FiasAddressElement } from './models/FiasAddressElement';\r\nimport { FiasAddress } from './models/FiasAddress';\r\n\r\nexport type FiasId = string;\r\n\r\nexport interface FiasEntity {\r\n  id: string;\r\n  fiasId: FiasId;\r\n  parentFiasId?: FiasId;\r\n  postalCode?: string;\r\n}\r\n\r\nexport interface FiasAddressObject extends FiasEntity {\r\n  name: string;\r\n  abbreviation: string;\r\n  code?: string;\r\n}\r\n\r\nexport interface FiasStead extends FiasEntity {\r\n  number: string;\r\n  liveStatus: FiasLiveStatuses;\r\n}\r\n\r\nexport interface FiasHouse extends FiasEntity {\r\n  estateStatus: FiasEstateStatuses;\r\n  structureStatus: FiasStructureStatuses;\r\n  number?: string;\r\n  structureNumber?: string;\r\n  buildingNumber?: string;\r\n}\r\n\r\nexport interface FiasRoom extends FiasEntity {\r\n  flatNumber: string;\r\n  flatType: number;\r\n  liveStatus: FiasLiveStatuses;\r\n}\r\n\r\nexport enum FiasEstateStatuses {\r\n  Hold = 'Hold',\r\n  House = 'House',\r\n  HouseHold = 'HouseHold',\r\n  None = 'None',\r\n}\r\n\r\nexport enum FiasStructureStatuses {\r\n  Structure = 'Structure',\r\n  Construction = 'Construction',\r\n  Liter = 'Liter',\r\n  None = 'None',\r\n}\r\n\r\nexport enum FiasLiveStatuses {\r\n  active = 'active',\r\n  inactive = 'inactive',\r\n}\r\n\r\nexport type FiasObject = FiasAddressObject | FiasStead | FiasHouse | FiasRoom;\r\n\r\nexport enum FiasFields {\r\n  region = 'region',\r\n  district = 'district',\r\n  city = 'city',\r\n  intracityarea = 'intracityarea',\r\n  settlement = 'settlement',\r\n  planningstructure = 'planningstructure',\r\n  street = 'street',\r\n  stead = 'stead',\r\n  house = 'house',\r\n  room = 'room',\r\n}\r\n\r\nexport enum FiasExtraFields {\r\n  postalcode = 'postalcode',\r\n}\r\n\r\nexport type FiasAddressFields = { [key in FiasFields]?: FiasAddressElement };\r\n\r\nexport type FiasAdditionalFields = { [key in FiasExtraFields]?: string };\r\n\r\nexport interface FiasValue {\r\n  address: FiasAddressValue;\r\n  addressString: string;\r\n  addressErrors: FiasAddressErrors;\r\n  fiasId: FiasId;\r\n  postalCode: string;\r\n  country?: FiasCountry;\r\n  foreignAddress?: string;\r\n}\r\n\r\nexport type FiasAddressValue = {\r\n  [key in FiasFields]?: {\r\n    name: string;\r\n    data?: FiasObject;\r\n  };\r\n};\r\n\r\nexport type FiasAddressResponse = { [key in FiasFields]?: FiasObject };\r\n\r\nexport type FiasSearchResponse = FiasAddressResponse[];\r\n\r\nexport interface FiasVerifyResponse {\r\n  address: FiasAddressResponse;\r\n  isValid: boolean;\r\n  invalidLevel?: FiasFields;\r\n}\r\n\r\nexport type FiasAddressErrors = { [key in FiasFields | FiasExtraFields]?: string };\r\n\r\nexport enum FiasFormValidation {\r\n  Error = 'Error',\r\n  Warning = 'Warning',\r\n  None = 'None',\r\n}\r\n\r\nexport interface FiasSearchOptions {\r\n  fiasId?: FiasId;\r\n  searchText?: string;\r\n  field?: FiasFields;\r\n  parentFiasId?: FiasId;\r\n  limit?: number;\r\n  fullAddress?: boolean;\r\n  directParent?: boolean;\r\n}\r\n\r\nexport interface FiasAPIProvider {\r\n  search: (options: FiasSearchOptions) => Promise<FiasAPIResult<FiasSearchResponse>>;\r\n  searchCountry: (options: { prefix: string; limit?: number }) => Promise<FiasAPIResult<FiasCountry[]>>;\r\n  verify: (address: FiasAddress) => Promise<FiasAPIResult<FiasVerifyResponse>>;\r\n}\r\n\r\nexport interface FiasAPIResult<Data> {\r\n  success: boolean;\r\n  data?: Data;\r\n  error?: Error;\r\n}\r\n\r\nexport type FiasFetchFn = (\r\n  uri: string,\r\n  options: {\r\n    method?: 'GET' | 'POST';\r\n    body?: string;\r\n  },\r\n) => Promise<FiasFetchResponse>;\r\n\r\nexport interface FiasFetchResponse {\r\n  ok: boolean;\r\n  status: number;\r\n  statusText: string;\r\n  json: () => Promise<any>;\r\n}\r\n\r\nexport type FiasFieldsSettings = {\r\n  [field in FiasFields | FiasExtraFields]?: {\r\n    visible?: boolean;\r\n  };\r\n};\r\n\r\nexport interface FiasCountry {\r\n  shortName: string;\r\n  fullName: string;\r\n  code: string;\r\n}\r\n"]}