import _regeneratorRuntime from "@babel/runtime/regenerator";
import _asyncToGenerator from "@babel/runtime/helpers/esm/asyncToGenerator";
import { FiasAPIResultFactory } from "../FiasAPIResultFactory";

var addresses = require("../data.json");

export var FiasMockAPI = function FiasMockAPI() {
  var _this = this;

  this.verify =
  /*#__PURE__*/
  function () {
    var _ref = _asyncToGenerator(
    /*#__PURE__*/
    _regeneratorRuntime.mark(function _callee(address) {
      return _regeneratorRuntime.wrap(function _callee$(_context) {
        while (1) {
          switch (_context.prev = _context.next) {
            case 0:
              return _context.abrupt("return", Promise.resolve(FiasAPIResultFactory.success({
                address: {},
                isValid: true
              })));

            case 1:
            case "end":
              return _context.stop();
          }
        }
      }, _callee);
    }));

    return function (_x) {
      return _ref.apply(this, arguments);
    };
  }();

  this.search =
  /*#__PURE__*/
  function () {
    var _ref3 = _asyncToGenerator(
    /*#__PURE__*/
    _regeneratorRuntime.mark(function _callee2(_ref2) {
      var fiasId, searchText, field, parentFiasId, limit, fullAddress, data;
      return _regeneratorRuntime.wrap(function _callee2$(_context2) {
        while (1) {
          switch (_context2.prev = _context2.next) {
            case 0:
              fiasId = _ref2.fiasId, searchText = _ref2.searchText, field = _ref2.field, parentFiasId = _ref2.parentFiasId, limit = _ref2.limit, fullAddress = _ref2.fullAddress;
              data = [];

              if (fiasId) {
                data = [addresses[0]];
              }

              if (searchText) {
                if (field) {
                  data = _this.getAddresses(field, fullAddress);
                } else {
                  data = addresses;
                }
              }

              return _context2.abrupt("return", Promise.resolve(FiasAPIResultFactory.success(data)));

            case 5:
            case "end":
              return _context2.stop();
          }
        }
      }, _callee2);
    }));

    return function (_x2) {
      return _ref3.apply(this, arguments);
    };
  }();

  this.searchCountry =
  /*#__PURE__*/
  function () {
    var _ref4 = _asyncToGenerator(
    /*#__PURE__*/
    _regeneratorRuntime.mark(function _callee3(options) {
      return _regeneratorRuntime.wrap(function _callee3$(_context3) {
        while (1) {
          switch (_context3.prev = _context3.next) {
            case 0:
              return _context3.abrupt("return", Promise.resolve(FiasAPIResultFactory.success([])));

            case 1:
            case "end":
              return _context3.stop();
          }
        }
      }, _callee3);
    }));

    return function (_x3) {
      return _ref4.apply(this, arguments);
    };
  }();

  this.getAddresses = function (field, fullAddress) {
    return addresses.filter(function (address) {
      return address[field];
    }).map(function (address) {
      var _ref5;

      return fullAddress ? address : (_ref5 = {}, _ref5[field] = address[field], _ref5);
    });
  };
};