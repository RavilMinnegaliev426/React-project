import _extends from "@babel/runtime/helpers/esm/extends";
import _regeneratorRuntime from "@babel/runtime/regenerator";
import _asyncToGenerator from "@babel/runtime/helpers/esm/asyncToGenerator";
import _createClass from "@babel/runtime/helpers/esm/createClass";
import _inheritsLoose from "@babel/runtime/helpers/esm/inheritsLoose";

var _dec, _class, _class2, _temp;

import React from 'react';
import isEqual from 'lodash.isequal';
import warning from 'warning';
import cn from 'classnames';
import { Link } from "../../Link";
import { locale } from "../../../lib/locale/decorators";
import { ThemeContext } from "../../../lib/theming/ThemeContext";
import { EditIcon } from "../../../internal/icons/16px";
import { LocaleContext } from "../../../lib/locale";
import { FiasLocaleHelper } from "../locale";
import { FiasExtraFields } from "../types";
import { FiasModal } from "../FiasModal";
import { FiasForm } from "../Form/FiasForm";
import { FiasAPI } from "../api/FiasAPI";
import { FiasAddress } from "../models/FiasAddress";
import { FiasLogger } from "../logger/FiasLogger";
import { jsStyles } from "../Fias.styles";

function deepMerge(dst) {
  for (var _len = arguments.length, src = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
    src[_key - 1] = arguments[_key];
  }

  src.forEach(function (obj) {
    for (var k in obj) {
      if (dst[k] != null && typeof obj[k] === 'object') {
        dst[k] = deepMerge(dst[k], obj[k]);
      } else {
        dst[k] = obj[k];
      }
    }
  });
  return dst;
}
/**
   * @deprecated Контур-специфичный компонент, будет удален в 3.0.0, перенесен в `@skbkontur/react-ui-addons` смотри [миграцию](https://github.com/skbkontur/retail-ui/blob/master/packages/react-ui/MIGRATION.md)
   */


export var Fias = (_dec = locale('Fias', FiasLocaleHelper), _dec(_class = (_temp = _class2 =
/*#__PURE__*/
function (_React$Component) {
  _inheritsLoose(Fias, _React$Component);

  function Fias(props) {
    var _this;

    _this = _React$Component.call(this, props) || this;
    _this.state = {
      opened: false,
      address: new FiasAddress(),
      locale: FiasLocaleHelper.get(),
      fieldsSettings: _this.fieldsSettings
    };
    _this.theme = void 0;
    _this.api = _this.props.api || new FiasAPI(_this.props.baseUrl, _this.props.version);
    _this.form = null;
    _this.locale = void 0;

    _this.componentDidMount = function () {
      _this.updateLocale();

      _this.init();
    };

    _this.componentDidUpdate = function (prevProps, prevState) {
      if (!isEqual(prevProps.value, _this.props.value)) {
        _this.updateAddress();
      }

      if (!isEqual(prevState.locale, _this.locale)) {
        _this.updateLocale(_this.locale);
      }

      if (!isEqual(prevProps.fieldsSettings, _this.props.fieldsSettings)) {
        _this.updateFieldsSettings();
      }
    };

    _this.init =
    /*#__PURE__*/
    _asyncToGenerator(
    /*#__PURE__*/
    _regeneratorRuntime.mark(function _callee() {
      var address;
      return _regeneratorRuntime.wrap(function _callee$(_context) {
        while (1) {
          switch (_context.prev = _context.next) {
            case 0:
              _context.next = 2;
              return _this.updateAddress();

            case 2:
              address = _context.sent;

              if (_this.props.onInit) {
                _this.props.onInit(address.getValue(_this.isFieldVisible(FiasExtraFields.postalcode)));
              }

            case 4:
            case "end":
              return _context.stop();
          }
        }
      }, _callee);
    }));
    _this.updateAddress =
    /*#__PURE__*/
    _asyncToGenerator(
    /*#__PURE__*/
    _regeneratorRuntime.mark(function _callee2() {
      var address;
      return _regeneratorRuntime.wrap(function _callee2$(_context2) {
        while (1) {
          switch (_context2.prev = _context2.next) {
            case 0:
              _context2.next = 2;
              return FiasAddress.getAddress(_this.api, _this.props.value, _this.state.fieldsSettings);

            case 2:
              address = _context2.sent;

              _this.setState({
                address: address
              });

              return _context2.abrupt("return", address);

            case 5:
            case "end":
              return _context2.stop();
          }
        }
      }, _callee2);
    }));

    _this.updateLocale = function (nextLocale) {
      if (nextLocale === void 0) {
        nextLocale = FiasLocaleHelper.get();
      }

      _this.setState({
        locale: nextLocale
      });
    };

    _this.updateFieldsSettings = function () {
      _this.setState({
        fieldsSettings: _this.fieldsSettings
      });
    };

    _this.handleOpen = function () {
      _this.setState({
        opened: true
      });
    };

    _this.handleClose = function () {
      _this.setState({
        opened: false
      });

      var onClose = _this.props.onClose;

      if (onClose) {
        onClose();
      }
    };

    _this.handleSave =
    /*#__PURE__*/
    _asyncToGenerator(
    /*#__PURE__*/
    _regeneratorRuntime.mark(function _callee3() {
      var address;
      return _regeneratorRuntime.wrap(function _callee3$(_context3) {
        while (1) {
          switch (_context3.prev = _context3.next) {
            case 0:
              if (!_this.form) {
                _context3.next = 7;
                break;
              }

              _context3.next = 3;
              return _this.form.submit();

            case 3:
              address = _context3.sent;

              if (!(address.hasErrors && _this.props.allowNotVerified === false)) {
                _context3.next = 6;
                break;
              }

              return _context3.abrupt("return");

            case 6:
              _this.handleChange(address);

            case 7:
              _this.handleClose();

            case 8:
            case "end":
              return _context3.stop();
          }
        }
      }, _callee3);
    }));

    _this.handleChange = function (address) {
      if (_this.props.onValueChange) {
        _this.props.onValueChange(address.getValue(_this.isFieldVisible(FiasExtraFields.postalcode)));
      }
    };

    _this.refForm = function (element) {
      _this.form = element;
    };

    warning(true, "Fias has been deprecated, use Fias from @skbkontur/react-ui-addons instead, see [migration](https://github.com/skbkontur/retail-ui/blob/master/packages/react-ui/MIGRATION.md)");

    if (!props.baseUrl && !props.api) {
      FiasLogger.log(FiasLogger.warnings.baseUrlOrApiIsRequired);
    }

    return _this;
  }

  var _proto = Fias.prototype;

  _proto.isFieldVisible = function isFieldVisible(field) {
    return FiasAddress.isFieldVisible(field, this.state.fieldsSettings);
  };

  _proto.render = function render() {
    var _this2 = this;

    return React.createElement(ThemeContext.Consumer, null, function (theme) {
      _this2.theme = theme;
      return _this2.renderMain();
    });
  };

  _proto.renderMain = function renderMain() {
    var _cn;

    var _this$props = this.props,
        showAddressText = _this$props.showAddressText,
        label = _this$props.label,
        icon = _this$props.icon,
        error = _this$props.error,
        warning = _this$props.warning,
        feedback = _this$props.feedback;
    var _this$state = this.state,
        opened = _this$state.opened,
        address = _this$state.address;
    var linkText = label || (address.isEmpty ? this.state.locale.addressFill : this.state.locale.addressEdit);
    var validation = (error || warning) && feedback ? React.createElement("span", {
      className: cn((_cn = {}, _cn[jsStyles.error(this.theme)] = Boolean(error), _cn[jsStyles.warning(this.theme)] = Boolean(warning), _cn))
    }, feedback) : null;
    return React.createElement(LocaleContext.Provider, {
      value: {
        locale: {
          Fias: this.state.locale
        }
      }
    }, React.createElement("div", null, showAddressText && React.createElement("span", null, address.getFullText(this.isFieldVisible(FiasExtraFields.postalcode))), !this.props.readonly && React.createElement("div", null, React.createElement(Link, {
      icon: icon,
      onClick: this.handleOpen
    }, linkText)), validation, opened && this.renderModal()));
  };

  _proto.renderModal = function renderModal() {
    var _this$state2 = this.state,
        address = _this$state2.address,
        fieldsSettings = _this$state2.fieldsSettings;
    var _this$props2 = this.props,
        search = _this$props2.search,
        limit = _this$props2.limit,
        formValidation = _this$props2.formValidation,
        countrySelector = _this$props2.countrySelector;
    return React.createElement(FiasModal, {
      onClose: this.handleClose,
      onSave: this.handleSave
    }, React.createElement(FiasForm, {
      ref: this.refForm,
      address: address,
      api: this.api,
      search: search,
      limit: limit,
      validationLevel: formValidation,
      fieldsSettings: fieldsSettings,
      countrySelector: countrySelector
    }));
  };

  _createClass(Fias, [{
    key: "fieldsSettings",
    get: function get() {
      var _deepMerge;

      var _this$props3 = this.props,
          userSettings = _this$props3.fieldsSettings,
          countrySelector = _this$props3.countrySelector; // TODO: implement deepMerge with clone

      var defaultSettings = FiasAddress.ALL_FIELDS.reduce(function (settings, field) {
        var _extends2;

        return _extends({}, settings, (_extends2 = {}, _extends2[field] = {
          visible: true
        }, _extends2));
      }, {});
      return deepMerge(defaultSettings, (_deepMerge = {}, _deepMerge[FiasExtraFields.postalcode] = {
        visible: Boolean(countrySelector)
      }, _deepMerge), userSettings);
    }
  }]);

  return Fias;
}(React.Component), _class2.__KONTUR_REACT_UI__ = 'Fias', _class2.defaultProps = {
  showAddressText: true,
  error: false,
  warning: false,
  readonly: false,
  search: false,
  icon: React.createElement(EditIcon, null),
  allowNotVerified: true,
  fieldsSettings: {},
  countrySelector: false
}, _temp)) || _class);