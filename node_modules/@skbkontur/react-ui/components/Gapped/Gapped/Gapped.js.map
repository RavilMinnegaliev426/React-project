{"version":3,"sources":["Gapped.tsx"],"names":["React","PropTypes","Gapped","render","props","vertical","renderVertical","renderHorizontal","subsequentItemStyle","paddingTop","gap","isFirst","children","Children","map","child","style","undefined","verticalAlign","wrap","itemStyle","display","marginLeft","marginTop","rootStyle","contStyle","whiteSpace","index","Component","__KONTUR_REACT_UI__","propTypes","number","bool","oneOf","defaultProps"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport interface GappedProps {\r\n  /**\r\n   * Расстояние между элементами в пикселях\r\n   * @default 10\r\n   */\r\n  gap: number;\r\n  /**\r\n   * Вертикальное выравнивание\r\n   * @default \"baseline\"\r\n   */\r\n  verticalAlign: 'top' | 'middle' | 'baseline' | 'bottom';\r\n  /**\r\n   * Расположение элементов по вертикали\r\n   * @default false\r\n   */\r\n  vertical: boolean;\r\n  /**\r\n   * Перенос элементов на новую строку при горизонтальном расположении\r\n   * @default false\r\n   */\r\n  wrap: boolean;\r\n  children: React.ReactNode;\r\n}\r\n\r\n/**\r\n * Контейнер, расстояние между элементами в котором равно `gap`.\r\n */\r\nexport class Gapped extends React.Component<GappedProps> {\r\n  public static __KONTUR_REACT_UI__ = 'Gapped';\r\n\r\n  public static propTypes = {\r\n    /**\r\n     * Расстояние между элементами.\r\n     */\r\n    gap: PropTypes.number,\r\n\r\n    /**\r\n     * Располагать элементы вертикально.\r\n     */\r\n    vertical: PropTypes.bool,\r\n\r\n    /**\r\n     * Вертикальное выравнивание элементов.\r\n     */\r\n    verticalAlign: PropTypes.oneOf(['top', 'middle', 'baseline', 'bottom']),\r\n  };\r\n\r\n  public static defaultProps = {\r\n    gap: 10,\r\n    wrap: false,\r\n    vertical: false,\r\n    verticalAlign: 'baseline',\r\n  };\r\n\r\n  public render() {\r\n    if (this.props.vertical) {\r\n      return this.renderVertical();\r\n    }\r\n    return this.renderHorizontal();\r\n  }\r\n\r\n  private renderVertical() {\r\n    const subsequentItemStyle: React.CSSProperties = {\r\n      paddingTop: this.props.gap,\r\n    };\r\n    let isFirst = true;\r\n    const children = React.Children.map(this.props.children, child => {\r\n      if (!child) {\r\n        return child;\r\n      }\r\n      const style = isFirst ? undefined : subsequentItemStyle;\r\n\r\n      isFirst = false;\r\n\r\n      return <div style={style}>{child}</div>;\r\n    });\r\n\r\n    return <div>{children}</div>;\r\n  }\r\n\r\n  private renderHorizontal() {\r\n    const { gap, children, verticalAlign, wrap } = this.props;\r\n    const itemStyle: React.CSSProperties = {\r\n      display: 'inline-block',\r\n      verticalAlign,\r\n      ...(wrap ? { marginLeft: gap, marginTop: gap } : {}),\r\n    };\r\n    const rootStyle: React.CSSProperties = wrap ? { paddingTop: 1 } : {};\r\n    const contStyle: React.CSSProperties = wrap ? { marginTop: -gap - 1, marginLeft: -gap } : { whiteSpace: 'nowrap' };\r\n\r\n    return (\r\n      <div style={rootStyle}>\r\n        <div style={contStyle}>\r\n          {React.Children.map(children, (child, index) => {\r\n            if (!child) {\r\n              return child;\r\n            }\r\n            const marginLeft = index === 0 ? undefined : gap;\r\n            return <span style={{ marginLeft, ...itemStyle }}>{child}</span>;\r\n          })}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"]}