import _taggedTemplateLiteralLoose from "@babel/runtime/helpers/esm/taggedTemplateLiteralLoose";

function _templateObject5() {
  var data = _taggedTemplateLiteralLoose(["\n      color: ", ";\n      cursor: pointer;\n      display: inline-block;\n      height: 8px;\n      line-height: 0;\n      margin: -12px -8px;\n      padding: 12px 8px;\n      text-align: center;\n      width: 8px;\n\n      &:hover {\n        color: ", ";\n      }\n    "]);

  _templateObject5 = function _templateObject5() {
    return data;
  };

  return data;
}

function _templateObject4() {
  var data = _taggedTemplateLiteralLoose(["\n      color: ", ";\n      cursor: pointer;\n      display: inline-block;\n      font-weight: 600;\n      margin: -10px 24px -11px 4px;\n      padding: 10px 10px 11px;\n\n      &:hover {\n        text-decoration: underline;\n      }\n    "]);

  _templateObject4 = function _templateObject4() {
    return data;
  };

  return data;
}

function _templateObject3() {
  var data = _taggedTemplateLiteralLoose(["\n      display: inline-block;\n      position: absolute;\n      top: 0;\n      bottom: 0;\n      line-height: 40px;\n    "]);

  _templateObject3 = function _templateObject3() {
    return data;
  };

  return data;
}

function _templateObject2() {
  var data = _taggedTemplateLiteralLoose(["\n      position: fixed;\n      top: 0;\n      left: 0;\n      right: 0;\n      height: 0;\n      text-align: center;\n    "]);

  _templateObject2 = function _templateObject2() {
    return data;
  };

  return data;
}

function _templateObject() {
  var data = _taggedTemplateLiteralLoose(["\n      background: ", ";\n      border-radius: 2px;\n      color: ", ";\n      display: inline-block;\n      font-size: 14px;\n      opacity: 1;\n      padding: 10px 20px 11px;\n      position: relative;\n      top: 20px;\n    "]);

  _templateObject = function _templateObject() {
    return data;
  };

  return data;
}

import { css, memoizeStyle } from "../../../lib/theming/Emotion";
var styles = {
  root: function root(t) {
    return css(_templateObject(), t.toastBg, t.toastColor);
  },
  wrapper: function wrapper() {
    return css(_templateObject2());
  },
  closeWrapper: function closeWrapper() {
    return css(_templateObject3());
  },
  link: function link(t) {
    return css(_templateObject4(), t.toastLinkColor);
  },
  close: function close(t) {
    return css(_templateObject5(), t.toastCloseColor, t.toastCloseHoverColor);
  }
};
export var jsStyles = memoizeStyle(styles);