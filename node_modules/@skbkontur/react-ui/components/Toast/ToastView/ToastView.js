import _extends from "@babel/runtime/helpers/esm/extends";
import _objectWithoutPropertiesLoose from "@babel/runtime/helpers/esm/objectWithoutPropertiesLoose";
import _inheritsLoose from "@babel/runtime/helpers/esm/inheritsLoose";
import React from 'react';
import { func, shape, string } from 'prop-types';
import { CrossIcon } from "../../../internal/icons/CrossIcon";
import { ZIndex } from "../../../internal/ZIndex";
import { ThemeContext } from "../../../lib/theming/ThemeContext";
import { jsStyles } from "../ToastView.styles";
export var ToastView =
/*#__PURE__*/
function (_React$Component) {
  _inheritsLoose(ToastView, _React$Component);

  function ToastView() {
    var _this;

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;
    _this.theme = void 0;
    return _this;
  }

  var _proto = ToastView.prototype;

  _proto.render = function render() {
    var _this2 = this;

    return React.createElement(ThemeContext.Consumer, null, function (theme) {
      _this2.theme = theme;
      return _this2.renderMain();
    });
  };

  _proto.renderMain = function renderMain() {
    var _this$props = this.props,
        children = _this$props.children,
        action = _this$props.action,
        onClose = _this$props.onClose,
        rest = _objectWithoutPropertiesLoose(_this$props, ["children", "action", "onClose"]);

    var link = action ? React.createElement("span", {
      className: jsStyles.link(this.theme),
      onClick: action.handler
    }, action.label) : null;
    var close = action ? React.createElement("span", {
      className: jsStyles.closeWrapper()
    }, React.createElement("span", {
      className: jsStyles.close(this.theme),
      onClick: onClose
    }, React.createElement(CrossIcon, null))) : null;
    return React.createElement(ZIndex, {
      priority: "Toast",
      className: jsStyles.wrapper()
    }, React.createElement("div", _extends({
      "data-tid": "ToastView__root",
      className: jsStyles.root(this.theme)
    }, rest), React.createElement("span", null, children), link, close));
  };

  return ToastView;
}(React.Component);
ToastView.propTypes = {
  /**
   * Adds action handling and close icon for toast
   */
  action: shape({
    label: string.isRequired,
    handler: func.isRequired
  }),

  /**
   * Toast content
   */
  children: string.isRequired,
  onClose: func
};