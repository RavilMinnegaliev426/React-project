import React from 'react';
export interface ToastViewProps {
    /**
     * Toast content
     */
    children?: string;
    /**
     * Adds action handling and close icon for toast
     */
    action?: {
        label: string;
        handler: () => void;
    } | null;
    onClose?: () => void;
    onMouseEnter?: () => void;
    onMouseLeave?: () => void;
}
export declare class ToastView extends React.Component<ToastViewProps> {
    static propTypes: {
        /**
         * Adds action handling and close icon for toast
         */
        action: import("prop-types").Requireable<import("prop-types").InferProps<{
            label: import("prop-types").Validator<string>;
            handler: import("prop-types").Validator<(...args: any[]) => any>;
        }>>;
        /**
         * Toast content
         */
        children: import("prop-types").Validator<string>;
        onClose: import("prop-types").Requireable<(...args: any[]) => any>;
    };
    private theme;
    render(): JSX.Element;
    private renderMain;
}
