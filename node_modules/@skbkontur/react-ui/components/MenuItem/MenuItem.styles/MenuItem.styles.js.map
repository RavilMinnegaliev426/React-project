{"version":3,"sources":["MenuItem.styles.ts"],"names":["css","memoizeStyle","resetButton","styles","root","hover","t","dropdownMenuHoverBg","textColorInvert","selected","dropdownMenuSelectedBg","disabled","textColorDisabled","link","linkColor","loose","withIcon","menuItemPaddingForIcon","comment","commentHover","icon","jsStyles"],"mappings":";AACA,SAASA,GAAT,EAAcC,YAAd,QAAkC,2BAAlC;AACA,SAASC,WAAT,QAA4B,yBAA5B;;AAEA,IAAMC,MAAM,GAAG;AACbC,EAAAA,IADa,kBACN;AACL,WAAOJ,GAAP;AACIE,IAAAA,WAAW,EADf;;;;;;;;;;;;;AAcD,GAhBY;AAiBbG,EAAAA,KAjBa,iBAiBPC,CAjBO,EAiBG;AACd;AACA,WAAON,GAAP;AACgBM,IAAAA,CAAC,CAACC,mBADlB;AAEWD,IAAAA,CAAC,CAACE,eAFb;;AAID,GAvBY;AAwBbC,EAAAA,QAxBa,oBAwBJH,CAxBI,EAwBM;AACjB,WAAON,GAAP;AACgBM,IAAAA,CAAC,CAACI,sBADlB;;AAGD,GA5BY;AA6BbC,EAAAA,QA7Ba,oBA6BJL,CA7BI,EA6BM;AACjB,WAAON,GAAP;;AAEWM,IAAAA,CAAC,CAACM,iBAFb;;;AAKD,GAnCY;AAoCbC,EAAAA,IApCa,gBAoCRP,CApCQ,EAoCE;AACb,WAAON,GAAP;AACWM,IAAAA,CAAC,CAACQ,SADb;;AAGD,GAxCY;AAyCbC,EAAAA,KAzCa,mBAyCL;AACN,WAAOf,GAAP;;;AAGD,GA7CY;AA8CbgB,EAAAA,QA9Ca,oBA8CJV,CA9CI,EA8CM;AACjB,WAAON,GAAP;;AAEoBM,IAAAA,CAAC,CAACW,sBAFtB;;;AAKD,GApDY;AAqDbC,EAAAA,OArDa,qBAqDH;AACR,WAAOlB,GAAP;;;;AAID,GA1DY;AA2DbmB,EAAAA,YA3Da,0BA2DE;AACb,WAAOnB,GAAP;;;;AAID,GAhEY;AAiEboB,EAAAA,IAjEa,kBAiEN;AACL,WAAOpB,GAAP;;;;;;AAMD,GAxEY,EAAf;;;AA2EA,OAAO,IAAMqB,QAAQ,GAAGpB,YAAY,CAACE,MAAD,CAA7B","sourcesContent":["import { Theme } from '../../lib/theming/Theme';\r\nimport { css, memoizeStyle } from '../../lib/theming/Emotion';\r\nimport { resetButton } from '../../lib/styles/Mixins';\r\n\r\nconst styles = {\r\n  root() {\r\n    return css`\r\n      ${resetButton()};\r\n\r\n      cursor: pointer;\r\n      display: block;\r\n      line-height: 18px;\r\n      padding: 6px 18px 7px 8px;\r\n      position: relative;\r\n      text-decoration: none;\r\n\r\n      button& {\r\n        min-width: 100%;\r\n      }\r\n    `;\r\n  },\r\n  hover(t: Theme) {\r\n    // Color with !important in purpose to override `a:hover`\r\n    return css`\r\n      background: ${t.dropdownMenuHoverBg};\r\n      color: ${t.textColorInvert} !important;\r\n    `;\r\n  },\r\n  selected(t: Theme) {\r\n    return css`\r\n      background: ${t.dropdownMenuSelectedBg};\r\n    `;\r\n  },\r\n  disabled(t: Theme) {\r\n    return css`\r\n      background: transparent;\r\n      color: ${t.textColorDisabled};\r\n      cursor: default;\r\n    `;\r\n  },\r\n  link(t: Theme) {\r\n    return css`\r\n      color: ${t.linkColor};\r\n    `;\r\n  },\r\n  loose() {\r\n    return css`\r\n      padding-left: 15px;\r\n    `;\r\n  },\r\n  withIcon(t: Theme) {\r\n    return css`\r\n      & {\r\n        padding-left: ${t.menuItemPaddingForIcon};\r\n      }\r\n    `;\r\n  },\r\n  comment() {\r\n    return css`\r\n      color: #a0a0a0;\r\n      white-space: normal;\r\n    `;\r\n  },\r\n  commentHover() {\r\n    return css`\r\n      color: #fff;\r\n      opacity: 0.6;\r\n    `;\r\n  },\r\n  icon() {\r\n    return css`\r\n      display: inline-block;\r\n      position: absolute;\r\n      left: 15px;\r\n      top: 5px;\r\n    `;\r\n  },\r\n};\r\n\r\nexport const jsStyles = memoizeStyle(styles);\r\n"]}