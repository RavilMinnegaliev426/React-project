{"version":3,"sources":["DateInput.tsx"],"names":["React","cn","ConditionalHandler","LENGTH_FULLDATE","MAX_FULLDATE","MIN_FULLDATE","InternalDateComponentType","DatePickerLocaleHelper","InputLikeText","locale","ThemeContext","CalendarIcon","DateFragmentsView","jsStyles","Actions","extractAction","InternalDateMediator","DateInput","props","iDateMediator","inputLikeText","dateFragmentsView","isMouseDown","isMouseFocus","ignoringDelimiter","blurEvent","theme","conditionalHandler","add","MoveSelectionLeft","shiftSelection","MoveSelectionRight","Separator","pressDelimiter","MoveSelectionFirst","selectDateComponent","getLeftmostType","MoveSelectionLast","getRightmostType","Increment","shiftDateComponent","Decrement","Digit","e","inputValue","ClearSelection","clearSelected","ClearOneChar","clearOneChar","FullSelection","fullSelection","WrongInput","blink","build","selectNode","type","state","selected","getRootNode","All","selectInnerNode","index","getTypesOrder","indexOf","renderIcon","withIcon","size","disabled","iconStyles","icon","iconSmall","iconMedium","iconLarge","iconDisabled","handleFocus","setState","prevState","focused","onFocus","handleBlur","restored","restore","updateValue","inputMode","onBlur","persist","handleMouseDownCapture","isFragment","target","preventDefault","handleSelectDateComponent","isEmpty","handleMouseDragStart","dragged","handleMouseDragEnd","selection","getSelection","toString","length","handleKeyDown","onKeyDown","handlePaste","pasted","clipboardData","getData","trim","validateString","paste","handleDoubleClick","inputLikeTextRef","el","dateFragmentsViewRef","valueFormatted","getString","emitChange","updateFromProps","update","value","get","getInternalString","onValueChange","clear","nextType","isNull","deleteOneCharRight","step","changed","getShiftedType","event","inputKey","key","componentDidUpdate","prevProps","minDate","maxDate","isChangedLocale","componentDidMount","blur","focus","render","renderMain","fragments","getFragments","width","error","warning","Component","__KONTUR_REACT_UI__","defaultProps"],"mappings":"iKAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,EAAP,MAAe,YAAf;;AAEA,SAASC,kBAAT,QAAmC,8BAAnC;AACA,SAASC,eAAT,EAA0BC,YAA1B,EAAwCC,YAAxC,QAA4D,0BAA5D;AACA,SAASC,yBAAT,QAA0C,sBAA1C;;AAEA,SAA2BC,sBAA3B,QAAyD,sBAAzD;AACA,SAASC,aAAT,QAA8B,8BAA9B;AACA,SAASC,MAAT,QAAuB,6BAAvB;AACA,SAASC,YAAT,QAA6B,gCAA7B;AACA,SAASC,YAAT,QAA6B,2BAA7B;;AAEA,SAASC,iBAAT,QAAkC,qBAAlC;AACA,SAASC,QAAT,QAAyB,oBAAzB;AACA,SAASC,OAAT,EAAkBC,aAAlB,QAAuC,oCAAvC;AACA,SAASC,oBAAT,QAAqC,gCAArC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgDA,WAAaC,SAAb,WADCR,MAAM,CAAC,YAAD,EAAeF,sBAAf,CACP;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmCE,qBAAYW,KAAZ,EAAmC;AACjC,wCAAMA,KAAN,UADiC,MAxB3BC,aAwB2B,GAxBW,IAAIH,oBAAJ,EAwBX,OAvB3BI,aAuB2B,GAvBW,IAuBX,OAtB3BC,iBAsB2B,GAtBmB,IAsBnB,OArB3BC,WAqB2B,GArBb,KAqBa,OApB3BC,YAoB2B,GApBZ,KAoBY,OAnB3BC,iBAmB2B,GAnBP,KAmBO,OAlB3Bf,MAkB2B,gBAjB3BgB,SAiB2B,GAjBuB,IAiBvB,OAhB3BC,KAgB2B,gBAf3BC,kBAe2B,GAfN,IAAIzB,kBAAJ,GAC1B0B,GAD0B,CACtBd,OAAO,CAACe,iBADc,EACK,oBAAM,MAAKC,cAAL,CAAoB,CAAC,CAArB,CAAN,EADL,EAE1BF,GAF0B,CAEtBd,OAAO,CAACiB,kBAFc,EAEM,oBAAM,MAAKD,cAAL,CAAoB,CAApB,CAAN,EAFN,EAG1BF,GAH0B,CAGtBd,OAAO,CAACkB,SAHc,EAGH,oBAAM,MAAKC,cAAL,EAAN,EAHG,EAI1BL,GAJ0B,CAItBd,OAAO,CAACoB,kBAJc,EAIM,oBAAM,MAAKC,mBAAL,CAAyB,MAAKhB,aAAL,CAAmBiB,eAAnB,EAAzB,CAAN,EAJN,EAK1BR,GAL0B,CAKtBd,OAAO,CAACuB,iBALc,EAKK,oBAAM,MAAKF,mBAAL,CAAyB,MAAKhB,aAAL,CAAmBmB,gBAAnB,EAAzB,CAAN,EALL,EAM1BV,GAN0B,CAMtBd,OAAO,CAACyB,SANc,EAMH,oBAAM,MAAKC,kBAAL,CAAwB,CAAxB,CAAN,EANG,EAO1BZ,GAP0B,CAOtBd,OAAO,CAAC2B,SAPc,EAOH,oBAAM,MAAKD,kBAAL,CAAwB,CAAC,CAAzB,CAAN,EAPG,EAQ1BZ,GAR0B,CAQtBd,OAAO,CAAC4B,KARc,EAQP,UAAAC,CAAC,UAAI,MAAKC,UAAL,CAAgBD,CAAhB,CAAJ,EARM,EAS1Bf,GAT0B,CAStBd,OAAO,CAAC+B,cATc,EASE,oBAAM,MAAKC,aAAL,EAAN,EATF,EAU1BlB,GAV0B,CAUtBd,OAAO,CAACiC,YAVc,EAUA,oBAAM,MAAKC,YAAL,EAAN,EAVA,EAW1BpB,GAX0B,CAWtBd,OAAO,CAACmC,aAXc,EAWC,oBAAM,MAAKC,aAAL,EAAN,EAXD,EAY1BtB,GAZ0B,CAYtBd,OAAO,CAACqC,UAZc,EAYF,oBAAM,MAAKC,KAAL,EAAN,EAZE,EAa1BC,KAb0B,EAeM;;;;;;;;;;;;;;;;;;;;;;;AAwB5BC,IAAAA,UAxB4B,GAwBf,YAAM;AACxB,UAAMC,IAAI,GAAG,MAAKC,KAAL,CAAWC,QAAxB;AACA,UAAMpC,iBAAiB,GAAG,MAAKA,iBAAL,IAA0B,MAAKA,iBAAL,CAAuBqC,WAAvB,EAApD;AACA,UAAIH,IAAI,KAAK,IAAT,IAAiB,CAAC,MAAKnC,aAAvB,IAAwC,CAACC,iBAA7C,EAAgE;AAC9D;AACD;AACD,UAAIkC,IAAI,KAAKjD,yBAAyB,CAACqD,GAAvC,EAA4C;AAC1C,cAAKvC,aAAL,CAAmBwC,eAAnB,CAAmCvC,iBAAnC,EAAsD,CAAtD,EAAyD,CAAzD;AACA;AACD;AACD,UAAMwC,KAAK,GAAG,MAAK1C,aAAL,CAAmB2C,aAAnB,GAAmCC,OAAnC,CAA2CR,IAA3C,CAAd;AACA,UAAIM,KAAK,GAAG,CAAC,CAAb,EAAgB;AACd,cAAKzC,aAAL,CAAmBwC,eAAnB,CAAmCvC,iBAAnC,EAAsDwC,KAAK,GAAG,CAA9D,EAAiEA,KAAK,GAAG,CAAR,GAAY,CAA7E;AACD;AACF,KAtCkC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2G3BG,IAAAA,UA3G2B,GA2Gd,YAAM;AACoB,YAAK9C,KADzB,CACjB+C,QADiB,eACjBA,QADiB,CACPC,IADO,eACPA,IADO,oCACDC,QADC,CACDA,QADC,qCACU,KADV;;AAGzB,UAAIF,QAAJ,EAAc;AACZ,YAAMvC,KAAK,GAAG,MAAKA,KAAnB;AACA,YAAM0C,UAAU,GAAGnE,EAAE;AAClBY,QAAAA,QAAQ,CAACwD,IAAT,CAAc3C,KAAd,CADkB,IACK,IADL;AAElBb,QAAAA,QAAQ,CAACyD,SAAT,CAAmB5C,KAAnB,CAFkB,IAEUwC,IAAI,KAAK,OAFnB;AAGlBrD,QAAAA,QAAQ,CAAC0D,UAAT,CAAoB7C,KAApB,CAHkB,IAGWwC,IAAI,KAAK,QAHpB;AAIlBrD,QAAAA,QAAQ,CAAC2D,SAAT,CAAmB9C,KAAnB,CAJkB,IAIUwC,IAAI,KAAK,OAJnB;AAKlBrD,QAAAA,QAAQ,CAAC4D,YAAT,CAAsB/C,KAAtB,CALkB,IAKayC,QALb,OAArB;;AAOA;AACE,wCAAM,SAAS,EAAEC,UAAjB;AACE,8BAAC,YAAD,OADF,CADF;;;AAKD;AACD,aAAO,IAAP;AACD,KA9HkC;;AAgI3BM,IAAAA,WAhI2B,GAgIb,UAAC/B,CAAD,EAAsC;AAC1D,YAAKgC,QAAL,CAAc,UAAAC,SAAS,UAAK;AAC1BC,UAAAA,OAAO,EAAE,IADiB;AAE1BpB,UAAAA,QAAQ,EAAE,MAAKnC,WAAL,IAAoB,CAACsD,SAAS,CAACC,OAA/B,GAAyCD,SAAS,CAACnB,QAAnD,GAA8D,MAAKtC,aAAL,CAAmBiB,eAAnB,EAF9C,EAAL,EAAvB;;;AAKA,UAAI,MAAKlB,KAAL,CAAW4D,OAAf,EAAwB;AACtB,cAAK5D,KAAL,CAAW4D,OAAX,CAAmBnC,CAAnB;AACD;AACF,KAzIkC;;AA2I3BoC,IAAAA,UA3I2B,GA2Id,UAACpC,CAAD,EAAsC;AACzD,UAAMqC,QAAQ,GAAG,MAAK7D,aAAL,CAAmB8D,OAAnB,EAAjB;AACA,YAAKC,WAAL,CAAiB,EAAEL,OAAO,EAAE,KAAX,EAAkBpB,QAAQ,EAAE,IAA5B,EAAkC0B,SAAS,EAAE,KAA7C,EAAjB;;AAEA,UAAI,MAAKjE,KAAL,CAAWkE,MAAf,EAAuB;AACrB,YAAIJ,QAAJ,EAAc;AACZrC,UAAAA,CAAC,CAAC0C,OAAF;AACA,gBAAK5D,SAAL,GAAiBkB,CAAjB;AACD,SAHD,MAGO;AACL,gBAAKzB,KAAL,CAAWkE,MAAX,CAAkBzC,CAAlB;AACD;AACF;AACF,KAvJkC;;AAyJ3B2C,IAAAA,sBAzJ2B,GAyJF,UAAC3C,CAAD,EAA0C;AACzE,UAAM4C,UAAU,GAAG,MAAKlE,iBAAL,GAAyB,MAAKA,iBAAL,CAAuBkE,UAAvB,CAAkC5C,CAAC,CAAC6C,MAApC,CAAzB,GAAuE,KAA1F;AACA,UAAI,MAAKhC,KAAL,CAAWqB,OAAX,IAAsB,CAACU,UAA3B,EAAuC;AACrC5C,QAAAA,CAAC,CAAC8C,cAAF;AACD;AACD,YAAKlE,YAAL,GAAoB,CAAC,MAAKiC,KAAL,CAAWqB,OAAhC;AACA,YAAKvD,WAAL,GAAmBiE,UAAnB;AACD,KAhKkC;;AAkK3BG,IAAAA,yBAlK2B,GAkKC,UAACnC,IAAD,EAAqC;AACvE,UAAI,EAAE,MAAKhC,YAAL,IAAqB,MAAKJ,aAAL,CAAmBwE,OAAnB,EAAvB,CAAJ,EAA0D;AACxD,cAAKxD,mBAAL,CAAyBoB,IAAzB;AACD;AACD,YAAKhC,YAAL,GAAoB,KAApB;AACA,YAAKD,WAAL,GAAmB,KAAnB;AACD,KAxKkC;;AA0K3BsE,IAAAA,oBA1K2B,GA0KJ,YAAM;AACnC,YAAKjB,QAAL,CAAc,EAAEkB,OAAO,EAAE,IAAX,EAAiBpC,QAAQ,EAAE,IAA3B,EAAd;AACD,KA5KkC;;AA8K3BqC,IAAAA,kBA9K2B,GA8KN,YAAM;AACjC,UAAMC,SAAS,GAAGC,YAAY,EAA9B;AACA;AACED,MAAAA,SAAS;AACTA,MAAAA,SAAS,CAACE,QAAV,GAAqBC,MAArB,KAAgC/F,eADhC;AAEA,YAAKqD,KAAL,CAAWC,QAAX,KAAwBnD,yBAAyB,CAACqD,GAHpD;AAIE;AACA,cAAKxB,mBAAL,CAAyB7B,yBAAyB,CAACqD,GAAnD;AACD;AACF,KAvLkC;;AAyL3BwC,IAAAA,aAzL2B,GAyLX,UAACxD,CAAD,EAAyC;AAC/D,UAAI,MAAKhB,kBAAL,CAAwBZ,aAAa,CAAC4B,CAAD,CAArC,EAA0CA,CAA1C,CAAJ,EAAkD;AAChDA,QAAAA,CAAC,CAAC8C,cAAF;AACD;AACD,UAAI,MAAKvE,KAAL,CAAWkF,SAAf,EAA0B;AACxB,cAAKlF,KAAL,CAAWkF,SAAX,CAAqBzD,CAArB;AACD;AACF,KAhMkC;;AAkM3B0D,IAAAA,WAlM2B,GAkMb,UAAC1D,CAAD,EAA0C;AAC9D,UAAM2D,MAAM,GAAG3D,CAAC,IAAIA,CAAC,CAAC4D,aAAF,CAAgBC,OAAhB,CAAwB,MAAxB,EAAgCC,IAAhC,EAApB;AACA,UAAIH,MAAM,IAAI,MAAKnF,aAAL,CAAmBuF,cAAnB,CAAkCJ,MAAlC,CAAd,EAAyD;AACvD,cAAKnF,aAAL,CAAmBwF,KAAnB,CAAyBL,MAAzB;AACA,cAAKpB,WAAL;AACD;AACF,KAxMkC;;AA0M3B0B,IAAAA,iBA1M2B,GA0MP,YAAM;AAChC,YAAKzE,mBAAL,CAAyB7B,yBAAyB,CAACqD,GAAnD;AACD,KA5MkC;;AA8M3BkD,IAAAA,gBA9M2B,GA8MR,UAACC,EAAD,EAA8B;AACvD,YAAK1F,aAAL,GAAqB0F,EAArB;AACD,KAhNkC;;AAkN3BC,IAAAA,oBAlN2B,GAkNJ,UAACD,EAAD,EAAkC;AAC/D,YAAKzF,iBAAL,GAAyByF,EAAzB;AACD,KApNkC;;AAsN3B3E,IAAAA,mBAtN2B,GAsNL,UAACsB,QAAD,EAAsD;AAClF,YAAKkB,QAAL,CAAc,EAAElB,QAAQ,EAARA,QAAF,EAAY0B,SAAS,EAAE,KAAvB,EAAd;AACD,KAxNkC;;AA0N3BD,IAAAA,WA1N2B,GA0Nb,UAAC1B,KAAD,EAA+C,KAA9CA,KAA8C,cAA9CA,KAA8C,GAAb,EAAa;AACnE,UAAMwD,cAAc,GAAG,MAAK7F,aAAL,CAAmB8F,SAAnB,EAAvB;;AAEA,YAAKtC,QAAL,cAAmBnB,KAAnB,IAA0BwD,cAAc,EAAdA,cAA1B,KAA8D,MAAKE,UAAnE;AACD,KA9NkC;;AAgO3BC,IAAAA,eAhO2B,GAgOT,YAAY;AACpC,YAAKhG,aAAL,CAAmBiG,MAAnB,CAA0B,MAAKlG,KAA/B,EAAsC,MAAKT,MAA3C;;AAEA,YAAKyE,WAAL;AACD,KApOkC;;AAsO3BhC,IAAAA,aAtO2B,GAsOX,YAAY;AAClC,YAAKf,mBAAL,CAAyB7B,yBAAyB,CAACqD,GAAnD;AACD,KAxOkC;;AA0O3B1B,IAAAA,cA1O2B,GA0OV,YAAY;AACnC,UAAMoF,KAAK,GAAG,MAAKlG,aAAL,CAAmBmG,GAAnB,CAAuB,MAAK9D,KAAL,CAAWC,QAAlC,CAAd;AACA,UAAI4D,KAAK,KAAK,IAAV,IAAkBA,KAAK,KAAK,EAAhC,EAAoC;AAClC,YAAI,CAAC,MAAK7F,iBAAV,EAA6B;AAC3B,gBAAKM,cAAL,CAAoB,CAApB;AACD;AACD,cAAKN,iBAAL,GAAyB,KAAzB;AACD;AACF,KAlPkC;;AAoP3B0F,IAAAA,UApP2B,GAoPd,YAAY;AAC/B,UAAMG,KAAK,GAAG,MAAKlG,aAAL,CAAmBoG,iBAAnB,EAAd;AACA,UAAI,MAAKrG,KAAL,CAAWmG,KAAX,KAAqBA,KAAzB,EAAgC;AAC9B;AACD;AACD,UAAI,MAAKnG,KAAL,CAAWsG,aAAf,EAA8B;AAC5B,cAAKtG,KAAL,CAAWsG,aAAX,CAAyBH,KAAzB;AACD;AACD,UAAI,MAAK5F,SAAL,IAAkB,MAAKP,KAAL,CAAWkE,MAAjC,EAAyC;AACvC,cAAKlE,KAAL,CAAWkE,MAAX,CAAkB,MAAK3D,SAAvB;AACA,cAAKA,SAAL,GAAiB,IAAjB;AACD;AACF,KAhQkC;;AAkQ3BqB,IAAAA,aAlQ2B,GAkQX,YAAY;AAClC,UAAMW,QAAQ,GAAG,MAAKD,KAAL,CAAWC,QAAX,KAAwB,IAAxB,GAA+B,MAAKtC,aAAL,CAAmBiB,eAAnB,EAA/B,GAAsE,MAAKoB,KAAL,CAAWC,QAAlG;AACA,YAAKtC,aAAL,CAAmBsG,KAAnB,CAAyBhE,QAAzB;AACA,YAAKyB,WAAL,CAAiB;AACfC,QAAAA,SAAS,EAAE,KADI;AAEf1B,QAAAA,QAAQ,EAAEA,QAAQ,KAAKnD,yBAAyB,CAACqD,GAAvC,GAA6C,MAAKxC,aAAL,CAAmBiB,eAAnB,EAA7C,GAAoFqB,QAF/E,EAAjB;;AAID,KAzQkC;;AA2Q3BT,IAAAA,YA3Q2B,GA2QZ,YAAY;AACD,YAAKQ,KADJ,CACzBC,QADyB,eACzBA,QADyB,CACf0B,SADe,eACfA,SADe;AAEjC,UAAMuC,QAAQ,GAAGjE,QAAQ,KAAK,IAAb,GAAoB,MAAKtC,aAAL,CAAmBmB,gBAAnB,EAApB,GAA4DmB,QAA7E;AACA,UAAI,MAAKtC,aAAL,CAAmBwG,MAAnB,CAA0BD,QAA1B,CAAJ,EAAyC;AACvC,cAAK5F,cAAL,CAAoB,CAAC,CAArB;AACA;AACD;AACD,UAAI2B,QAAQ,KAAKnD,yBAAyB,CAACqD,GAA3C,EAAgD;AAC9C,cAAKxC,aAAL,CAAmBsG,KAAnB,CAAyBnH,yBAAyB,CAACqD,GAAnD;AACA,cAAKuB,WAAL,CAAiB,EAAEzB,QAAQ,EAAE,MAAKtC,aAAL,CAAmBiB,eAAnB,EAAZ,EAAjB;AACA;AACD;AACD,YAAKjB,aAAL,CAAmByG,kBAAnB,CAAsCF,QAAtC,EAAgDvC,SAAhD;AACA,YAAKD,WAAL,CAAiB;AACfC,QAAAA,SAAS,EAAE,MAAKhE,aAAL,CAAmBmG,GAAnB,CAAuBI,QAAvB,MAAqC,IADjC;AAEfjE,QAAAA,QAAQ,EAAEiE,QAFK,EAAjB;;AAID,KA5RkC;;AA8R3BlF,IAAAA,kBA9R2B,GA8RN,UAACqF,IAAD,EAAwB;AAC3CpE,MAAAA,QAD2C,GAC9B,MAAKD,KADyB,CAC3CC,QAD2C;AAEnD,UAAMqE,OAAO,GAAG,MAAK3G,aAAL,CAAmBqB,kBAAnB,CAAsCiB,QAAtC,EAAgDoE,IAAhD,CAAhB;AACA,UAAI,CAACC,OAAL,EAAc;AACZ,cAAK1E,KAAL;AACA;AACD;AACD,YAAK8B,WAAL,CAAiB;AACfC,QAAAA,SAAS,EAAE,KADI;AAEf1B,QAAAA,QAAQ,EAAEA,QAAQ,KAAKnD,yBAAyB,CAACqD,GAAvC,GAA6C,MAAKxC,aAAL,CAAmBiB,eAAnB,EAA7C,GAAoFqB,QAF/E,EAAjB;;AAID,KAzSkC;;AA2S3B3B,IAAAA,cA3S2B,GA2SV,UAAC+F,IAAD,EAAwB;AAC/C,UAAMpE,QAAQ,GAAG,MAAKtC,aAAL,CAAmB4G,cAAnB,CAAkC,MAAKvE,KAAL,CAAWC,QAA7C,EAAuDoE,IAAvD,CAAjB;AACA,UAAIpE,QAAQ,KAAK,MAAKD,KAAL,CAAWC,QAA5B,EAAsC;AACpC,cAAKkB,QAAL,CAAc,EAAElB,QAAQ,EAARA,QAAF,EAAY0B,SAAS,EAAE,KAAvB,EAAd;AACD;AACF,KAhTkC;;AAkT3BvC,IAAAA,UAlT2B,GAkTd,UAACoF,KAAD,EAAmD;AACtE,UAAIvE,QAAQ,GAAG,MAAKD,KAAL,CAAWC,QAA1B;AACA,UAAIA,QAAQ,KAAKnD,yBAAyB,CAACqD,GAA3C,EAAgD;AAC9CF,QAAAA,QAAQ,GAAG,MAAKtC,aAAL,CAAmBiB,eAAnB,EAAX;AACA,cAAKjB,aAAL,CAAmBsG,KAAnB,CAAyBnH,yBAAyB,CAACqD,GAAnD;AACA,cAAKgB,QAAL,CAAc,EAAElB,QAAQ,EAARA,QAAF,EAAd;AACD;AACD,UAAM0B,SAAS,GAAG,MAAKhE,aAAL,CAAmB8G,QAAnB,CAA4BD,KAAK,CAACE,GAAlC,EAAuCzE,QAAvC,EAAiD,MAAKD,KAAL,CAAW2B,SAA5D,CAAlB;;AAEA,UAAI,CAACA,SAAL,EAAgB;AACd,cAAK3D,iBAAL,GAAyB,IAAzB;AACA,cAAKM,cAAL,CAAoB,CAApB;AACD;AACD,YAAKoD,WAAL,CAAiB,EAAEC,SAAS,EAATA,SAAF,EAAjB;AACD,KAhUkC,CAGjC,MAAK3B,KAAL,GAAa,EACXwD,cAAc,EAAE,EADL,EAEXvD,QAAQ,EAAE,IAFC,EAGX0B,SAAS,EAAE,KAHA,EAIXN,OAAO,EAAE,KAJE,EAKXgB,OAAO,EAAE,KALE,EAAb,CAHiC,aAUlC,CA7CH,wCA+CSsC,kBA/CT,GA+CE,4BAA0BC,SAA1B,EAAqDxD,SAArD,EAAgF,CAC9E,IACEwD,SAAS,CAACf,KAAV,KAAoB,KAAKnG,KAAL,CAAWmG,KAA/B,IACAe,SAAS,CAACC,OAAV,KAAsB,KAAKnH,KAAL,CAAWmH,OADjC,IAEAD,SAAS,CAACE,OAAV,KAAsB,KAAKpH,KAAL,CAAWoH,OAFjC,IAGA,KAAKnH,aAAL,CAAmBoH,eAAnB,CAAmC,KAAK9H,MAAxC,CAJF,EAKE,CACA,KAAK0G,eAAL,GACD,CACD,KAAK7D,UAAL,GACD,CAzDH,QA2ESkF,iBA3ET,GA2EE,6BAAiC,CAC/B,KAAKrB,eAAL,GACD,CA7EH,QA+ESsB,IA/ET,GA+EE,gBAAc,CACZ,IAAI,KAAKrH,aAAT,EAAwB,CACtB,KAAKA,aAAL,CAAmBqH,IAAnB,GACD,CACF,CAnFH,QAqFSC,KArFT,GAqFE,iBAAe,CACb,IAAI,KAAKtH,aAAT,EAAwB,CACtB,KAAKA,aAAL,CAAmBsH,KAAnB,GACD,CACF,CAzFH,QA2FStF,KA3FT,GA2FE,iBAAe,CACb,IAAI,KAAKhC,aAAT,EAAwB,CACtB,KAAKA,aAAL,CAAmBgC,KAAnB,GACD,CACF,CA/FH,QAiGSuF,MAjGT,GAiGE,kBAAgB,mBACd,OACE,oBAAC,YAAD,CAAc,QAAd,QACG,UAAAjH,KAAK,EAAI,CACR,MAAI,CAACA,KAAL,GAAaA,KAAb,CACA,OAAO,MAAI,CAACkH,UAAL,EAAP,CACD,CAJH,CADF,CAQD,CA1GH,QA4GUA,UA5GV,GA4GE,sBAAqB,oBACsC,KAAKpF,KAD3C,CACXqB,OADW,gBACXA,OADW,CACFpB,QADE,gBACFA,QADE,CACQ0B,SADR,gBACQA,SADR,CACmB6B,cADnB,gBACmBA,cADnB,CAEnB,IAAM6B,SAAS,GAAGhE,OAAO,IAAImC,cAAc,KAAK,EAA9B,GAAmC,KAAK7F,aAAL,CAAmB2H,YAAnB,EAAnC,GAAuE,EAAzF,CAEA,OACE,oBAAC,aAAD,IACE,KAAK,EAAE,KAAK5H,KAAL,CAAW6H,KADpB,EAEE,GAAG,EAAE,KAAKlC,gBAFZ,EAGE,IAAI,EAAE,KAAK3F,KAAL,CAAWgD,IAHnB,EAIE,QAAQ,EAAE,KAAKhD,KAAL,CAAWiD,QAJvB,EAKE,KAAK,EAAE,KAAKjD,KAAL,CAAW8H,KALpB,EAME,OAAO,EAAE,KAAK9H,KAAL,CAAW+H,OANtB,EAOE,MAAM,EAAE,KAAKlE,UAPf,EAQE,OAAO,EAAE,KAAKL,WARhB,EASE,SAAS,EAAE,KAAKyB,aATlB,EAUE,kBAAkB,EAAE,KAAKb,sBAV3B,EAWE,OAAO,EAAE,KAAKe,WAXhB,EAYE,SAAS,EAAE,KAAKrC,UAAL,EAZb,EAaE,oBAAoB,EAAE,KAAK4C,iBAb7B,EAcE,gBAAgB,EAAE,KAAKhB,oBAdzB,EAeE,cAAc,EAAE,KAAKE,kBAfvB,EAgBE,KAAK,EAAE,KAAK3E,aAAL,CAAmBoG,iBAAnB,EAhBT,IAkBE,oBAAC,iBAAD,IACE,GAAG,EAAE,KAAKR,oBADZ,EAEE,SAAS,EAAE8B,SAFb,EAGE,qBAAqB,EAAE,KAAKnD,yBAH9B,EAIE,QAAQ,EAAEjC,QAJZ,EAKE,SAAS,EAAE0B,SALb,GAlBF,CADF,CA4BD,CA5IH,oBAA+BnF,KAAK,CAACkJ,SAArC,WACgBC,mBADhB,GACsC,WADtC,UAGgBC,YAHhB,GAG+B,EAC3B/B,KAAK,EAAE,EADoB,EAE3BgB,OAAO,EAAEhI,YAFkB,EAG3BiI,OAAO,EAAElI,YAHkB,EAI3B8D,IAAI,EAAE,OAJqB,EAK3B6E,KAAK,EAAE,GALoB,EAH/B","sourcesContent":["import React from 'react';\r\nimport cn from 'classnames';\r\n\r\nimport { ConditionalHandler } from '../../lib/ConditionalHandler';\r\nimport { LENGTH_FULLDATE, MAX_FULLDATE, MIN_FULLDATE } from '../../lib/date/constants';\r\nimport { InternalDateComponentType } from '../../lib/date/types';\r\nimport { Theme } from '../../lib/theming/Theme';\r\nimport { DatePickerLocale, DatePickerLocaleHelper } from '../DatePicker/locale';\r\nimport { InputLikeText } from '../../internal/InputLikeText';\r\nimport { locale } from '../../lib/locale/decorators';\r\nimport { ThemeContext } from '../../lib/theming/ThemeContext';\r\nimport { CalendarIcon } from '../../internal/icons/16px';\r\n\r\nimport { DateFragmentsView } from './DateFragmentsView';\r\nimport { jsStyles } from './DateInput.styles';\r\nimport { Actions, extractAction } from './helpers/DateInputKeyboardActions';\r\nimport { InternalDateMediator } from './helpers/InternalDateMediator';\r\n\r\nexport interface DateInputState {\r\n  selected: InternalDateComponentType | null;\r\n  valueFormatted: string;\r\n  inputMode: boolean;\r\n  focused: boolean;\r\n  dragged: boolean;\r\n}\r\n\r\nexport interface DateInputProps {\r\n  value: string;\r\n  error?: boolean;\r\n  warning?: boolean;\r\n  disabled?: boolean;\r\n  /**\r\n   * Минимальная дата.\r\n   * @default '01.01.1900'\r\n   */\r\n  minDate: string;\r\n  /**\r\n   * Максимальная дата\r\n   * @default '31.12.2099'\r\n   */\r\n  maxDate: string;\r\n  /**\r\n   * Ширина поля\r\n   * @default 125\r\n   */\r\n  width: string | number;\r\n  withIcon?: boolean;\r\n  /**\r\n   * Размер поля\r\n   * @default 'small'\r\n   */\r\n  size: 'small' | 'large' | 'medium';\r\n  onBlur?: (x0: React.FocusEvent<HTMLElement>) => void;\r\n  onFocus?: (x0: React.FocusEvent<HTMLElement>) => void;\r\n  /**\r\n   * Вызывается при изменении `value`\r\n   *\r\n   * @param value - строка в формате `dd.mm.yyyy`.\r\n   */\r\n  onValueChange?: (value: string) => void;\r\n  onKeyDown?: (x0: React.KeyboardEvent<HTMLElement>) => void;\r\n}\r\n\r\n@locale('DatePicker', DatePickerLocaleHelper)\r\nexport class DateInput extends React.Component<DateInputProps, DateInputState> {\r\n  public static __KONTUR_REACT_UI__ = 'DateInput';\r\n\r\n  public static defaultProps = {\r\n    value: '',\r\n    minDate: MIN_FULLDATE,\r\n    maxDate: MAX_FULLDATE,\r\n    size: 'small',\r\n    width: 125,\r\n  };\r\n\r\n  private iDateMediator: InternalDateMediator = new InternalDateMediator();\r\n  private inputLikeText: InputLikeText | null = null;\r\n  private dateFragmentsView: DateFragmentsView | null = null;\r\n  private isMouseDown = false;\r\n  private isMouseFocus = false;\r\n  private ignoringDelimiter = false;\r\n  private locale!: DatePickerLocale;\r\n  private blurEvent: React.FocusEvent<HTMLElement> | null = null;\r\n  private theme!: Theme;\r\n  private conditionalHandler = new ConditionalHandler<Actions, [React.KeyboardEvent<HTMLElement>]>()\r\n    .add(Actions.MoveSelectionLeft, () => this.shiftSelection(-1))\r\n    .add(Actions.MoveSelectionRight, () => this.shiftSelection(1))\r\n    .add(Actions.Separator, () => this.pressDelimiter())\r\n    .add(Actions.MoveSelectionFirst, () => this.selectDateComponent(this.iDateMediator.getLeftmostType()))\r\n    .add(Actions.MoveSelectionLast, () => this.selectDateComponent(this.iDateMediator.getRightmostType()))\r\n    .add(Actions.Increment, () => this.shiftDateComponent(1))\r\n    .add(Actions.Decrement, () => this.shiftDateComponent(-1))\r\n    .add(Actions.Digit, e => this.inputValue(e))\r\n    .add(Actions.ClearSelection, () => this.clearSelected())\r\n    .add(Actions.ClearOneChar, () => this.clearOneChar())\r\n    .add(Actions.FullSelection, () => this.fullSelection())\r\n    .add(Actions.WrongInput, () => this.blink())\r\n    .build();\r\n\r\n  constructor(props: DateInputProps) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      valueFormatted: '',\r\n      selected: null,\r\n      inputMode: false,\r\n      focused: false,\r\n      dragged: false,\r\n    };\r\n  }\r\n\r\n  public componentDidUpdate(prevProps: DateInputProps, prevState: DateInputState) {\r\n    if (\r\n      prevProps.value !== this.props.value ||\r\n      prevProps.minDate !== this.props.minDate ||\r\n      prevProps.maxDate !== this.props.maxDate ||\r\n      this.iDateMediator.isChangedLocale(this.locale)\r\n    ) {\r\n      this.updateFromProps();\r\n    }\r\n    this.selectNode();\r\n  }\r\n\r\n  public selectNode = () => {\r\n    const type = this.state.selected;\r\n    const dateFragmentsView = this.dateFragmentsView && this.dateFragmentsView.getRootNode();\r\n    if (type === null || !this.inputLikeText || !dateFragmentsView) {\r\n      return;\r\n    }\r\n    if (type === InternalDateComponentType.All) {\r\n      this.inputLikeText.selectInnerNode(dateFragmentsView, 0, 5);\r\n      return;\r\n    }\r\n    const index = this.iDateMediator.getTypesOrder().indexOf(type);\r\n    if (index > -1) {\r\n      this.inputLikeText.selectInnerNode(dateFragmentsView, index * 2, index * 2 + 1);\r\n    }\r\n  };\r\n\r\n  public componentDidMount(): void {\r\n    this.updateFromProps();\r\n  }\r\n\r\n  public blur() {\r\n    if (this.inputLikeText) {\r\n      this.inputLikeText.blur();\r\n    }\r\n  }\r\n\r\n  public focus() {\r\n    if (this.inputLikeText) {\r\n      this.inputLikeText.focus();\r\n    }\r\n  }\r\n\r\n  public blink() {\r\n    if (this.inputLikeText) {\r\n      this.inputLikeText.blink();\r\n    }\r\n  }\r\n\r\n  public render() {\r\n    return (\r\n      <ThemeContext.Consumer>\r\n        {theme => {\r\n          this.theme = theme;\r\n          return this.renderMain();\r\n        }}\r\n      </ThemeContext.Consumer>\r\n    );\r\n  }\r\n\r\n  private renderMain() {\r\n    const { focused, selected, inputMode, valueFormatted } = this.state;\r\n    const fragments = focused || valueFormatted !== '' ? this.iDateMediator.getFragments() : [];\r\n\r\n    return (\r\n      <InputLikeText\r\n        width={this.props.width}\r\n        ref={this.inputLikeTextRef}\r\n        size={this.props.size}\r\n        disabled={this.props.disabled}\r\n        error={this.props.error}\r\n        warning={this.props.warning}\r\n        onBlur={this.handleBlur}\r\n        onFocus={this.handleFocus}\r\n        onKeyDown={this.handleKeyDown}\r\n        onMouseDownCapture={this.handleMouseDownCapture}\r\n        onPaste={this.handlePaste}\r\n        rightIcon={this.renderIcon()}\r\n        onDoubleClickCapture={this.handleDoubleClick}\r\n        onMouseDragStart={this.handleMouseDragStart}\r\n        onMouseDragEnd={this.handleMouseDragEnd}\r\n        value={this.iDateMediator.getInternalString()}\r\n      >\r\n        <DateFragmentsView\r\n          ref={this.dateFragmentsViewRef}\r\n          fragments={fragments}\r\n          onSelectDateComponent={this.handleSelectDateComponent}\r\n          selected={selected}\r\n          inputMode={inputMode}\r\n        />\r\n      </InputLikeText>\r\n    );\r\n  }\r\n\r\n  private renderIcon = () => {\r\n    const { withIcon, size, disabled = false } = this.props;\r\n\r\n    if (withIcon) {\r\n      const theme = this.theme;\r\n      const iconStyles = cn({\r\n        [jsStyles.icon(theme)]: true,\r\n        [jsStyles.iconSmall(theme)]: size === 'small',\r\n        [jsStyles.iconMedium(theme)]: size === 'medium',\r\n        [jsStyles.iconLarge(theme)]: size === 'large',\r\n        [jsStyles.iconDisabled(theme)]: disabled,\r\n      });\r\n      return (\r\n        <span className={iconStyles}>\r\n          <CalendarIcon />\r\n        </span>\r\n      );\r\n    }\r\n    return null;\r\n  };\r\n\r\n  private handleFocus = (e: React.FocusEvent<HTMLElement>) => {\r\n    this.setState(prevState => ({\r\n      focused: true,\r\n      selected: this.isMouseDown && !prevState.focused ? prevState.selected : this.iDateMediator.getLeftmostType(),\r\n    }));\r\n\r\n    if (this.props.onFocus) {\r\n      this.props.onFocus(e);\r\n    }\r\n  };\r\n\r\n  private handleBlur = (e: React.FocusEvent<HTMLElement>) => {\r\n    const restored = this.iDateMediator.restore();\r\n    this.updateValue({ focused: false, selected: null, inputMode: false });\r\n\r\n    if (this.props.onBlur) {\r\n      if (restored) {\r\n        e.persist();\r\n        this.blurEvent = e;\r\n      } else {\r\n        this.props.onBlur(e);\r\n      }\r\n    }\r\n  };\r\n\r\n  private handleMouseDownCapture = (e: React.MouseEvent<HTMLSpanElement>) => {\r\n    const isFragment = this.dateFragmentsView ? this.dateFragmentsView.isFragment(e.target) : false;\r\n    if (this.state.focused && !isFragment) {\r\n      e.preventDefault();\r\n    }\r\n    this.isMouseFocus = !this.state.focused;\r\n    this.isMouseDown = isFragment;\r\n  };\r\n\r\n  private handleSelectDateComponent = (type: InternalDateComponentType) => {\r\n    if (!(this.isMouseFocus && this.iDateMediator.isEmpty())) {\r\n      this.selectDateComponent(type);\r\n    }\r\n    this.isMouseFocus = false;\r\n    this.isMouseDown = false;\r\n  };\r\n\r\n  private handleMouseDragStart = () => {\r\n    this.setState({ dragged: true, selected: null });\r\n  };\r\n\r\n  private handleMouseDragEnd = () => {\r\n    const selection = getSelection();\r\n    if (\r\n      selection &&\r\n      selection.toString().length === LENGTH_FULLDATE &&\r\n      this.state.selected !== InternalDateComponentType.All\r\n    ) {\r\n      this.selectDateComponent(InternalDateComponentType.All);\r\n    }\r\n  };\r\n\r\n  private handleKeyDown = (e: React.KeyboardEvent<HTMLElement>) => {\r\n    if (this.conditionalHandler(extractAction(e), e)) {\r\n      e.preventDefault();\r\n    }\r\n    if (this.props.onKeyDown) {\r\n      this.props.onKeyDown(e);\r\n    }\r\n  };\r\n\r\n  private handlePaste = (e: React.ClipboardEvent<HTMLElement>) => {\r\n    const pasted = e && e.clipboardData.getData('text').trim();\r\n    if (pasted && this.iDateMediator.validateString(pasted)) {\r\n      this.iDateMediator.paste(pasted);\r\n      this.updateValue();\r\n    }\r\n  };\r\n\r\n  private handleDoubleClick = () => {\r\n    this.selectDateComponent(InternalDateComponentType.All);\r\n  };\r\n\r\n  private inputLikeTextRef = (el: InputLikeText | null) => {\r\n    this.inputLikeText = el;\r\n  };\r\n\r\n  private dateFragmentsViewRef = (el: DateFragmentsView | null) => {\r\n    this.dateFragmentsView = el;\r\n  };\r\n\r\n  private selectDateComponent = (selected: InternalDateComponentType | null): void => {\r\n    this.setState({ selected, inputMode: false });\r\n  };\r\n\r\n  private updateValue = (state: Partial<DateInputState> = {}): void => {\r\n    const valueFormatted = this.iDateMediator.getString();\r\n\r\n    this.setState({ ...state, valueFormatted } as DateInputState, this.emitChange);\r\n  };\r\n\r\n  private updateFromProps = (): void => {\r\n    this.iDateMediator.update(this.props, this.locale);\r\n\r\n    this.updateValue();\r\n  };\r\n\r\n  private fullSelection = (): void => {\r\n    this.selectDateComponent(InternalDateComponentType.All);\r\n  };\r\n\r\n  private pressDelimiter = (): void => {\r\n    const value = this.iDateMediator.get(this.state.selected);\r\n    if (value !== null && value !== '') {\r\n      if (!this.ignoringDelimiter) {\r\n        this.shiftSelection(1);\r\n      }\r\n      this.ignoringDelimiter = false;\r\n    }\r\n  };\r\n\r\n  private emitChange = (): void => {\r\n    const value = this.iDateMediator.getInternalString();\r\n    if (this.props.value === value) {\r\n      return;\r\n    }\r\n    if (this.props.onValueChange) {\r\n      this.props.onValueChange(value);\r\n    }\r\n    if (this.blurEvent && this.props.onBlur) {\r\n      this.props.onBlur(this.blurEvent);\r\n      this.blurEvent = null;\r\n    }\r\n  };\r\n\r\n  private clearSelected = (): void => {\r\n    const selected = this.state.selected === null ? this.iDateMediator.getLeftmostType() : this.state.selected;\r\n    this.iDateMediator.clear(selected);\r\n    this.updateValue({\r\n      inputMode: false,\r\n      selected: selected === InternalDateComponentType.All ? this.iDateMediator.getLeftmostType() : selected,\r\n    });\r\n  };\r\n\r\n  private clearOneChar = (): void => {\r\n    const { selected, inputMode } = this.state;\r\n    const nextType = selected === null ? this.iDateMediator.getRightmostType() : selected;\r\n    if (this.iDateMediator.isNull(nextType)) {\r\n      this.shiftSelection(-1);\r\n      return;\r\n    }\r\n    if (selected === InternalDateComponentType.All) {\r\n      this.iDateMediator.clear(InternalDateComponentType.All);\r\n      this.updateValue({ selected: this.iDateMediator.getLeftmostType() });\r\n      return;\r\n    }\r\n    this.iDateMediator.deleteOneCharRight(nextType, inputMode);\r\n    this.updateValue({\r\n      inputMode: this.iDateMediator.get(nextType) !== null,\r\n      selected: nextType,\r\n    });\r\n  };\r\n\r\n  private shiftDateComponent = (step: number): void => {\r\n    const { selected } = this.state;\r\n    const changed = this.iDateMediator.shiftDateComponent(selected, step);\r\n    if (!changed) {\r\n      this.blink();\r\n      return;\r\n    }\r\n    this.updateValue({\r\n      inputMode: false,\r\n      selected: selected === InternalDateComponentType.All ? this.iDateMediator.getLeftmostType() : selected,\r\n    });\r\n  };\r\n\r\n  private shiftSelection = (step: number): void => {\r\n    const selected = this.iDateMediator.getShiftedType(this.state.selected, step);\r\n    if (selected !== this.state.selected) {\r\n      this.setState({ selected, inputMode: false });\r\n    }\r\n  };\r\n\r\n  private inputValue = (event: React.KeyboardEvent<HTMLElement>): void => {\r\n    let selected = this.state.selected;\r\n    if (selected === InternalDateComponentType.All) {\r\n      selected = this.iDateMediator.getLeftmostType();\r\n      this.iDateMediator.clear(InternalDateComponentType.All);\r\n      this.setState({ selected });\r\n    }\r\n    const inputMode = this.iDateMediator.inputKey(event.key, selected, this.state.inputMode);\r\n\r\n    if (!inputMode) {\r\n      this.ignoringDelimiter = true;\r\n      this.shiftSelection(1);\r\n    }\r\n    this.updateValue({ inputMode });\r\n  };\r\n}\r\n"]}