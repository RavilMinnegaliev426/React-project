{"version":3,"sources":["InternalDateMediator.ts"],"names":["InternalDate","InternalDateGetter","InternalDateTransformer","InternalDateComponentType","InternalDateValidateCheck","inputNumber","InternalDateMediator","iDate","update","props","locale","start","getRangeStart","min","toInternalString","end","getRangeEnd","max","order","separator","setOrder","setSeparator","minDate","setRangeStart","value","maxDate","setRangeEnd","parseInternalValue","paste","pasted","parseValue","restore","cutOffExcess","isIncomplete","restored","clone","isEqual","duplicateOf","getFragments","toFragments","withSeparator","withPad","deleteOneCharRight","type","inputMode","prev","get","String","padDateComponent","next","replace","set","isChangedLocale","getOrder","getSeparator","isNull","isEmpty","clear","validateString","parseValueToDate","getString","toString","getInternalString","getTypesOrder","map","getLeftmostType","getRightmostType","inputKey","key","prevValue","Year","nextValue","nextInputMode","shiftDateComponent","step","isValidRange","validate","checks","Range","shift","isRange","isLoop","changed","isEqualComponentDate","getShiftedType","typesOrder","index","indexOf","nextIndex","All","getYear","shiftedType"],"mappings":"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","sourcesContent":["import { InternalDate } from '../../../lib/date/InternalDate';\r\nimport { InternalDateGetter } from '../../../lib/date/InternalDateGetter';\r\nimport { InternalDateTransformer } from '../../../lib/date/InternalDateTransformer';\r\nimport { InternalDateComponentType, InternalDateTypesOrder, InternalDateValidateCheck } from '../../../lib/date/types';\r\nimport { DatePickerLocale } from '../../DatePicker/locale';\r\nimport { DateInputProps } from '../DateInput';\r\n\r\nimport { inputNumber } from './inputNumber';\r\n\r\nexport class InternalDateMediator {\r\n  public iDate: InternalDate = new InternalDate();\r\n\r\n  public update = (props: DateInputProps, locale: DatePickerLocale): InternalDateMediator => {\r\n    const start = this.iDate.getRangeStart();\r\n    const min = start && start.toInternalString();\r\n    const end = this.iDate.getRangeEnd();\r\n    const max = end && end.toInternalString();\r\n    const { order, separator } = locale;\r\n    this.iDate.setOrder(order).setSeparator(separator);\r\n    if (props.minDate !== min) {\r\n      this.iDate.setRangeStart(\r\n        props.minDate\r\n          ? new InternalDate({\r\n              order,\r\n              separator,\r\n              value: props.minDate,\r\n            })\r\n          : null,\r\n      );\r\n    }\r\n    if (props.maxDate !== max) {\r\n      this.iDate.setRangeEnd(\r\n        props.maxDate\r\n          ? new InternalDate({\r\n              order,\r\n              separator,\r\n              value: props.maxDate,\r\n            })\r\n          : null,\r\n      );\r\n    }\r\n    if (!props.value || props.value !== this.iDate.toInternalString()) {\r\n      this.iDate.parseInternalValue(props.value);\r\n    }\r\n    return this;\r\n  };\r\n\r\n  public inputKey(key: string, type: InternalDateComponentType | null, inputMode: boolean): boolean {\r\n    const prevValue = this.iDate.get(type);\r\n    if (type === null) {\r\n      type = this.getLeftmostType();\r\n      this.clear(type);\r\n    }\r\n    if (type !== InternalDateComponentType.Year) {\r\n      this.iDate.cutOffExcess(type);\r\n    } else {\r\n      this.iDate.restore(type);\r\n    }\r\n    const { nextValue, nextInputMode } = inputNumber(type, prevValue, key, inputMode);\r\n    this.iDate.set(type, nextValue);\r\n    return nextInputMode;\r\n  }\r\n\r\n  public paste = (pasted: string): InternalDateMediator => {\r\n    this.iDate\r\n      .parseValue(pasted)\r\n      .restore()\r\n      .cutOffExcess();\r\n    return this;\r\n  };\r\n\r\n  public restore = (): boolean => {\r\n    if (this.iDate.isIncomplete()) {\r\n      const restored = this.iDate.clone().restore();\r\n      if (!this.iDate.isEqual(restored)) {\r\n        this.iDate.duplicateOf(restored);\r\n      }\r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n  public shiftDateComponent(type: InternalDateComponentType | null, step: number): boolean {\r\n    type = type === null ? this.getLeftmostType() : type;\r\n    const iDate = this.iDate.clone();\r\n    const isValidRange = iDate.validate({ checks: [InternalDateValidateCheck.Range] });\r\n    const start = iDate.getRangeStart();\r\n    const end = iDate.getRangeEnd();\r\n    if (!isValidRange) {\r\n      // Удерживаем дату в заданном диапазоне\r\n      if (start && InternalDateGetter.max([iDate, start]) === start) {\r\n        iDate.duplicateOf(start);\r\n      } else if (end && InternalDateGetter.min([iDate, end]) === end) {\r\n        iDate.duplicateOf(end);\r\n      }\r\n    } else {\r\n      const clone = iDate.clone().shift(type, step, { isRange: false, isLoop: true });\r\n      if (clone.validate({ checks: [InternalDateValidateCheck.Range] })) {\r\n        iDate.duplicateOf(clone);\r\n      }\r\n    }\r\n    const changed = !this.iDate.isEqualComponentDate(type, iDate);\r\n    this.iDate = iDate;\r\n    return changed;\r\n  }\r\n\r\n  public getShiftedType(type: InternalDateComponentType | null, step: number): InternalDateComponentType | null {\r\n    const typesOrder = this.getTypesOrder();\r\n    const index = type === null ? 0 : typesOrder.indexOf(type);\r\n    const nextIndex = index + step;\r\n\r\n    // Если выделено всё поле, то в завимости от направления перемещения, выделям крайний компонент\r\n    if (type === InternalDateComponentType.All) {\r\n      return step < 0 ? typesOrder[0] : typesOrder[2];\r\n    }\r\n\r\n    // Если текущий компонент \"год\", и он не пуст, то при перемещении выделения \"восстанавливаем\" значение года\r\n    if (type === InternalDateComponentType.Year && this.iDate.getYear() !== null) {\r\n      this.iDate.restore(type);\r\n    }\r\n\r\n    const shiftedType = typesOrder[nextIndex];\r\n    return typeof shiftedType === 'number' ? shiftedType : type;\r\n  }\r\n\r\n  public getFragments = () =>\r\n    this.iDate.toFragments({\r\n      withSeparator: true,\r\n      withPad: true,\r\n    });\r\n\r\n  public deleteOneCharRight = (type: InternalDateComponentType, inputMode: boolean) => {\r\n    let prev = this.iDate.get(type);\r\n    prev = String(inputMode ? prev : InternalDateTransformer.padDateComponent(type, prev));\r\n    const next = prev.replace(/.$/, '') || null;\r\n    this.iDate.set(type, next);\r\n  };\r\n\r\n  public isChangedLocale = (locale: DatePickerLocale): boolean =>\r\n    locale.order !== this.iDate.getOrder() || locale.separator !== this.iDate.getSeparator();\r\n\r\n  public isNull = (type: InternalDateComponentType | null): boolean => this.iDate.get(type) === null;\r\n\r\n  public isEmpty = (): boolean => this.iDate.isEmpty();\r\n\r\n  public get = (type: InternalDateComponentType | null) => this.iDate.get(type);\r\n\r\n  public clear = (type: InternalDateComponentType | null): InternalDate => this.iDate.set(type, null);\r\n\r\n  public validateString = (value: string): boolean =>\r\n    InternalDateTransformer.parseValueToDate(value, this.iDate.getOrder()) !== null;\r\n\r\n  public getString = (): string => (this.iDate.isEmpty() ? '' : this.iDate.toString());\r\n\r\n  public getInternalString = (): string => (this.iDate.isEmpty() ? '' : this.iDate.toInternalString());\r\n\r\n  public getTypesOrder = () => this.iDate.toFragments().map(({ type }) => type) as InternalDateTypesOrder;\r\n\r\n  public getLeftmostType = (): InternalDateComponentType => this.getTypesOrder()[0];\r\n\r\n  public getRightmostType = (): InternalDateComponentType => this.getTypesOrder()[2];\r\n}\r\n"]}