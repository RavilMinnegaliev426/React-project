{"version":3,"sources":["ViewDateInputValidateChecks.tsx"],"names":["React","MAX_DATE","MAX_MONTH","MAX_YEAR","MIN_DATE","MIN_MONTH","MIN_YEAR","InternalDate","InternalDateValidateCheck","Checkbox","Gapped","ViewDateInputValidateChecks","render","internalDate","parseInternalValue","props","value","setRangeStart","minDate","setRangeEnd","maxDate","validate","checks","NotNull","color","Limits","Native","Range","Component"],"mappings":"sEAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,SAASC,QAAT,EAAmBC,SAAnB,EAA8BC,QAA9B,EAAwCC,QAAxC,EAAkDC,SAAlD,EAA6DC,QAA7D,QAA6E,0BAA7E;AACA,SAASC,YAAT,QAA6B,6BAA7B;AACA,SAASC,yBAAT,QAA0C,sBAA1C;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,SAASC,MAAT,QAAuB,WAAvB;;;;;;;;AAQA,WAAaC,2BAAb;AACSC,EAAAA,MADT,GACE,kBAAgB;AACd,QAAMC,YAAY,GAAG,IAAIN,YAAJ,EAArB;AACAM,IAAAA,YAAY,CAACC,kBAAb,CAAgC,KAAKC,KAAL,CAAWC,KAA3C;AACAH,IAAAA,YAAY,CAACI,aAAb,CAA2B,KAAKF,KAAL,CAAWG,OAAX,GAAqB,IAAIX,YAAJ,GAAmBO,kBAAnB,CAAsC,KAAKC,KAAL,CAAWG,OAAjD,CAArB,GAAiF,IAA5G;AACAL,IAAAA,YAAY,CAACM,WAAb,CAAyB,KAAKJ,KAAL,CAAWK,OAAX,GAAqB,IAAIb,YAAJ,GAAmBO,kBAAnB,CAAsC,KAAKC,KAAL,CAAWK,OAAjD,CAArB,GAAiF,IAA1G;;AAEA;AACE,0BAAC,MAAD,IAAQ,GAAG,EAAE,EAAb,EAAiB,QAAQ,MAAzB;AACE,sJADF;AAEE,0BAAC,QAAD,IAAU,QAAQ,MAAlB,EAAmB,OAAO,EAAEP,YAAY,CAACQ,QAAb,CAAsB,EAAEC,MAAM,EAAE,CAACd,yBAAyB,CAACe,OAA3B,CAAV,EAAtB,CAA5B;AACI,oCAAM,KAAK,EAAE,EAAEC,KAAK,EAAE,OAAT,EAAb,cADJ;AAEE;AAC0C,SAD1C;AAEE;AACE,+CADF,CAFF,MAFF,CAFF;;;;;AAYE,0BAAC,QAAD,IAAU,QAAQ,MAAlB,EAAmB,OAAO,EAAEX,YAAY,CAACQ,QAAb,CAAsB,EAAEC,MAAM,EAAE,CAACd,yBAAyB,CAACiB,MAA3B,CAAV,EAAtB,CAA5B;AACI,oCAAM,KAAK,EAAE,EAAED,KAAK,EAAE,OAAT,EAAb,aADJ;AAEE;;AAEE,qCAFF;AAGQlB,MAAAA,QAHR,SAGqBH,QAHrB;AAIE,qCAJF;AAKUE,MAAAA,SALV,SAKwBH,SALxB;AAME,qCANF;AAOUE,MAAAA,QAPV,SAOuBH,QAPvB,CAFF,CAZF;;;AAwBE,0BAAC,QAAD,IAAU,QAAQ,MAAlB,EAAmB,OAAO,EAAEY,YAAY,CAACQ,QAAb,CAAsB,EAAEC,MAAM,EAAE,CAACd,yBAAyB,CAACkB,MAA3B,CAAV,EAAtB,CAA5B;AACI,oCAAM,KAAK,EAAE,EAAEF,KAAK,EAAE,OAAT,EAAb,aADJ;AAEE;AACyE,iDADzE,CAFF,CAxBF;;;AA8BE,0BAAC,QAAD,IAAU,QAAQ,MAAlB,EAAmB,OAAO,EAAEX,YAAY,CAACQ,QAAb,CAAsB,EAAEC,MAAM,EAAE,CAACd,yBAAyB,CAACmB,KAA3B,CAAV,EAAtB,CAA5B;AACI,oCAAM,KAAK,EAAE,EAAEH,KAAK,EAAE,OAAT,EAAb,YADJ;AAEE;AACwC,0DADxC,CAFF,CA9BF,CADF;;;;;AAuCD,GA9CH,sCAAiDxB,KAAK,CAAC4B,SAAvD","sourcesContent":["import React from 'react';\r\n\r\nimport { MAX_DATE, MAX_MONTH, MAX_YEAR, MIN_DATE, MIN_MONTH, MIN_YEAR } from '../../lib/date/constants';\r\nimport { InternalDate } from '../../lib/date/InternalDate';\r\nimport { InternalDateValidateCheck } from '../../lib/date/types';\r\nimport { Checkbox } from '../Checkbox';\r\nimport { Gapped } from '../Gapped';\r\n\r\ninterface DateInputValidateChecksProps {\r\n  value: string;\r\n  minDate: string;\r\n  maxDate: string;\r\n}\r\n\r\nexport class ViewDateInputValidateChecks extends React.Component<DateInputValidateChecksProps> {\r\n  public render() {\r\n    const internalDate = new InternalDate();\r\n    internalDate.parseInternalValue(this.props.value);\r\n    internalDate.setRangeStart(this.props.minDate ? new InternalDate().parseInternalValue(this.props.minDate) : null);\r\n    internalDate.setRangeEnd(this.props.maxDate ? new InternalDate().parseInternalValue(this.props.maxDate) : null);\r\n\r\n    return (\r\n      <Gapped gap={10} vertical>\r\n        <h3>Внутренние проверки</h3>\r\n        <Checkbox disabled checked={internalDate.validate({ checks: [InternalDateValidateCheck.NotNull] })}>\r\n          ⭣ <code style={{ color: 'black' }}>NotNull</code>\r\n          <div>\r\n            Все компоненты даты заполнены (не равны{' '}\r\n            <b>\r\n              <code>null</code>\r\n            </b>\r\n            )\r\n          </div>\r\n        </Checkbox>\r\n        <Checkbox disabled checked={internalDate.validate({ checks: [InternalDateValidateCheck.Limits] })}>\r\n          ⭣ <code style={{ color: 'black' }}>Limits</code>\r\n          <div>\r\n            Компоненты даты не выходят за рамки предустановленных лимитов\r\n            <br />\r\n            Год: {MIN_YEAR} - {MAX_YEAR}\r\n            <br />\r\n            Месяц: {MIN_MONTH} - {MAX_MONTH}\r\n            <br />\r\n            Число: {MIN_DATE} - {MAX_DATE}\r\n          </div>\r\n        </Checkbox>\r\n        <Checkbox disabled checked={internalDate.validate({ checks: [InternalDateValidateCheck.Native] })}>\r\n          ⭣ <code style={{ color: 'black' }}>Native</code>\r\n          <div>\r\n            Из компонентов даты можно создать валидный экземпляр нативного объекта <code>Date()</code>\r\n          </div>\r\n        </Checkbox>\r\n        <Checkbox disabled checked={internalDate.validate({ checks: [InternalDateValidateCheck.Range] })}>\r\n          ⭳ <code style={{ color: 'black' }}>Range</code>\r\n          <div>\r\n            Дата не выходит за пределы диапазонов <code>minDate/maxDate</code>\r\n          </div>\r\n        </Checkbox>\r\n      </Gapped>\r\n    );\r\n  }\r\n}\r\n"]}