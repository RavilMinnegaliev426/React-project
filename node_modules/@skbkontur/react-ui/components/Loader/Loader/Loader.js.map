{"version":3,"sources":["Loader.tsx"],"names":["React","PropTypes","warning","cn","LayoutEvents","Spinner","ThemeContext","ZIndex","jsStyles","Loader","props","theme","containerNode","spinnerNode","spinnerHeight","layoutEvents","wrapperRef","element","checkSpinnerPosition","getBoundingClientRect","containerTop","top","containerRight","right","containerBottom","bottom","containerLeft","left","containerHeight","height","containerWidth","width","windowHeight","window","innerHeight","windowWidth","innerWidth","setState","isStickySpinner","spinnerStyle","Math","abs","cloud","state","componentDidMount","children","addListener","componentWillUnmount","remove","render","renderMain","active","type","caption","className","position","loader","renderSpinner","spinnerContainerSticky","spinnerContainerCenter","Component","__KONTUR_REACT_UI__","defaultProps","Types","normal","propTypes","bool","string","oneOf","Object","keys"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport warning from 'warning';\r\nimport cn from 'classnames';\r\n\r\nimport * as LayoutEvents from '../../lib/LayoutEvents';\r\nimport { Spinner, SpinnerProps } from '../Spinner';\r\nimport { Nullable } from '../../typings/utility-types';\r\nimport { ThemeContext } from '../../lib/theming/ThemeContext';\r\nimport { Theme } from '../../lib/theming/Theme';\r\nimport { ZIndex } from '../../internal/ZIndex';\r\n\r\nimport { jsStyles } from './Loader.styles';\r\n\r\nexport interface LoaderProps {\r\n  children?: React.ReactNode;\r\n  /**\r\n   * Флаг переключения состояния лоадера\r\n   * @default false\r\n   */\r\n  active: boolean;\r\n  caption?: SpinnerProps['caption'];\r\n  className?: string;\r\n  type?: 'mini' | 'normal' | 'big';\r\n  /**\r\n   * @deprecated Старое поведение спиннера - облачко при среднем и большом размере - исчезнет в 3.0 поведение пересено в `@skbkontur/react-ui-addons` смотри [миграцию](https://github.com/skbkontur/retail-ui/blob/master/packages/react-ui/MIGRATION.md)\r\n   *\r\n   * @default false\r\n   */\r\n  cloud?: boolean;\r\n}\r\n\r\nexport interface LoaderState {\r\n  isStickySpinner: boolean;\r\n  spinnerStyle?: object;\r\n}\r\n\r\n/**\r\n * DRAFT - лоадер-контейнер\r\n */\r\nexport class Loader extends React.Component<LoaderProps, LoaderState> {\r\n  public static __KONTUR_REACT_UI__ = 'Loader';\r\n\r\n  public static defaultProps = {\r\n    type: Spinner.Types.normal,\r\n    active: false,\r\n  };\r\n\r\n  public static propTypes = {\r\n    /**\r\n     * показываем лоадер или нет\r\n     */\r\n    active: PropTypes.bool,\r\n\r\n    /**\r\n     * Текст рядом с лоадером.\r\n     *\r\n     * @default  \"Загрузка\"\r\n     */\r\n    caption: Spinner.propTypes.caption,\r\n\r\n    /**\r\n     * Класс для обертки\r\n     */\r\n    className: PropTypes.string,\r\n\r\n    /**\r\n     * Тип спиннера: mini, normal, big\r\n     *\r\n     * @default  normal\r\n     *\r\n     * Spinner.types - все доступные типы\r\n     */\r\n    type: PropTypes.oneOf(Object.keys(Spinner.Types)),\r\n    /**\r\n     * @deprecated Старое поведение спиннера - облачко при среднем и большом размере\r\n     *\r\n     * @default false - исчезнет в 3.0\r\n     */\r\n    cloud: PropTypes.bool,\r\n  };\r\n\r\n  private theme!: Theme;\r\n  private containerNode: Nullable<HTMLDivElement>;\r\n  private spinnerNode: Nullable<HTMLSpanElement>;\r\n  private spinnerHeight?: number;\r\n  private layoutEvents: Nullable<{ remove: () => void }>;\r\n\r\n  constructor(props: LoaderProps) {\r\n    super(props);\r\n\r\n    this.containerNode = null;\r\n    this.spinnerNode = null;\r\n\r\n    warning(\r\n      !this.props.cloud,\r\n      'cloud is deprecated, will removed in 3.0, if you want cloud use prop component instead. ',\r\n    );\r\n\r\n    this.state = {\r\n      isStickySpinner: false,\r\n    };\r\n  }\r\n\r\n  public componentDidMount() {\r\n    if (this.spinnerNode) {\r\n      this.spinnerHeight = this.spinnerNode.children[0].getBoundingClientRect().height;\r\n    }\r\n\r\n    this.checkSpinnerPosition();\r\n    this.layoutEvents = LayoutEvents.addListener(this.checkSpinnerPosition);\r\n  }\r\n\r\n  public componentWillUnmount() {\r\n    if (this.layoutEvents) {\r\n      this.layoutEvents.remove();\r\n    }\r\n  }\r\n\r\n  public render() {\r\n    return (\r\n      <ThemeContext.Consumer>\r\n        {theme => {\r\n          this.theme = theme;\r\n          return this.renderMain();\r\n        }}\r\n      </ThemeContext.Consumer>\r\n    );\r\n  }\r\n\r\n  private renderMain() {\r\n    const { active, type, caption, className } = this.props;\r\n\r\n    return (\r\n      <div style={{ position: 'relative' }} className={cn(jsStyles.loader(), className)}>\r\n        <ZIndex\r\n          priority={'Loader'}\r\n          applyZIndex={this.props.active}\r\n          coverChildren={this.props.active}\r\n          style={{ height: '100%' }}\r\n        >\r\n          {this.props.children}\r\n        </ZIndex>\r\n        {active && (\r\n          <ZIndex\r\n            wrapperRef={this.wrapperRef}\r\n            priority={'Loader'}\r\n            className={cn({\r\n              [jsStyles.active(this.theme)]: active,\r\n            })}\r\n          >\r\n            {this.renderSpinner(type, caption)}\r\n          </ZIndex>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  private wrapperRef = (element: HTMLDivElement | null) => {\r\n    this.containerNode = element;\r\n  };\r\n\r\n  private renderSpinner(type?: 'mini' | 'normal' | 'big', caption?: React.ReactNode) {\r\n    return (\r\n      <span\r\n        className={this.state.isStickySpinner ? jsStyles.spinnerContainerSticky() : jsStyles.spinnerContainerCenter()}\r\n        style={this.state.spinnerStyle}\r\n        ref={element => {\r\n          this.spinnerNode = element;\r\n        }}\r\n      >\r\n        <Spinner type={type} caption={caption} cloud={this.props.cloud} />\r\n      </span>\r\n    );\r\n  }\r\n\r\n  private checkSpinnerPosition = () => {\r\n    if (!this.containerNode) {\r\n      return;\r\n    }\r\n\r\n    const {\r\n      top: containerTop,\r\n      right: containerRight,\r\n      bottom: containerBottom,\r\n      left: containerLeft,\r\n      height: containerHeight,\r\n      width: containerWidth,\r\n    } = this.containerNode.getBoundingClientRect();\r\n\r\n    const windowHeight = window.innerHeight;\r\n    const windowWidth = window.innerWidth;\r\n\r\n    // Если контейнер не больше высоты и не шире окна,\r\n    // то просто выравниваем по центру\r\n    if (windowHeight >= containerHeight && windowWidth >= containerWidth) {\r\n      this.setState({\r\n        isStickySpinner: false,\r\n        spinnerStyle: {},\r\n      });\r\n      return;\r\n    }\r\n\r\n    const spinnerStyle = {\r\n      top: 30,\r\n      right: 0,\r\n      bottom: 30,\r\n      left: 0,\r\n    };\r\n\r\n    // ПО ВЕРТИКАЛИ\r\n    // Если верхний край контейнера ниже верхнего края окна,\r\n    // то сдвигаем и лоадер\r\n    if (containerTop > 0) {\r\n      spinnerStyle.top = containerTop + 30;\r\n    }\r\n\r\n    // Если нижний край контейнера выше нижнего края окна,\r\n    // то сдвигаем и лоадер\r\n    if (containerBottom < windowHeight) {\r\n      spinnerStyle.bottom = Math.abs(windowHeight - containerBottom) + 30;\r\n    }\r\n\r\n    // Если знаем высоту спиннера и нижний край контейнера поднимается\r\n    // выше отступа на высоту спиннера, то убираем верхнюю позицию лоадера\r\n    if (this.spinnerHeight && spinnerStyle.bottom >= windowHeight - this.spinnerHeight) {\r\n      delete spinnerStyle.top;\r\n    }\r\n\r\n    // ПО ГОРИЗОНТАЛИ\r\n    // Если левый край контейнера правее левого края окна,\r\n    // то сдвигаем и лоадер\r\n    if (containerLeft > 0) {\r\n      spinnerStyle.left = containerLeft;\r\n    }\r\n\r\n    // Если правый край контейнера левее правого края окна,\r\n    // то сдвигаем и лоадер\r\n    if (containerRight < windowWidth) {\r\n      spinnerStyle.right = windowWidth - containerRight;\r\n    }\r\n\r\n    this.setState({\r\n      isStickySpinner: true,\r\n      spinnerStyle,\r\n    });\r\n  };\r\n}\r\n"]}