{"version":3,"sources":["CurrencyInputHelper.tsx"],"names":["CurrencyHelper","CursorHelper","CurrencyInputHelper","moveCursor","value","selection","step","start","end","calculatePosition","getInfo","cursorMap","extendSelection","info","normalizeSelection","safeInsert","input","options","length","extracted","extractValid","insert","prefix","substring","suffix","combined","isValidString","raw","toRawPosition","info2","formattedPosition","toFormattedPosition","formatted","position"],"mappings":"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","sourcesContent":["import { Nullable } from '../../typings/utility-types';\r\n\r\nimport { Selection } from './SelectionHelper';\r\nimport { CurrencyHelper } from './CurrencyHelper';\r\nimport { CursorHelper } from './CursorHelper';\r\n\r\nexport interface DecimalOptions {\r\n  integerDigits?: Nullable<number>;\r\n  fractionDigits?: Nullable<number>;\r\n  unsigned?: boolean;\r\n}\r\n\r\nexport class CurrencyInputHelper {\r\n  public static moveCursor(value: string, selection: Selection, step: number): number {\r\n    return selection.start === selection.end\r\n      ? CursorHelper.calculatePosition(CurrencyHelper.getInfo(value).cursorMap, selection.start, step)\r\n      : step < 0\r\n      ? selection.start\r\n      : selection.end;\r\n  }\r\n\r\n  public static extendSelection(value: string, selection: Selection, step: number) {\r\n    const info = CurrencyHelper.getInfo(value);\r\n    return CursorHelper.extendSelection(info.cursorMap, selection, step);\r\n  }\r\n\r\n  public static normalizeSelection(value: string, selection: Selection): Selection {\r\n    const info = CurrencyHelper.getInfo(value);\r\n    return CursorHelper.normalizeSelection(info.cursorMap, selection);\r\n  }\r\n\r\n  public static safeInsert(value: string, start: number, end: number, input: string, options: DecimalOptions) {\r\n    if (input && start === 0 && end === value.length) {\r\n      const extracted = CurrencyHelper.extractValid(input, options);\r\n      if (!extracted) {\r\n        return null;\r\n      }\r\n      return CurrencyInputHelper.insert(value, start, end, extracted);\r\n    }\r\n\r\n    const prefix = value.substring(0, start);\r\n    const suffix = value.substring(end);\r\n\r\n    const combined = prefix + input + suffix;\r\n    if (CurrencyHelper.isValidString(combined, options)) {\r\n      return CurrencyInputHelper.insert(value, start, end, input);\r\n    }\r\n    return null;\r\n  }\r\n\r\n  public static insert(value: string, start: number, end: number, input: string) {\r\n    const prefix = value.substring(0, start);\r\n    const suffix = value.substring(end);\r\n\r\n    const info = CurrencyHelper.getInfo(value);\r\n    const raw = CursorHelper.toRawPosition(info.cursorMap, start);\r\n    const info2 = CurrencyHelper.getInfo(prefix + input + suffix);\r\n    const formattedPosition = CursorHelper.toFormattedPosition(info2.cursorMap, raw + input.length);\r\n\r\n    return { value: info2.formatted, position: formattedPosition };\r\n  }\r\n}\r\n"]}