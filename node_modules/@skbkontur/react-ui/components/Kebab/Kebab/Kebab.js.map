{"version":3,"sources":["Kebab.tsx"],"names":["React","PropTypes","cn","isKeyArrowVertical","isKeyEnter","isKeySpace","someKeys","Icon","Icon20","LayoutEvents","tabListener","PopupMenu","ThemeContext","MenuKebabIcon","jsStyles","Kebab","state","opened","focusedByTab","anchor","theme","listener","remove","undefined","renderCaption","captionProps","disabled","props","handleCaptionKeyDown","event","openMenu","handleCaptionClick","toggleMenu","handleFocus","handleBlur","kebab","focused","renderIcon","e","preventDefault","handleChangeMenuState","isOpened","restoreFocus","setState","onOpen","onClose","process","nextTick","isTabPressed","componentDidMount","addListener","componentWillUnmount","render","renderMain","positions","disableAnimations","children","size","iconsmall","iconmedium","iconlarge","Error","Component","__KONTUR_REACT_UI__","propTypes","defaultProps","Boolean","env","enableReactTesting","node","bool","menuMaxHeight","oneOfType","string","number","func"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport cn from 'classnames';\r\n\r\nimport { isKeyArrowVertical, isKeyEnter, isKeySpace, someKeys } from '../../lib/events/keyboard/identifiers';\r\nimport { Icon as Icon20 } from '../../internal/icons/20px';\r\nimport * as LayoutEvents from '../../lib/LayoutEvents';\r\nimport { tabListener } from '../../lib/events/tabListener';\r\nimport { PopupMenu , PopupMenuCaptionProps } from '../../internal/PopupMenu';\r\nimport { Nullable } from '../../typings/utility-types';\r\nimport { PopupPosition } from '../../internal/Popup';\r\nimport { ThemeContext } from '../../lib/theming/ThemeContext';\r\nimport { Theme } from '../../lib/theming/Theme';\r\nimport { MenuKebabIcon } from '../../internal/icons/16px';\r\n\r\nimport { jsStyles } from './Kebab.styles';\r\n\r\nexport interface KebabProps {\r\n  disabled?: boolean;\r\n  /**\r\n   * Функция вызываемая при закрытии выпадашки\r\n   * @default () => undefined\r\n   */\r\n  onClose: () => void;\r\n  /**\r\n   * Функция вызываемая при открытии выпадашки\r\n   * @default () => undefined\r\n   */\r\n  onOpen: () => void;\r\n  size: 'small' | 'medium' | 'large';\r\n  /**\r\n   * Список позиций доступных для расположения выпадашки\r\n   * Если во всех позициях выпадашка вылезает за пределы `viewport`, будет использоваться первая из этого списка\r\n   * @default ['bottom left', 'bottom right', 'top left', 'top right']\r\n   */\r\n  positions: PopupPosition[];\r\n  menuMaxHeight?: number | string;\r\n  /**\r\n   * Не показывать анимацию\r\n   */\r\n  disableAnimations: boolean;\r\n}\r\n\r\nexport interface KebabState {\r\n  anchor: Nullable<HTMLElement>;\r\n  focusedByTab: boolean;\r\n  opened: boolean;\r\n}\r\n\r\nexport class Kebab extends React.Component<KebabProps, KebabState> {\r\n  public static __KONTUR_REACT_UI__ = 'Kebab';\r\n\r\n  public static propTypes = {};\r\n\r\n  public static defaultProps = {\r\n    onOpen: () => undefined,\r\n    onClose: () => undefined,\r\n    positions: ['bottom left', 'bottom right', 'top left', 'top right'],\r\n    size: 'small',\r\n    disableAnimations: Boolean(process.env.enableReactTesting),\r\n  };\r\n\r\n  public state = {\r\n    opened: false,\r\n    focusedByTab: false,\r\n    anchor: null,\r\n  };\r\n\r\n  private theme!: Theme;\r\n\r\n  private listener: {\r\n    remove: () => void;\r\n  } = {\r\n    remove: () => undefined,\r\n  };\r\n\r\n  public componentDidMount() {\r\n    /** addListener'у нужен колбэк в аргумент */\r\n    this.listener = LayoutEvents.addListener(() => undefined);\r\n  }\r\n\r\n  public componentWillUnmount() {\r\n    this.listener.remove();\r\n  }\r\n\r\n  public render(): JSX.Element {\r\n    return (\r\n      <ThemeContext.Consumer>\r\n        {theme => {\r\n          this.theme = theme;\r\n          return this.renderMain();\r\n        }}\r\n      </ThemeContext.Consumer>\r\n    );\r\n  }\r\n\r\n  private renderMain() {\r\n    const { disabled, positions } = this.props;\r\n\r\n    return (\r\n      <PopupMenu\r\n        popupMargin={5}\r\n        popupPinOffset={15}\r\n        popupHasPin\r\n        positions={positions}\r\n        onChangeMenuState={this.handleChangeMenuState}\r\n        caption={this.renderCaption}\r\n        disableAnimations={this.props.disableAnimations}\r\n      >\r\n        {!disabled && this.props.children}\r\n      </PopupMenu>\r\n    );\r\n  }\r\n\r\n  private renderCaption = (captionProps: PopupMenuCaptionProps) => {\r\n    const { disabled } = this.props;\r\n    const handleCaptionKeyDown = (event: React.KeyboardEvent<HTMLDivElement>) => {\r\n      if (!disabled) {\r\n        this.handleCaptionKeyDown(event, captionProps.openMenu);\r\n      }\r\n    };\r\n\r\n    const handleCaptionClick = () => {\r\n      if (!disabled) {\r\n        captionProps.toggleMenu();\r\n      }\r\n    };\r\n\r\n    return (\r\n      <span\r\n        tabIndex={disabled ? -1 : 0}\r\n        onClick={handleCaptionClick}\r\n        onKeyDown={handleCaptionKeyDown}\r\n        onFocus={this.handleFocus}\r\n        onBlur={this.handleBlur}\r\n        className={cn({\r\n          [jsStyles.kebab()]: true,\r\n          [jsStyles.opened()]: captionProps.opened,\r\n          [jsStyles.disabled()]: disabled,\r\n          [jsStyles.focused(this.theme)]: this.state.focusedByTab,\r\n        })}\r\n      >\r\n        {this.renderIcon()}\r\n      </span>\r\n    );\r\n  };\r\n\r\n  private handleCaptionKeyDown = (\r\n    e: React.KeyboardEvent<HTMLDivElement>,\r\n    openMenu: PopupMenuCaptionProps['openMenu'],\r\n  ) => {\r\n    if (someKeys(isKeyEnter, isKeySpace, isKeyArrowVertical)(e)) {\r\n      e.preventDefault();\r\n      openMenu(true);\r\n    }\r\n  };\r\n\r\n  private handleChangeMenuState = (isOpened: boolean, restoreFocus: boolean): void => {\r\n    this.setState(\r\n      {\r\n        opened: isOpened,\r\n        focusedByTab: !isOpened && restoreFocus,\r\n      },\r\n      () => {\r\n        if (this.props.disabled) {\r\n          return;\r\n        }\r\n\r\n        if (this.state.opened) {\r\n          this.props.onOpen();\r\n        } else {\r\n          this.props.onClose();\r\n        }\r\n      },\r\n    );\r\n  };\r\n\r\n  private handleFocus = () => {\r\n    if (!this.props.disabled) {\r\n      // focus event fires before keyDown eventlistener\r\n      // so we should check tabPressed in async way\r\n      process.nextTick(() => {\r\n        if (tabListener.isTabPressed) {\r\n          this.setState({ focusedByTab: true });\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  private handleBlur = () => {\r\n    this.setState({\r\n      focusedByTab: false,\r\n    });\r\n  };\r\n\r\n  private renderIcon() {\r\n    switch (this.props.size) {\r\n      case 'small':\r\n        return (\r\n          <div className={jsStyles.iconsmall()}>\r\n            <MenuKebabIcon size=\"14px\" color=\"#757575\" />\r\n          </div>\r\n        );\r\n      case 'medium':\r\n        return (\r\n          <div className={jsStyles.iconmedium()}>\r\n            <MenuKebabIcon size=\"18px\" color=\"#757575\" />\r\n          </div>\r\n        );\r\n      case 'large':\r\n        return (\r\n          <div className={jsStyles.iconlarge()}>\r\n            <Icon20 name=\"kebab\" color=\"#757575\" />\r\n          </div>\r\n        );\r\n      default:\r\n        throw new Error(`Unexpected size '${this.props.size}'`);\r\n    }\r\n  }\r\n}\r\n\r\nKebab.propTypes = {\r\n  children: PropTypes.node,\r\n  disabled: PropTypes.bool,\r\n  menuMaxHeight: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\r\n\r\n  /**\r\n   * Размер кебаба small 14px | large 20px\r\n   */\r\n  size: PropTypes.string,\r\n\r\n  /**\r\n   * Коллбек, вызывающийся перед закрытием кебаба\r\n   */\r\n  onClose: PropTypes.func,\r\n\r\n  /**\r\n   * Коллбек, вызывающийся перед открытием кебаба\r\n   */\r\n  onOpen: PropTypes.func,\r\n};\r\n"]}