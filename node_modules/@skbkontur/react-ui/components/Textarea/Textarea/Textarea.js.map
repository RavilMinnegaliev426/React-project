{"version":3,"sources":["Textarea.tsx"],"names":["React","PropTypes","throttle","cn","isKeyEnter","polyfillPlaceholder","LayoutEvents","ThemeContext","getTextAreaHeight","jsStyles","DEFAULT_WIDTH","Textarea","state","rows","theme","node","fakeNode","layoutEvents","setSelectionRange","start","end","Error","document","activeElement","focus","selectAll","value","length","handleKeyDown","e","props","undefined","toString","isBlockEnter","maxLength","preventDefault","onKeyDown","handleChange","fieldIsEmpty","target","setState","onValueChange","autoResize","onChange","ref","element","refFake","maxRows","parseInt","height","exceededMaxHeight","style","overflowY","handleCut","event","onPaste","handlePaste","onCut","handleFocus","selectAllOnFocus","onFocus","componentDidMount","addListener","componentWillUnmount","remove","componentDidUpdate","prevProps","render","renderMain","blur","width","error","warning","resize","className","placeholder","textareaProps","rootProps","textareaClassNames","textarea","textAreaStyle","placeholderPolyfill","fakeTextarea","fakeProps","defaultValue","fake","readOnly","root","Component","__KONTUR_REACT_UI__","propTypes","bool","disabled","oneOfType","string","number","id","name","title","spellCheck","role","tabIndex","func","onMouseEnter","onMouseLeave","onMouseOver","onMouseMove","onMouseOut","onMouseUp","onMouseDown","onClick","onDoubleClick","onKeyPress","onKeyUp","onInput","onBlur","onScroll","onWheel","onCopy","defaultProps"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport throttle from 'lodash.throttle';\r\nimport cn from 'classnames';\r\n\r\nimport { isKeyEnter } from '../../lib/events/keyboard/identifiers';\r\nimport { polyfillPlaceholder } from '../../lib/polyfillPlaceholder';\r\nimport * as LayoutEvents from '../../lib/LayoutEvents';\r\nimport { Nullable, Override } from '../../typings/utility-types';\r\nimport { ThemeContext } from '../../lib/theming/ThemeContext';\r\nimport { Theme } from '../../lib/theming/Theme';\r\n\r\nimport { getTextAreaHeight } from './TextareaHelpers';\r\nimport { jsStyles } from './Textarea.styles';\r\n\r\nconst DEFAULT_WIDTH = 250;\r\n\r\nexport type TextareaProps = Override<\r\n  React.TextareaHTMLAttributes<HTMLTextAreaElement>,\r\n  {\r\n    /** Ошибка */\r\n    error?: boolean;\r\n    /** Предупреждение */\r\n    warning?: boolean;\r\n    /** Не активное состояние */\r\n    disabled?: boolean;\r\n\r\n    /**\r\n     * Атоматический ресайз\r\n     * в зависимости от содержимого\r\n     */\r\n    autoResize?: boolean;\r\n    /**\r\n     * Число строк\r\n     */\r\n    rows: number;\r\n    /**\r\n     * Максимальное число строк при\r\n     * автоматическом ресайзе\r\n     */\r\n    maxRows: string | number;\r\n\r\n    /**\r\n     * Стандартный ресайз\r\n     * Попадает в `style`\r\n     */\r\n    resize?: React.CSSProperties['resize'];\r\n\r\n    /**\r\n     * Ширина\r\n     */\r\n    width?: React.CSSProperties['width'];\r\n\r\n    /**\r\n     * Вызывается при изменении `value`\r\n     */\r\n    onValueChange?: (value: string) => void;\r\n\r\n    /** Выделение значения при фокусе */\r\n    selectAllOnFocus?: boolean;\r\n  }\r\n>;\r\n\r\nexport interface TextareaState {\r\n  polyfillPlaceholder: boolean;\r\n  rows: number | string;\r\n}\r\n\r\n/**\r\n * Компонент для ввода многострочного текста.\r\n *\r\n * Принимает все атрибуты `React.TextareaHTMLAttributes<HTMLTextAreaElement>`\r\n *\r\n * ** `className` и `style`  игнорируются**\r\n */\r\nexport class Textarea extends React.Component<TextareaProps, TextareaState> {\r\n  public static __KONTUR_REACT_UI__ = 'Textarea';\r\n\r\n  public static propTypes = {\r\n    error: PropTypes.bool,\r\n    warning: PropTypes.bool,\r\n    disabled: PropTypes.bool,\r\n\r\n    autoResize: PropTypes.bool,\r\n    maxRows: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\r\n\r\n    resize: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\r\n    width: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\r\n\r\n    id: PropTypes.string,\r\n    name: PropTypes.string,\r\n    title: PropTypes.string,\r\n    spellCheck: PropTypes.bool,\r\n    role: PropTypes.string,\r\n    maxLength: PropTypes.number,\r\n    tabIndex: PropTypes.number,\r\n    rows: PropTypes.number,\r\n    placeholder: PropTypes.string,\r\n\r\n    value: PropTypes.string,\r\n    defaultValue: PropTypes.string,\r\n    onValueChange: PropTypes.func,\r\n\r\n    onMouseEnter: PropTypes.func,\r\n    onMouseLeave: PropTypes.func,\r\n    onMouseOver: PropTypes.func,\r\n    onMouseMove: PropTypes.func,\r\n    onMouseOut: PropTypes.func,\r\n\r\n    onMouseUp: PropTypes.func,\r\n    onMouseDown: PropTypes.func,\r\n    onClick: PropTypes.func,\r\n    onDoubleClick: PropTypes.func,\r\n\r\n    onKeyDown: PropTypes.func,\r\n    onKeyPress: PropTypes.func,\r\n    onKeyUp: PropTypes.func,\r\n    onInput: PropTypes.func,\r\n\r\n    onFocus: PropTypes.func,\r\n    onBlur: PropTypes.func,\r\n\r\n    onScroll: PropTypes.func,\r\n    onWheel: PropTypes.func,\r\n\r\n    onCut: PropTypes.func,\r\n    onPaste: PropTypes.func,\r\n    onCopy: PropTypes.func,\r\n  };\r\n\r\n  public static defaultProps = {\r\n    rows: 3,\r\n    maxRows: 15,\r\n  };\r\n\r\n  public state = {\r\n    polyfillPlaceholder,\r\n    rows: 1,\r\n  };\r\n\r\n  private theme!: Theme;\r\n  private node: Nullable<HTMLTextAreaElement>;\r\n  private fakeNode: Nullable<HTMLTextAreaElement>;\r\n  private layoutEvents: Nullable<{ remove: () => void }>;\r\n\r\n  public componentDidMount() {\r\n    if (this.props.autoResize) {\r\n      this.autoResize();\r\n      this.layoutEvents = LayoutEvents.addListener(this.autoResize);\r\n    }\r\n  }\r\n\r\n  public componentWillUnmount() {\r\n    if (this.layoutEvents) {\r\n      this.layoutEvents.remove();\r\n    }\r\n  }\r\n\r\n  public componentDidUpdate(prevProps: TextareaProps) {\r\n    if ((this.props.autoResize && this.props.rows > this.state.rows) || this.props.value !== prevProps.value) {\r\n      this.autoResize();\r\n    }\r\n  }\r\n\r\n  public render() {\r\n    return (\r\n      <ThemeContext.Consumer>\r\n        {theme => {\r\n          this.theme = theme;\r\n          return this.renderMain();\r\n        }}\r\n      </ThemeContext.Consumer>\r\n    );\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   */\r\n  public focus() {\r\n    if (this.node) {\r\n      this.node.focus();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   */\r\n  public blur() {\r\n    if (this.node) {\r\n      this.node.blur();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   */\r\n  public setSelectionRange = (start: number, end: number) => {\r\n    if (!this.node) {\r\n      throw new Error('Cannot call \"setSelectionRange\" on unmounted Input');\r\n    }\r\n\r\n    if (document.activeElement !== this.node) {\r\n      this.focus();\r\n    }\r\n\r\n    this.node.setSelectionRange(start, end);\r\n  };\r\n\r\n  /**\r\n   * @public\r\n   */\r\n  public selectAll = () => {\r\n    if (this.node) {\r\n      this.setSelectionRange(0, this.node.value.length);\r\n    }\r\n  };\r\n\r\n  private renderMain() {\r\n    const {\r\n      width = DEFAULT_WIDTH,\r\n      error,\r\n      warning,\r\n      autoResize,\r\n      resize,\r\n      onCut,\r\n      onPaste,\r\n      maxRows,\r\n      onFocus,\r\n      selectAllOnFocus,\r\n      className,\r\n      style,\r\n      placeholder,\r\n      onValueChange,\r\n      ...textareaProps\r\n    } = this.props;\r\n\r\n    const rootProps = {\r\n      style: {\r\n        width,\r\n      },\r\n    };\r\n\r\n    const textareaClassNames = cn({\r\n      [jsStyles.textarea(this.theme)]: true,\r\n      [jsStyles.error(this.theme)]: !!error,\r\n      [jsStyles.warning(this.theme)]: !!warning,\r\n    });\r\n\r\n    const textAreaStyle = {\r\n      resize: autoResize ? 'none' : resize,\r\n    };\r\n\r\n    let placeholderPolyfill = null;\r\n\r\n    if (this.state.polyfillPlaceholder && !textareaProps.value) {\r\n      placeholderPolyfill = <span className={jsStyles.placeholder()}>{placeholder}</span>;\r\n    }\r\n\r\n    let fakeTextarea = null;\r\n    if (autoResize) {\r\n      const fakeProps = {\r\n        value: this.props.value,\r\n        defaultValue: this.props.defaultValue,\r\n        className: cn(textareaClassNames, jsStyles.fake()),\r\n        readOnly: true,\r\n      };\r\n      fakeTextarea = <textarea {...fakeProps} ref={this.refFake} />;\r\n    }\r\n\r\n    return (\r\n      <label {...rootProps} className={jsStyles.root(this.theme)}>\r\n        {placeholderPolyfill}\r\n        <textarea\r\n          {...textareaProps}\r\n          className={textareaClassNames}\r\n          style={textAreaStyle}\r\n          placeholder={!placeholderPolyfill ? placeholder : undefined}\r\n          ref={this.ref}\r\n          onChange={this.handleChange}\r\n          onCut={this.handleCut}\r\n          onPaste={this.handlePaste}\r\n          onFocus={this.handleFocus}\r\n          onKeyDown={this.handleKeyDown}\r\n        />\r\n        {fakeTextarea}\r\n      </label>\r\n    );\r\n  }\r\n\r\n  private handleKeyDown = (e: React.KeyboardEvent<HTMLTextAreaElement>) => {\r\n    // Edge bug: textarea maxlength doesn't work after new line\r\n    // https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/18833616/\r\n    const value = this.props.value !== undefined ? this.props.value.toString() : null;\r\n    const isBlockEnter = isKeyEnter(e) && value !== null && value.length === this.props.maxLength;\r\n\r\n    if (isBlockEnter) {\r\n      e.preventDefault();\r\n    }\r\n\r\n    if (this.props.onKeyDown) {\r\n      this.props.onKeyDown(e);\r\n    }\r\n  };\r\n\r\n  private handleChange = (e: React.ChangeEvent<HTMLTextAreaElement>) => {\r\n    if (polyfillPlaceholder) {\r\n      const fieldIsEmpty = e.target.value === '';\r\n\r\n      if (this.state.polyfillPlaceholder !== fieldIsEmpty) {\r\n        this.setState({ polyfillPlaceholder: fieldIsEmpty });\r\n      }\r\n    }\r\n\r\n    if (this.props.onValueChange) {\r\n      this.props.onValueChange(e.target.value);\r\n    }\r\n\r\n    if (this.props.autoResize) {\r\n      this.autoResize();\r\n    }\r\n\r\n    if (this.props.onChange) {\r\n      this.props.onChange(e);\r\n    }\r\n  };\r\n\r\n  private ref = (element: HTMLTextAreaElement) => {\r\n    this.node = element;\r\n  };\r\n\r\n  private refFake = (element: HTMLTextAreaElement) => {\r\n    this.fakeNode = element;\r\n  };\r\n\r\n  private autoResize = throttle(() => {\r\n    const fakeNode = this.fakeNode;\r\n    if (!fakeNode) {\r\n      return;\r\n    }\r\n    const node = this.node;\r\n    if (!node) {\r\n      return;\r\n    }\r\n    if (this.props.value === undefined) {\r\n      fakeNode.value = node.value;\r\n    }\r\n\r\n    const { rows, maxRows } = this.props;\r\n    if (rows === undefined || maxRows === undefined) {\r\n      return;\r\n    }\r\n    const { height, exceededMaxHeight } = getTextAreaHeight(\r\n      fakeNode,\r\n      typeof rows === 'number' ? rows : parseInt(rows, 10),\r\n      typeof maxRows === 'number' ? maxRows : parseInt(maxRows, 10),\r\n    );\r\n    node.style.height = height + 'px';\r\n    node.style.overflowY = exceededMaxHeight ? 'scroll' : 'hidden';\r\n    fakeNode.style.overflowY = exceededMaxHeight ? 'scroll' : 'hidden';\r\n  }, 100);\r\n\r\n  private handleCut = (event: React.ClipboardEvent<HTMLTextAreaElement>) => {\r\n    if (this.props.autoResize) {\r\n      this.autoResize();\r\n    }\r\n\r\n    if (this.props.onPaste) {\r\n      this.props.onPaste(event);\r\n    }\r\n  };\r\n\r\n  private handlePaste = (event: React.ClipboardEvent<HTMLTextAreaElement>) => {\r\n    if (this.props.autoResize) {\r\n      this.autoResize();\r\n    }\r\n\r\n    if (this.props.onCut) {\r\n      this.props.onCut(event);\r\n    }\r\n  };\r\n\r\n  private handleFocus = (event: React.FocusEvent<HTMLTextAreaElement>) => {\r\n    if (this.props.selectAllOnFocus) {\r\n      this.selectAll();\r\n    }\r\n\r\n    if (this.props.onFocus) {\r\n      this.props.onFocus(event);\r\n    }\r\n  };\r\n}\r\n"]}