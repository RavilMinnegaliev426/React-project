import _taggedTemplateLiteralLoose from "@babel/runtime/helpers/esm/taggedTemplateLiteralLoose";

function _templateObject6() {
  var data = _taggedTemplateLiteralLoose(["\n    ", "::before {\n      content: '';\n      display: block;\n      position: absolute;\n      top: ", ";\n      left: -207px;\n      right: -72px;\n      height: ", ";\n      background: ", ";\n      background-size: 41px 100%;\n      opacity: 0.2;\n      transform: translateX(50px) rotate(-44.3deg);\n      animation: ", " 1s linear infinite;\n    }\n\n    ", "::before {\n      top: ", ";\n      left: ", ";\n      animation-direction: reverse;\n      transform: translateX(42px) rotate(-44.3deg);\n      animation-delay: ", ";\n    }\n  "]);

  _templateObject6 = function _templateObject6() {
    return data;
  };

  return data;
}

function _templateObject5() {
  var data = _taggedTemplateLiteralLoose(["\n    ", " {\n      top: ", ";\n      right: ", ";\n      height: ", ";\n      width: ", ";\n      transform: ", ";\n      overflow: hidden;\n    }\n\n    ", " {\n      left: ", ";\n      transform: rotate(232deg) skewX(25deg) skewY(8deg) !important;\n    }\n  "]);

  _templateObject5 = function _templateObject5() {
    return data;
  };

  return data;
}

function _templateObject4() {
  var data = _taggedTemplateLiteralLoose(["\n    font-size: ", " !important;\n\n    &:not(", ") {\n      height: ", ";\n      padding: ", ";\n      line-height: ", ";\n\n      &", " {\n        padding: ", ";\n      }\n    }\n  "]);

  _templateObject4 = function _templateObject4() {
    return data;
  };

  return data;
}

function _templateObject3() {
  var data = _taggedTemplateLiteralLoose(["\n    &:active,\n    &", " {\n      background: ", ";\n      box-shadow: ", ";\n\n      ", " {\n        background: ", ";\n        box-shadow: ", ";\n      }\n\n      ", " {\n        background: ", ";\n        box-shadow: ", ";\n      }\n    }\n  "]);

  _templateObject3 = function _templateObject3() {
    return data;
  };

  return data;
}

function _templateObject2() {
  var data = _taggedTemplateLiteralLoose(["\n    &:hover {\n      background: ", ";\n      box-shadow: ", ";\n      border-color: ", ";\n\n      ", " {\n        background: ", ";\n        box-shadow: ", ";\n      }\n\n      ", " {\n        background: ", ";\n        box-shadow: ", ";\n      }\n    }\n  "]);

  _templateObject2 = function _templateObject2() {
    return data;
  };

  return data;
}

function _templateObject() {
  var data = _taggedTemplateLiteralLoose(["\n    background: ", ";\n    color: ", ";\n    box-shadow: ", ";\n    border: ", ";\n\n    &:not(", ") ", " {\n      background: ", ";\n      box-shadow: ", ";\n    }\n\n    &:not(", ") ", " {\n      background: ", ";\n      box-shadow: ", ";\n    }\n  "]);

  _templateObject = function _templateObject() {
    return data;
  };

  return data;
}

import { css } from "../../../lib/theming/Emotion";
import { shift } from "../../../lib/styles/DimensionFunctions";

var getBtnPadding = function getBtnPadding(fontSize, paddingY, paddingX, additionalOffset) {
  if (additionalOffset === void 0) {
    additionalOffset = 0;
  }

  var paddingTop = paddingY;
  var paddingBottom = paddingY;

  var shiftUp = function shiftUp(top, bottom, offset) {
    return [shift(top, "" + -offset), shift(bottom, "" + offset)];
  };

  if (fontSize === '16px') {
    var _shiftUp = shiftUp(paddingTop, paddingBottom, 1);

    paddingTop = _shiftUp[0];
    paddingBottom = _shiftUp[1];
  }

  if (additionalOffset) {
    var _shiftUp2 = shiftUp(paddingTop, paddingBottom, additionalOffset);

    paddingTop = _shiftUp2[0];
    paddingBottom = _shiftUp2[1];
  }

  return paddingTop + " " + paddingX + " " + paddingBottom;
};

export var buttonUseMixin = function buttonUseMixin(btnBackground, btnBackgroundStart, btnBackgroundEnd, arrowBackgroundStart, arrowBackgroundEnd, shadow, shadowArrow, shadowArrowLeft, color, border, selectorChecked, selectorArrow, selectorArrowLeft) {
  return css(_templateObject(), btnBackgroundStart === btnBackgroundEnd && btnBackground ? btnBackground : "linear-gradient(" + btnBackgroundStart + ", " + btnBackgroundEnd + ")", color, shadow, border, selectorChecked, selectorArrow, arrowBackgroundStart === arrowBackgroundEnd ? arrowBackgroundStart : "linear-gradient(to bottom right, " + arrowBackgroundStart + ", " + arrowBackgroundEnd + ")", shadowArrow, selectorChecked, selectorArrowLeft, arrowBackgroundStart === arrowBackgroundEnd ? arrowBackgroundStart : "linear-gradient(to top left, " + arrowBackgroundStart + ", " + arrowBackgroundEnd + ")", shadowArrowLeft);
};
export var buttonHoverMixin = function buttonHoverMixin(btnBackground, btnBackgroundStart, btnBackgroundEnd, arrowBackgroundStart, arrowBackgroundEnd, btnShadow, arrowShadow, arrowLeftShadow, btnBorder, selectorArrow, selectorArrowLeft) {
  return css(_templateObject2(), btnBackgroundStart === btnBackgroundEnd && btnBackground ? btnBackground : "linear-gradient(" + btnBackgroundStart + ", " + btnBackgroundEnd + ")", btnShadow, btnBorder, selectorArrow, arrowBackgroundStart === arrowBackgroundEnd ? arrowBackgroundStart : "linear-gradient(to bottom right, " + arrowBackgroundStart + ", " + arrowBackgroundEnd + ")", arrowShadow, selectorArrowLeft, arrowBackgroundStart === arrowBackgroundEnd ? arrowBackgroundStart : "linear-gradient(to top left, " + arrowBackgroundStart + ", " + arrowBackgroundEnd + ")", arrowLeftShadow);
};
export var buttonActiveMixin = function buttonActiveMixin(btnBackground, arrowBackground, arrowLeftBackground, btnShadow, arrowShadow, arrowLeftShadow, selectorActive, selectorArrow, selectorArrowLeft) {
  return css(_templateObject3(), selectorActive, btnBackground, btnShadow, selectorArrow, arrowBackground, arrowShadow, selectorArrowLeft, arrowLeftBackground, arrowLeftShadow);
};
export var buttonSizeMixin = function buttonSizeMixin(fontSize, height, heightShift, lineHeight, paddingX, paddingY, selectorLink, selectorFallback) {
  return css(_templateObject4(), fontSize, selectorLink, shift(height, heightShift), getBtnPadding(fontSize, paddingY, paddingX), lineHeight, selectorFallback, getBtnPadding(fontSize, paddingY, paddingX, 1));
};
export var buttonArrowMixin = function buttonArrowMixin(top, left, right, size, transform, selectorArrow, selectorArrowLeft) {
  return css(_templateObject5(), selectorArrow, top, right, size, size, transform, selectorArrowLeft, left);
};
export var buttonLoadingArrowMixin = function buttonLoadingArrowMixin(top, leftArrowTop, left, height, background, delay, btn_loading_arrow, selectorArrow, selectorArrowLeft) {
  return css(_templateObject6(), selectorArrow, top, height, background, btn_loading_arrow, selectorArrowLeft, leftArrowTop, left, delay);
};