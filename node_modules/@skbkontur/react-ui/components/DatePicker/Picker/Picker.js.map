{"version":3,"sources":["Picker.tsx"],"names":["React","shallowEqual","InternalDate","InternalDateGetter","Calendar","isGreater","isLess","locale","ThemeContext","jsStyles","DatePickerLocaleHelper","getTodayCalendarDate","d","Date","date","getDate","month","getMonth","year","getFullYear","Picker","props","theme","calendar","scrollToMonth","handleSelectToday","today","onSelect","toNativeFormat","state","getInitialDate","value","minDate","maxDate","componentDidUpdate","prevProps","render","renderMain","root","e","preventDefault","c","onPick","isHoliday","enableTodayLink","renderTodayLink","order","separator","setComponents","getTodayComponents","todayWrapper","toString","withPad","withSeparator","Component","__KONTUR_REACT_UI__"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport shallowEqual from 'shallowequal';\r\n\r\nimport { InternalDate } from '../../lib/date/InternalDate';\r\nimport { InternalDateGetter } from '../../lib/date/InternalDateGetter';\r\nimport { Calendar, CalendarDateShape, isGreater, isLess } from '../../internal/Calendar';\r\nimport { locale } from '../../lib/locale/decorators';\r\nimport { Nullable } from '../../typings/utility-types';\r\nimport { Theme } from '../../lib/theming/Theme';\r\nimport { ThemeContext } from '../../lib/theming/ThemeContext';\r\n\r\nimport { jsStyles } from './Picker.styles';\r\nimport { DatePickerLocale, DatePickerLocaleHelper } from './locale';\r\n\r\ninterface Props {\r\n  maxDate?: CalendarDateShape;\r\n  minDate?: CalendarDateShape;\r\n  value: Nullable<CalendarDateShape>;\r\n  onPick: (date: CalendarDateShape) => void;\r\n  onSelect?: (date: CalendarDateShape) => void;\r\n  enableTodayLink?: boolean;\r\n  isHoliday?: (day: CalendarDateShape & { isWeekend: boolean }) => boolean;\r\n}\r\n\r\ninterface State {\r\n  date: CalendarDateShape;\r\n  today: CalendarDateShape;\r\n}\r\n\r\nconst getTodayCalendarDate = () => {\r\n  const d = new Date();\r\n  return {\r\n    date: d.getDate(),\r\n    month: d.getMonth(),\r\n    year: d.getFullYear(),\r\n  };\r\n};\r\n\r\n@locale('DatePicker', DatePickerLocaleHelper)\r\nexport class Picker extends React.Component<Props, State> {\r\n  public static __KONTUR_REACT_UI__ = 'Picker';\r\n\r\n  private theme!: Theme;\r\n  private calendar: Calendar | null = null;\r\n  private readonly locale!: DatePickerLocale;\r\n\r\n  constructor(props: Props) {\r\n    super(props);\r\n    const today = getTodayCalendarDate();\r\n    this.state = {\r\n      date: this.getInitialDate(today),\r\n      today,\r\n    };\r\n  }\r\n\r\n  public componentDidUpdate(prevProps: Props) {\r\n    const { value } = this.props;\r\n    if (value && !shallowEqual(value, prevProps.value)) {\r\n      this.scrollToMonth(value.month, value.year);\r\n    }\r\n  }\r\n\r\n  public render() {\r\n    return (\r\n      <ThemeContext.Consumer>\r\n        {theme => {\r\n          this.theme = theme;\r\n          return this.renderMain();\r\n        }}\r\n      </ThemeContext.Consumer>\r\n    );\r\n  }\r\n\r\n  private renderMain() {\r\n    const { date } = this.state;\r\n    return (\r\n      <div className={jsStyles.root(this.theme)} onMouseDown={e => e.preventDefault()}>\r\n        <Calendar\r\n          ref={c => (this.calendar = c)}\r\n          value={this.props.value}\r\n          initialMonth={date.month}\r\n          initialYear={date.year}\r\n          onSelect={this.props.onPick}\r\n          minDate={this.props.minDate}\r\n          maxDate={this.props.maxDate}\r\n          isHoliday={this.props.isHoliday}\r\n        />\r\n        {this.props.enableTodayLink && this.renderTodayLink()}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  private scrollToMonth = (month: number, year: number) => {\r\n    if (this.calendar) {\r\n      this.calendar.scrollToMonth(month, year);\r\n    }\r\n  };\r\n\r\n  private renderTodayLink() {\r\n    const { order, separator } = this.locale;\r\n    const today = new InternalDate({ order, separator }).setComponents(InternalDateGetter.getTodayComponents());\r\n    return (\r\n      <button\r\n        data-tid=\"Picker__todayWrapper\"\r\n        className={jsStyles.todayWrapper(this.theme)}\r\n        onClick={this.handleSelectToday(today)}\r\n        tabIndex={-1}\r\n      >\r\n        {`${this.locale.today} ${today.toString({ withPad: true, withSeparator: true })}`}\r\n      </button>\r\n    );\r\n  }\r\n\r\n  private handleSelectToday = (today: InternalDate) => () => {\r\n    if (this.props.onSelect) {\r\n      this.props.onSelect(today.toNativeFormat()!);\r\n    }\r\n    if (this.calendar) {\r\n      const { month, year } = this.state.today;\r\n      this.calendar.scrollToMonth(month, year);\r\n    }\r\n  };\r\n\r\n  private getInitialDate = (today: CalendarDateShape) => {\r\n    if (this.props.value) {\r\n      return this.props.value;\r\n    }\r\n\r\n    if (this.props.minDate && isLess(today, this.props.minDate)) {\r\n      return this.props.minDate;\r\n    }\r\n\r\n    if (this.props.maxDate && isGreater(today, this.props.maxDate)) {\r\n      return this.props.maxDate;\r\n    }\r\n\r\n    return today;\r\n  };\r\n}\r\n"]}