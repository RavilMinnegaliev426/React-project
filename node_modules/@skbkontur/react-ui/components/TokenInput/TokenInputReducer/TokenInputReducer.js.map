{"version":3,"sources":["TokenInputReducer.ts"],"names":["DefaultState","TokenActions","SET_INPUT_VALUE_WIDTH","UPDATE_QUERY","SET_FOCUS_IN","SET_PREVENT_BLUR","BLUR","SET_AUTOCOMPLETE_ITEMS","SET_ACTIVE_TOKENS","REMOVE_ALL_ACTIVE_TOKENS","SET_LOADING","CLEAR_INPUT","RESET","tokenInputReducer","state","action","payload","type","inputValueWidth","inputValue","inFocus","preventBlur","autocompleteItems","activeTokens","undefined","loading"],"mappings":"AAAA,SAA0BA,YAA1B,QAA8C,cAA9C;;;;;;;AAOA,OAAO,IAAMC,YAAY,GAAG;AAC1BC,EAAAA,qBAAqB,EAAE,uBADG;AAE1BC,EAAAA,YAAY,EAAE,cAFY;AAG1BC,EAAAA,YAAY,EAAE,cAHY;AAI1BC,EAAAA,gBAAgB,EAAE,kBAJQ;AAK1BC,EAAAA,IAAI,EAAE,MALoB;AAM1BC,EAAAA,sBAAsB,EAAE,wBANE;AAO1BC,EAAAA,iBAAiB,EAAE,mBAPO;AAQ1BC,EAAAA,wBAAwB,EAAE,0BARA;AAS1BC,EAAAA,WAAW,EAAE,aATa;AAU1BC,EAAAA,WAAW,EAAE,aAVa;AAW1BC,EAAAA,KAAK,EAAE,OAXmB,EAArB;;;;;AAgBP,OAAO,SAASC,iBAAT;AACLC,KADK;AAELC,MAFK;AAG4B;AACjC,MAAMC,OAAO,GAAGD,MAAM,CAACC,OAAvB;AACA,UAAQD,MAAM,CAACE,IAAf;AACE,SAAKhB,YAAY,CAACC,qBAAlB,CAAyC;AACvC,eAAO,EAAEgB,eAAe,EAAEF,OAAnB,EAAP;AACD;AACD,SAAKf,YAAY,CAACE,YAAlB,CAAgC;AAC9B,eAAO,EAAEgB,UAAU,EAAEH,OAAd,EAAP;AACD;AACD,SAAKf,YAAY,CAACG,YAAlB,CAAgC;AAC9B,eAAO,EAAEgB,OAAO,EAAE,IAAX,EAAP;AACD;AACD,SAAKnB,YAAY,CAACI,gBAAlB,CAAoC;AAClC,eAAO,EAAEgB,WAAW,EAAEL,OAAf,EAAP;AACD;AACD,SAAKf,YAAY,CAACM,sBAAlB,CAA0C;AACxC,eAAO,EAAEe,iBAAiB,EAAEN,OAArB,EAAP;AACD;AACD,SAAKf,YAAY,CAACO,iBAAlB,CAAqC;AACnC,eAAO,EAAEe,YAAY,EAAEP,OAAhB,EAAP;AACD;AACD,SAAKf,YAAY,CAACK,IAAlB,CAAwB;AACtB,eAAO;AACLc,UAAAA,OAAO,EAAE,KADJ;AAELC,UAAAA,WAAW,EAAE,KAFR;AAGLC,UAAAA,iBAAiB,EAAEE,SAHd;AAILD,UAAAA,YAAY,EAAE,EAJT,EAAP;;AAMD;AACD,SAAKtB,YAAY,CAACQ,wBAAlB,CAA4C;AAC1C,eAAO,EAAEc,YAAY,EAAE,EAAhB,EAAP;AACD;AACD,SAAKtB,YAAY,CAACU,WAAlB,CAA+B;AAC7B,eAAO,EAAEQ,UAAU,EAAE,EAAd,EAAkBG,iBAAiB,EAAEE,SAArC,EAAP;AACD;AACD,SAAKvB,YAAY,CAACS,WAAlB,CAA+B;AAC7B,eAAO;AACLe,UAAAA,OAAO,EAAET,OADJ,EAAP;;AAGD;AACD,SAAKf,YAAY,CAACW,KAAlB,CAAyB;AACvB,eAAOZ,YAAP;AACD;;AAED;AACE,aAAOc,KAAP,CA3CJ;;AA6CD","sourcesContent":["import { TokenInputState, DefaultState } from './TokenInput';\r\n\r\nexport interface TokenInputAction {\r\n  type: TokenInputActionType;\r\n  payload?: any;\r\n}\r\n\r\nexport const TokenActions = {\r\n  SET_INPUT_VALUE_WIDTH: 'SET_INPUT_VALUE_WIDTH',\r\n  UPDATE_QUERY: 'UPDATE_QUERY',\r\n  SET_FOCUS_IN: 'SET_FOCUS_IN',\r\n  SET_PREVENT_BLUR: 'SET_PREVENT_BLUR',\r\n  BLUR: 'BLUR',\r\n  SET_AUTOCOMPLETE_ITEMS: 'SET_AUTOCOMPLETE_ITEMS',\r\n  SET_ACTIVE_TOKENS: 'SET_ACTIVE_TOKENS',\r\n  REMOVE_ALL_ACTIVE_TOKENS: 'REMOVE_ALL_ACTIVE_TOKENS',\r\n  SET_LOADING: 'SET_LOADING',\r\n  CLEAR_INPUT: 'CLEAR_INPUT',\r\n  RESET: 'RESET',\r\n};\r\n\r\nexport type TokenInputActionType = keyof typeof TokenActions;\r\n\r\nexport function tokenInputReducer<T = string>(\r\n  state: TokenInputState<T>,\r\n  action: TokenInputAction,\r\n): Pick<TokenInputState<T>, never> {\r\n  const payload = action.payload;\r\n  switch (action.type) {\r\n    case TokenActions.SET_INPUT_VALUE_WIDTH: {\r\n      return { inputValueWidth: payload };\r\n    }\r\n    case TokenActions.UPDATE_QUERY: {\r\n      return { inputValue: payload };\r\n    }\r\n    case TokenActions.SET_FOCUS_IN: {\r\n      return { inFocus: true };\r\n    }\r\n    case TokenActions.SET_PREVENT_BLUR: {\r\n      return { preventBlur: payload };\r\n    }\r\n    case TokenActions.SET_AUTOCOMPLETE_ITEMS: {\r\n      return { autocompleteItems: payload };\r\n    }\r\n    case TokenActions.SET_ACTIVE_TOKENS: {\r\n      return { activeTokens: payload };\r\n    }\r\n    case TokenActions.BLUR: {\r\n      return {\r\n        inFocus: false,\r\n        preventBlur: false,\r\n        autocompleteItems: undefined,\r\n        activeTokens: [],\r\n      };\r\n    }\r\n    case TokenActions.REMOVE_ALL_ACTIVE_TOKENS: {\r\n      return { activeTokens: [] };\r\n    }\r\n    case TokenActions.CLEAR_INPUT: {\r\n      return { inputValue: '', autocompleteItems: undefined };\r\n    }\r\n    case TokenActions.SET_LOADING: {\r\n      return {\r\n        loading: payload,\r\n      };\r\n    }\r\n    case TokenActions.RESET: {\r\n      return DefaultState;\r\n    }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n"]}