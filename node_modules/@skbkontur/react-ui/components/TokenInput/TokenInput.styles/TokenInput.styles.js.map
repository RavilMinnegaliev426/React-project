{"version":3,"sources":["TokenInput.styles.ts"],"names":["css","memoizeStyle","styles","label","t","inputBg","inputShadow","inputBorderWidth","borderColorGrayLight","inputBorderTopColor","warning","borderColorWarning","error","borderColorError","labelFocused","borderColorFocus","labelDisabled","inputDisabledBg","inputDisabledBorderColor","input","placeholderColor","placeholderColorLight","inputDisabled","textColorDisabled","jsStyles"],"mappings":"osFAAA,SAASA,GAAT,EAAcC,YAAd,QAAkC,2BAAlC;;;AAGA,IAAMC,MAAM,GAAG;AACbC,EAAAA,KADa,iBACPC,CADO,EACG;AACd,WAAOJ,GAAP;AACsBI,IAAAA,CAAC,CAACC,OADxB;AAEgBD,IAAAA,CAAC,CAACE,WAFlB;AAGYF,IAAAA,CAAC,CAACG,gBAHd,EAGwCH,CAAC,CAACI,oBAH1C;AAIsBJ,IAAAA,CAAC,CAACK,mBAJxB;;;;;;;;AAYD,GAdY;;AAgBbC,EAAAA,OAhBa,mBAgBLN,CAhBK,EAgBK;AAChB,WAAOJ,GAAP;AACsBI,IAAAA,CAAC,CAACO,kBADxB;AAE0BP,IAAAA,CAAC,CAACO,kBAF5B;;AAID,GArBY;;AAuBbC,EAAAA,KAvBa,iBAuBPR,CAvBO,EAuBG;AACd,WAAOJ,GAAP;AACsBI,IAAAA,CAAC,CAACS,gBADxB;AAE0BT,IAAAA,CAAC,CAACS,gBAF5B;;AAID,GA5BY;;AA8BbC,EAAAA,YA9Ba,wBA8BAV,CA9BA,EA8BU;AACrB,WAAOJ,GAAP;AACsBI,IAAAA,CAAC,CAACW,gBADxB;AAE0BX,IAAAA,CAAC,CAACW,gBAF5B;;AAID,GAnCY;;AAqCbC,EAAAA,aArCa,yBAqCCZ,CArCD,EAqCW;AACtB,WAAOJ,GAAP;AACgBI,IAAAA,CAAC,CAACa,eADlB;AAEkBb,IAAAA,CAAC,CAACc,wBAFpB;;;AAKD,GA3CY;;AA6CbC,EAAAA,KA7Ca,iBA6CPf,CA7CO,EA6CG;AACd,WAAOJ,GAAP;;;;;;;;;;;;;;;;;;;;;;;;AAwBaI,IAAAA,CAAC,CAACgB,gBAxBf;AAyB+BhB,IAAAA,CAAC,CAACgB,gBAzBjC;;;AA4BahB,IAAAA,CAAC,CAACiB,qBA5Bf;AA6B+BjB,IAAAA,CAAC,CAACiB,qBA7BjC;;;;;;;;;;AAuCD,GArFY;;AAuFbC,EAAAA,aAvFa,yBAuFClB,CAvFD,EAuFW;AACtB,WAAOJ,GAAP;;;;AAIWI,IAAAA,CAAC,CAACmB,iBAJb;;AAMD,GA9FY,EAAf;;;AAiGA,OAAO,IAAMC,QAAQ,GAAGvB,YAAY,CAACC,MAAD,CAA7B","sourcesContent":["import { css, memoizeStyle } from '../../lib/theming/Emotion';\r\nimport { Theme } from '../../lib/theming/Theme';\r\n\r\nconst styles = {\r\n  label(t: Theme) {\r\n    return css`\r\n      background-color: ${t.inputBg};\r\n      box-shadow: ${t.inputShadow};\r\n      border: ${t.inputBorderWidth} solid ${t.borderColorGrayLight};\r\n      border-top-color: ${t.inputBorderTopColor};\r\n      box-sizing: border-box;\r\n      cursor: text;\r\n      padding: 2px 4px;\r\n      display: flex;\r\n      flex-wrap: wrap;\r\n      outline: none;\r\n    `;\r\n  },\r\n\r\n  warning(t: Theme) {\r\n    return css`\r\n      border: 1px solid ${t.borderColorWarning};\r\n      box-shadow: 0 0 0 1px ${t.borderColorWarning};\r\n    `;\r\n  },\r\n\r\n  error(t: Theme) {\r\n    return css`\r\n      border: 1px solid ${t.borderColorError};\r\n      box-shadow: 0 0 0 1px ${t.borderColorError};\r\n    `;\r\n  },\r\n\r\n  labelFocused(t: Theme) {\r\n    return css`\r\n      border: 1px solid ${t.borderColorFocus};\r\n      box-shadow: 0 0 0 1px ${t.borderColorFocus};\r\n    `;\r\n  },\r\n\r\n  labelDisabled(t: Theme) {\r\n    return css`\r\n      background: ${t.inputDisabledBg};\r\n      border-color: ${t.inputDisabledBorderColor};\r\n      box-shadow: none;\r\n    `;\r\n  },\r\n\r\n  input(t: Theme) {\r\n    return css`\r\n      min-width: 0;\r\n      max-width: 100%;\r\n      width: 50px;\r\n      background: transparent;\r\n      border: none;\r\n      box-shadow: none;\r\n      outline: none;\r\n      margin: 2px 0;\r\n      font-family: inherit;\r\n      font-size: 14px;\r\n      padding: 0 0 0 5px;\r\n      height: 24px;\r\n      line-height: 24px;\r\n      -webkit-appearance: none;\r\n      white-space: nowrap;\r\n      text-overflow: clip;\r\n      background-clip: padding-box;\r\n      transition: background-color 0.15s ease-in;\r\n\r\n      &::-ms-clear {\r\n        display: none;\r\n      }\r\n      &::placeholder {\r\n        color: ${t.placeholderColor};\r\n        -webkit-text-fill-color: ${t.placeholderColor};\r\n      }\r\n      &:focus::placeholder {\r\n        color: ${t.placeholderColorLight};\r\n        -webkit-text-fill-color: ${t.placeholderColorLight};\r\n      }\r\n      /* fix firefox placeholder opacity */\r\n      &:-moz-placeholder {\r\n        opacity: 1;\r\n      }\r\n      &::-moz-placeholder {\r\n        opacity: 1;\r\n      }\r\n    `;\r\n  },\r\n\r\n  inputDisabled(t: Theme) {\r\n    return css`\r\n      pointer-events: none;\r\n      /* fix text color in safari */\r\n      -webkit-text-fill-color: currentcolor;\r\n      color: ${t.textColorDisabled};\r\n    `;\r\n  },\r\n};\r\n\r\nexport const jsStyles = memoizeStyle(styles);\r\n"]}