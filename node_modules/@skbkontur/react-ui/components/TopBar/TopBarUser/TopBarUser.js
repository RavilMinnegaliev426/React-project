import _inheritsLoose from "@babel/runtime/helpers/esm/inheritsLoose";

var _dec, _class, _class2, _temp;

import React from 'react';
import PropTypes from 'prop-types';
import { locale } from "../../../lib/locale/decorators";
import { MenuItem } from "../../MenuItem";
import { TopBarLocaleHelper } from "../locale";
import { TopBarDropdown } from "../TopBarDropdown";
export
/**
 * Меню работы с кабинетом пользователя
 *
 * @visibleName TopBar.User
 */
var TopBarUser = (_dec = locale('TopBar', TopBarLocaleHelper), _dec(_class = (_temp = _class2 =
/*#__PURE__*/
function (_React$Component) {
  _inheritsLoose(TopBarUser, _React$Component);

  function TopBarUser() {
    var _this;

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;
    _this.locale = void 0;
    return _this;
  }

  var _proto = TopBarUser.prototype;

  _proto.render = function render() {
    var _this$props = this.props,
        userName = _this$props.userName,
        cabinetUrl = _this$props.cabinetUrl;
    var _this$locale = this.locale,
        cabinetSettings = _this$locale.cabinetSettings,
        cabinetCertificates = _this$locale.cabinetCertificates,
        cabinetServices = _this$locale.cabinetServices;
    return React.createElement(TopBarDropdown, {
      icon: 'user',
      label: userName
    }, React.createElement(MenuItem, {
      loose: true,
      href: cabinetUrl,
      target: "_blank"
    }, cabinetSettings), React.createElement(MenuItem, {
      loose: true,
      href: cabinetUrl + "/certificates",
      target: "_blank"
    }, cabinetCertificates), React.createElement(MenuItem, {
      loose: true,
      href: cabinetUrl + "/services",
      target: "_blank"
    }, cabinetServices));
  };

  return TopBarUser;
}(React.Component), _class2.__KONTUR_REACT_UI__ = 'TopBarUser', _class2.defaultProps = {
  cabinetUrl: 'https://cabinet.kontur.ru'
}, _class2.propTypes = {
  userName: PropTypes.string,

  /**
   * URL для кастомизации ссылок в меню пользователя
   */
  cabinetUrl: PropTypes.string
}, _temp)) || _class);