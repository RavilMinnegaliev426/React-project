{"version":3,"sources":["TopBarOrganizations.tsx"],"names":["React","ArrowChevronDownIcon","TopBarDropdown","jsStyles","TopBarOrganizations","state","captionWhiteSpace","minWidth","_caption","_comment","_getCaptionRef","element","_getCommentRef","componentDidMount","_recalculateWidth","componentDidUpdate","prevProps","caption","props","render","comment","title","organizationsTitle","paddingRight","offsetWidth","undefined","organizationsComment","organizationsArrow","organizationsTitleDummy","whiteSpace","organizationsCommentDummy","children","commentWidth","setState","Component","__KONTUR_REACT_UI__"],"mappings":"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","sourcesContent":["import React from 'react';\r\n\r\nimport { Nullable } from '../../typings/utility-types';\r\nimport { ArrowChevronDownIcon } from '../../internal/icons/16px';\r\n\r\nimport { TopBarDropdown } from './TopBarDropdown';\r\nimport { jsStyles } from \"./TopBar.styles\";\r\n\r\nexport interface TopBarOrganizationsProps {\r\n  caption: React.ReactNode;\r\n  comment?: Nullable<string>;\r\n}\r\n\r\nexport interface TopBarOrganizationsState {\r\n  captionWhiteSpace: React.CSSProperties['whiteSpace'];\r\n  minWidth: Nullable<number>;\r\n}\r\n/**\r\n * Дропдаун с организациями\r\n *\r\n * @visibleName TopBar.OrganizationsDropdown\r\n */\r\n\r\nexport class TopBarOrganizations extends React.Component<TopBarOrganizationsProps, TopBarOrganizationsState> {\r\n  public static __KONTUR_REACT_UI__ = 'TopBarOrganizations';\r\n\r\n  public state = {\r\n    captionWhiteSpace: 'normal' as React.CSSProperties['whiteSpace'],\r\n    minWidth: null,\r\n  };\r\n\r\n  private _caption: Nullable<HTMLElement>;\r\n  private _comment: Nullable<HTMLElement>;\r\n\r\n  public componentDidMount() {\r\n    this._recalculateWidth();\r\n  }\r\n\r\n  public componentDidUpdate(prevProps: TopBarOrganizationsProps) {\r\n    if (prevProps.caption !== this.props.caption) {\r\n      this._recalculateWidth();\r\n    }\r\n  }\r\n\r\n  public render() {\r\n    const { caption, comment } = this.props;\r\n\r\n    const title = (\r\n      <div>\r\n        <span\r\n          className={jsStyles.organizationsTitle()}\r\n          style={{\r\n            paddingRight: this._comment ? this._comment.offsetWidth + 30 : undefined,\r\n          }}\r\n        >\r\n          <span ref={this._getCaptionRef}>{caption}</span>\r\n          {comment && (\r\n            <span className={jsStyles.organizationsComment()} ref={this._getCommentRef}>\r\n              {comment}\r\n            </span>\r\n          )}\r\n          <span className={jsStyles.organizationsArrow()}>\r\n            <ArrowChevronDownIcon color=\"#aaa\" size={14} />\r\n          </span>\r\n        </span>\r\n        <div className={jsStyles.organizationsTitleDummy()} style={{ whiteSpace: this.state.captionWhiteSpace }}>\r\n          <span>{caption}</span>\r\n          {comment && <span className={jsStyles.organizationsCommentDummy()}>{comment}</span>}\r\n        </div>\r\n      </div>\r\n    );\r\n\r\n    return (\r\n      <TopBarDropdown {...this.props} label={title} minWidth={this.state.minWidth}>\r\n        {this.props.children}\r\n      </TopBarDropdown>\r\n    );\r\n  }\r\n\r\n  private _getCaptionRef = (element: HTMLSpanElement) => {\r\n    this._caption = element;\r\n  };\r\n\r\n  private _getCommentRef = (element: HTMLSpanElement) => {\r\n    this._comment = element;\r\n  };\r\n\r\n  private _recalculateWidth() {\r\n    const commentWidth = this._comment ? this._comment.offsetWidth : 0;\r\n    if (!this._caption) {\r\n      return;\r\n    }\r\n    // 360 is minWidth from guides. Apply it when content is bigger.\r\n    // 315 is because of 15px left padding and 30px arrow.\r\n    if (this._caption.offsetWidth + commentWidth > 315) {\r\n      this.setState({\r\n        captionWhiteSpace: 'normal',\r\n        minWidth: 360,\r\n      });\r\n    } else {\r\n      this.setState({\r\n        captionWhiteSpace: 'nowrap',\r\n        minWidth: null,\r\n      });\r\n    }\r\n  }\r\n}\r\n"]}