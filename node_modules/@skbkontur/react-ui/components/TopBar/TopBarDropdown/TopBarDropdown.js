import _extends from "@babel/runtime/helpers/esm/extends";
import _inheritsLoose from "@babel/runtime/helpers/esm/inheritsLoose";
import React from 'react';
import { isKeyArrowVertical, isKeyEnter, isKeySpace, someKeys } from "../../../lib/events/keyboard/identifiers";
import { DropdownMenu } from "../../DropdownMenu";
import { TopBarButtonItem } from "../TopBarButtonItem";
/**
                                                        * Дропдаун в топбаре
                                                        *
                                                        * @visibleName TopBar.Dropdown
                                                        */

export var TopBarDropdown =
/*#__PURE__*/
function (_React$Component) {
  _inheritsLoose(TopBarDropdown, _React$Component);

  function TopBarDropdown() {
    var _this;

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;
    _this.dropdownMenu = null;

    _this.open = function () {
      if (_this.dropdownMenu) {
        _this.dropdownMenu.open();
      }
    };

    _this.close = function () {
      if (_this.dropdownMenu) {
        _this.dropdownMenu.close();
      }
    };

    _this.refDropdownMenu = function (ref) {
      return _this.dropdownMenu = ref;
    };

    _this.renderButton = function (captionProps) {
      var handleKeyDown = function handleKeyDown(event) {
        _this.handleKeyDown(event, captionProps.openMenu);
      };

      return React.createElement(TopBarButtonItem, {
        active: captionProps.opened,
        icon: _this.props.icon,
        minWidth: _this.props.minWidth ? _this.props.minWidth : undefined,
        tabIndex: 0,
        use: _this.props.use,
        onClick: captionProps.toggleMenu,
        onKeyDown: handleKeyDown
      }, _this.props.label);
    };

    _this.handleKeyDown = function (e, openMenu) {
      if (someKeys(isKeyEnter, isKeySpace, isKeyArrowVertical)(e)) {
        e.preventDefault();
        openMenu(true);
      }
    };

    return _this;
  }

  var _proto = TopBarDropdown.prototype;

  _proto.render = function render() {
    return React.createElement(DropdownMenu, _extends({}, this.props, {
      ref: this.refDropdownMenu,
      caption: this.renderButton
    }), this.props.children);
  };

  return TopBarDropdown;
}(React.Component);
TopBarDropdown.__KONTUR_REACT_UI__ = 'TopBarDropdown';
TopBarDropdown.defaultProps = {
  use: 'default'
};