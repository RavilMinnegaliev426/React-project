import _extends from "@babel/runtime/helpers/esm/extends";
import _objectWithoutPropertiesLoose from "@babel/runtime/helpers/esm/objectWithoutPropertiesLoose";
import _inheritsLoose from "@babel/runtime/helpers/esm/inheritsLoose";
import React from 'react';
import PropTypes from 'prop-types';
import cn from 'classnames';
import { Icon } from "../../../internal/icons/20px";
import { createPropsGetter } from "../../../lib/createPropsGetter";
import { jsStyles } from "../TopBar.styles";
/**
                                             * Статичный элемент топбара
                                             *
                                             * @visibleName TopBar.ItemStatic
                                             */

export var TopBarItem =
/*#__PURE__*/
function (_React$Component) {
  _inheritsLoose(TopBarItem, _React$Component);

  function TopBarItem() {
    var _this;

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;
    _this.getProps = createPropsGetter(TopBarItem.defaultProps);
    return _this;
  }

  var _proto = TopBarItem.prototype;

  _proto.render = function render() {
    var _cn, _cn2;

    var _this$props = this.props,
        active = _this$props.active,
        children = _this$props.children,
        _onClick = _this$props._onClick,
        _onKeyDown = _this$props._onKeyDown,
        iconOnly = _this$props.iconOnly,
        icon = _this$props.icon,
        minWidth = _this$props.minWidth,
        use = _this$props.use,
        rest = _objectWithoutPropertiesLoose(_this$props, ["active", "children", "_onClick", "_onKeyDown", "iconOnly", "icon", "minWidth", "use"]);

    var className = this.getProps().className;
    var classes = cn((_cn = {}, _cn[jsStyles.item()] = true, _cn[jsStyles.buttonActive()] = !!active, _cn[jsStyles.usePay()] = use === 'pay', _cn[jsStyles.useDanger()] = use === 'danger', _cn[className] = true, _cn));
    var iconClasses = cn((_cn2 = {}, _cn2[jsStyles.icon()] = !!icon, _cn2[jsStyles.iconOnly()] = !!iconOnly, _cn2));
    return React.createElement("div", _extends({}, rest, {
      className: classes,
      onClick: _onClick,
      onKeyDown: _onKeyDown,
      style: {
        minWidth: minWidth
      }
    }), icon && React.createElement("span", {
      className: iconClasses
    }, React.createElement(Icon, {
      color: "#666",
      name: icon
    })), icon && iconOnly ? null : children);
  };

  return TopBarItem;
}(React.Component);
TopBarItem.__KONTUR_REACT_UI__ = 'TopBarItem';
TopBarItem.propTypes = {
  use: PropTypes.oneOf(['danger', 'pay', 'default'])
};
TopBarItem.defaultProps = {
  className: '',
  use: 'default'
};