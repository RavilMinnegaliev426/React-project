import React from 'react';
import PropTypes from 'prop-types';
import { types } from './SpinnerFallback';
export declare type SpinnerType = 'mini' | 'normal' | 'big';
export interface SpinnerProps {
    caption?: React.ReactNode;
    dimmed?: boolean;
    /**
     * Тип спиннера
     * @default normal
     */
    type: SpinnerType;
    /**
     * @deprecated Старое поведение спиннера - облачко при среднем и большом размере - исчезнет в 3.0 поведение пересено в `@skbkontur/react-ui-addons` смотри [миграцию](https://github.com/skbkontur/retail-ui/blob/master/packages/react-ui/MIGRATION.md)
     *
     * @default false
     */
    cloud?: boolean;
}
/**
 * DRAFT - инлайн-лоадер
 */
export declare class Spinner extends React.Component<SpinnerProps> {
    static __KONTUR_REACT_UI__: string;
    static propTypes: {
        /**
         * Текст рядом с мини-лоадером.
         *
         * 'Загрузка' - значение по-умолчанию
         */
        caption: PropTypes.Requireable<PropTypes.ReactNodeLike>;
        dimmed: PropTypes.Requireable<boolean>;
        /**
         * Тип спиннера: mini, normal, big
         *
         * Значение по-умолчанию - normal
         *
         * Spinner.types - все доступные типы
         */
        type: PropTypes.Requireable<string>;
        /**
         * @deprecated Старое поведение спиннера - облачко при среднем и большом размере
         *
         * @default false - исчезнет в 3.0
         */
        cloud: PropTypes.Requireable<boolean>;
    };
    static defaultProps: SpinnerProps;
    static Types: typeof types;
    private theme;
    private readonly locale;
    constructor(props: SpinnerProps);
    render(): JSX.Element;
    private renderSpinnerOld;
    private renderMain;
    private renderSpinner;
    private renderCaption;
}
