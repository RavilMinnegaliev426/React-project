import React, { useContext } from 'react';
import cn from 'classnames';
import { ThemeContext } from "../../../lib/theming/ThemeContext";
import * as CDS from "../CalendarDateShape";
import { config } from "../config";
import { jsStyles } from "../DayCellView.styles";
var size = config.DAY_HEIGHT;
var cellStyle = {
  width: size,
  height: size,
  lineHeight: size - 2 + 'px',
  borderRadius: size / 2
};
export function DayCellView(props) {
  var _cn;

  var date = props.date,
      minDate = props.minDate,
      maxDate = props.maxDate,
      today = props.today,
      value = props.value,
      isWeekend = props.isWeekend,
      onDateClick = props.onDateClick;
  var theme = useContext(ThemeContext);

  var handleClick = function handleClick() {
    var _props$date = props.date,
        date = _props$date.date,
        month = _props$date.month,
        year = _props$date.year;
    onDateClick == null ? void 0 : onDateClick({
      date: date,
      month: month,
      year: year
    });
  };

  return React.createElement("button", {
    style: cellStyle,
    tabIndex: -1,
    disabled: !CDS.isBetween(date, minDate, maxDate),
    className: cn((_cn = {}, _cn[jsStyles.cell(theme)] = true, _cn[jsStyles.today(theme)] = Boolean(today && CDS.isEqual(date, today)), _cn[jsStyles.selected(theme)] = Boolean(value && CDS.isEqual(date, value)), _cn[jsStyles.weekend(theme)] = Boolean(isWeekend), _cn)),
    onClick: handleClick
  }, date.date);
}