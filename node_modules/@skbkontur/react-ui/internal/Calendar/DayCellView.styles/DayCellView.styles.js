import _taggedTemplateLiteralLoose from "@babel/runtime/helpers/esm/taggedTemplateLiteralLoose";

function _templateObject4() {
  var data = _taggedTemplateLiteralLoose(["\n      border: ", ";\n    "]);

  _templateObject4 = function _templateObject4() {
    return data;
  };

  return data;
}

function _templateObject3() {
  var data = _taggedTemplateLiteralLoose(["\n      color: ", ";\n    "]);

  _templateObject3 = function _templateObject3() {
    return data;
  };

  return data;
}

function _templateObject2() {
  var data = _taggedTemplateLiteralLoose(["\n      background-color: ", ";\n      color: ", ";\n    "]);

  _templateObject2 = function _templateObject2() {
    return data;
  };

  return data;
}

function _templateObject() {
  var data = _taggedTemplateLiteralLoose(["\n      ", ";\n\n      background: ", ";\n      border: 1px solid transparent;\n      display: inline-block;\n      font-size: 14px;\n      padding: 0;\n      text-align: center;\n      user-select: none;\n\n      &:hover {\n        background-color: ", ";\n        color: ", ";\n        cursor: pointer;\n      }\n      &:disabled {\n        opacity: 0.5;\n        pointer-events: none;\n      }\n      &:active:hover {\n        color: ", ";\n      }\n    "]);

  _templateObject = function _templateObject() {
    return data;
  };

  return data;
}

import { css, memoizeStyle } from "../../../lib/theming/Emotion";
import { resetButton } from "../../../lib/styles/Mixins";
var styles = {
  cell: function cell(t) {
    return css(_templateObject(), resetButton(), t.calendarCellBg, t.calendarCellHoverBgColor, t.calendarCellHoverColor, t.calendarCellActiveHoverColor);
  },
  selected: function selected(t) {
    return css(_templateObject2(), t.calendarCellSelectedBgColor, t.calendarCellSelectedFontColor);
  },
  weekend: function weekend(t) {
    return css(_templateObject3(), t.calendarCellWeekendColor);
  },
  today: function today(t) {
    return css(_templateObject4(), t.calendarCellTodayBorder);
  }
};
export var jsStyles = memoizeStyle(styles);