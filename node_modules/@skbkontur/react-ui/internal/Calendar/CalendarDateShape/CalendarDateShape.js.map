{"version":3,"sources":["CalendarDateShape.ts"],"names":["isEqual","a","b","year","month","date","comparator","create","isLess","left","right","isLessOrEqual","isGreater","isGreaterOrEqual","isBetween"],"mappings":";;;;;;;;AAQA,OAAO,IAAMA,OAAO,GAAG,SAAVA,OAAU,CAACC,CAAD,EAAiCC,CAAjC;AACpB,KAACD,CAAD,IAAM,CAACC,CAAR,IAAeD,CAAC,IAAIC,CAAL,IAAUD,CAAC,CAACE,IAAF,KAAWD,CAAC,CAACC,IAAvB,IAA+BF,CAAC,CAACG,KAAF,KAAYF,CAAC,CAACE,KAA7C,IAAsDH,CAAC,CAACI,IAAF,KAAWH,CAAC,CAACG,IAD7D,GAAhB;;AAGP,OAAO,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAACL,CAAD,EAAuBC,CAAvB,EAAgD;AACxE,MAAID,CAAC,CAACE,IAAF,GAASD,CAAC,CAACC,IAAf,EAAqB;AACnB,WAAO,CAAC,CAAR;AACD,GAFD,MAEO,IAAIF,CAAC,CAACE,IAAF,GAASD,CAAC,CAACC,IAAf,EAAqB;AAC1B,WAAO,CAAP;AACD,GAFM,MAEA,IAAIF,CAAC,CAACG,KAAF,GAAUF,CAAC,CAACE,KAAhB,EAAuB;AAC5B,WAAO,CAAC,CAAR;AACD,GAFM,MAEA,IAAIH,CAAC,CAACG,KAAF,GAAUF,CAAC,CAACE,KAAhB,EAAuB;AAC5B,WAAO,CAAP;AACD,GAFM,MAEA,IAAIH,CAAC,CAACI,IAAF,GAASH,CAAC,CAACG,IAAf,EAAqB;AAC1B,WAAO,CAAC,CAAR;AACD,GAFM,MAEA,IAAIJ,CAAC,CAACI,IAAF,GAASH,CAAC,CAACG,IAAf,EAAqB;AAC1B,WAAO,CAAP;AACD;AACD,SAAO,CAAP;AACD,CAfM;;AAiBP,OAAO,IAAME,MAAM,GAAG,SAATA,MAAS,CAACF,IAAD,EAAeD,KAAf,EAA8BD,IAA9B,UAAmE,EAAEE,IAAI,EAAJA,IAAF,EAAQD,KAAK,EAALA,KAAR,EAAeD,IAAI,EAAJA,IAAf,EAAnE,EAAf;;AAEP,OAAO,IAAMK,MAAM,GAAG,SAATA,MAAS,CAACC,IAAD,EAA0BC,KAA1B,UAAuDJ,UAAU,CAACG,IAAD,EAAOC,KAAP,CAAV,KAA4B,CAAC,CAApF,EAAf;;AAEP,OAAO,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACF,IAAD,EAA0BC,KAA1B;AAC3BF,IAAAA,MAAM,CAACC,IAAD,EAAOC,KAAP,CAAN,IAAuBV,OAAO,CAACS,IAAD,EAAOC,KAAP,CADH,GAAtB;;AAGP,OAAO,IAAME,SAAS,GAAG,SAAZA,SAAY,CAACH,IAAD,EAA0BC,KAA1B,UAAuD,CAACC,aAAa,CAACF,IAAD,EAAOC,KAAP,CAArE,EAAlB;;AAEP,OAAO,IAAMG,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACJ,IAAD,EAA0BC,KAA1B,UAAuD,CAACF,MAAM,CAACC,IAAD,EAAOC,KAAP,CAA9D,EAAzB;;AAEP,OAAO,IAAMI,SAAS,GAAG,SAAZA,SAAY;AACvBT,IADuB;AAEvBI,IAFuB;AAGvBC,KAHuB;AAIpB;AACH,MAAID,IAAI,IAAID,MAAM,CAACH,IAAD,EAAOI,IAAP,CAAlB,EAAgC;AAC9B,WAAO,KAAP;AACD;AACD,MAAIC,KAAK,IAAIE,SAAS,CAACP,IAAD,EAAOK,KAAP,CAAtB,EAAqC;AACnC,WAAO,KAAP;AACD;AACD,SAAO,IAAP;AACD,CAZM","sourcesContent":["import { Nullable } from '../../typings/utility-types';\r\n\r\nexport interface CalendarDateShape {\r\n  year: number;\r\n  month: number;\r\n  date: number;\r\n}\r\n\r\nexport const isEqual = (a: Nullable<CalendarDateShape>, b: Nullable<CalendarDateShape>) =>\r\n  (!a && !b) || (a && b && a.year === b.year && a.month === b.month && a.date === b.date);\r\n\r\nexport const comparator = (a: CalendarDateShape, b: CalendarDateShape) => {\r\n  if (a.year < b.year) {\r\n    return -1;\r\n  } else if (a.year > b.year) {\r\n    return 1;\r\n  } else if (a.month < b.month) {\r\n    return -1;\r\n  } else if (a.month > b.month) {\r\n    return 1;\r\n  } else if (a.date < b.date) {\r\n    return -1;\r\n  } else if (a.date > b.date) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n};\r\n\r\nexport const create = (date: number, month: number, year: number): CalendarDateShape => ({ date, month, year });\r\n\r\nexport const isLess = (left: CalendarDateShape, right: CalendarDateShape) => comparator(left, right) === -1;\r\n\r\nexport const isLessOrEqual = (left: CalendarDateShape, right: CalendarDateShape) =>\r\n  isLess(left, right) || isEqual(left, right);\r\n\r\nexport const isGreater = (left: CalendarDateShape, right: CalendarDateShape) => !isLessOrEqual(left, right);\r\n\r\nexport const isGreaterOrEqual = (left: CalendarDateShape, right: CalendarDateShape) => !isLess(left, right);\r\n\r\nexport const isBetween = (\r\n  date: CalendarDateShape,\r\n  left?: Nullable<CalendarDateShape>,\r\n  right?: Nullable<CalendarDateShape>,\r\n) => {\r\n  if (left && isLess(date, left)) {\r\n    return false;\r\n  }\r\n  if (right && isGreater(date, right)) {\r\n    return false;\r\n  }\r\n  return true;\r\n};\r\n"]}