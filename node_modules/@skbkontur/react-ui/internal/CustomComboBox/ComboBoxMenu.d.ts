import React, { Component } from 'react';
import { Menu } from '../Menu';
import { MenuItemState } from '../../components/MenuItem';
import { Nullable } from '../../typings/utility-types';
import { ComboBoxRequestStatus } from './CustomComboBoxTypes';
export interface ComboBoxMenuProps<T> {
    opened?: boolean;
    items?: Nullable<T[]>;
    totalCount?: number;
    loading?: boolean;
    maxMenuHeight?: number | string;
    refMenu?: (menu: Nullable<Menu>) => void;
    renderNotFound?: () => React.ReactNode;
    renderTotalCount?: (found: number, total: number) => React.ReactNode;
    renderItem: (item: T, state: MenuItemState) => React.ReactNode;
    onValueChange: (value: T) => any;
    renderAddButton?: () => React.ReactNode;
    caption?: React.ReactNode;
    repeatRequest?: () => void;
    requestStatus?: ComboBoxRequestStatus;
}
export declare class ComboBoxMenu<T> extends Component<ComboBoxMenuProps<T>> {
    static __KONTUR_REACT_UI__: string;
    static defaultProps: {
        repeatRequest: () => undefined;
        requestStatus: ComboBoxRequestStatus;
    };
    private readonly locale;
    render(): JSX.Element | null;
    private renderItem;
}
