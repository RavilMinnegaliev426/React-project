import React from 'react';
import { Input } from '../../components/Input';
import { InputLikeText } from '../InputLikeText';
import { Menu } from '../Menu';
import { MenuItemState } from '../../components/MenuItem';
import { Nullable } from '../../typings/utility-types';
import { ComboBoxRequestStatus } from './CustomComboBoxTypes';
interface ComboBoxViewProps<T> {
    align?: 'left' | 'center' | 'right';
    autoFocus?: boolean;
    borderless?: boolean;
    disablePortal?: boolean;
    disabled?: boolean;
    editing?: boolean;
    error?: boolean;
    items?: Nullable<T[]>;
    loading?: boolean;
    menuAlign?: 'left' | 'right';
    opened?: boolean;
    drawArrow?: boolean;
    placeholder?: string;
    size?: 'small' | 'medium' | 'large';
    textValue?: string;
    totalCount?: number;
    value?: Nullable<T>;
    warning?: boolean;
    width?: string | number;
    maxLength?: number;
    maxMenuHeight?: number | string;
    onValueChange?: (value: T) => void;
    onClickOutside?: (e: Event) => void;
    onFocus?: () => void;
    onFocusOutside?: () => void;
    onInputBlur?: () => void;
    onInputValueChange?: (value: string) => void;
    onInputFocus?: () => void;
    onInputClick?: () => void;
    onInputKeyDown?: (e: React.KeyboardEvent) => void;
    onMouseEnter?: (e: React.MouseEvent) => void;
    onMouseOver?: (e: React.MouseEvent) => void;
    onMouseLeave?: (e: React.MouseEvent) => void;
    renderItem?: (item: T, state: MenuItemState) => React.ReactNode;
    renderNotFound?: () => React.ReactNode;
    renderTotalCount?: (found: number, total: number) => React.ReactNode;
    renderValue?: (item: T) => React.ReactNode;
    renderAddButton: (query?: string) => React.ReactNode;
    repeatRequest?: () => void;
    requestStatus?: ComboBoxRequestStatus;
    refInput?: (input: Nullable<Input>) => void;
    refMenu?: (menu: Nullable<Menu>) => void;
    refInputLikeText?: (inputLikeText: Nullable<InputLikeText>) => void;
}
export declare class ComboBoxView<T> extends React.Component<ComboBoxViewProps<T>> {
    static __KONTUR_REACT_UI__: string;
    static defaultProps: {
        renderItem: (item: any) => any;
        renderValue: (item: any) => any;
        renderAddButton: () => null;
        repeatRequest: () => undefined;
        requestStatus: ComboBoxRequestStatus;
        onClickOutside: () => void;
        onFocusOutside: () => void;
        size: string;
        width: string | number;
    };
    private input;
    componentDidMount(): void;
    componentDidUpdate(prevProps: ComboBoxViewProps<T>): void;
    render(): JSX.Element;
    private renderAddButton;
    private renderInput;
    private handleItemSelect;
    private refInput;
    private renderSpinner;
    private getRightIcon;
}
export {};
