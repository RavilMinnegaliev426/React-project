{"version":3,"sources":["PopupPin.tsx"],"names":["React","PropTypes","PopupHelper","jsStyles","borderStyles","position","borderStyle","borderTopColor","borderBottomColor","borderLeftColor","borderRightColor","PopupPin","render","props","popupElement","options","getPinOptions","getElementAbsoluteRect","getPositionObject","popupPosition","size","offset","borderWidth","styleOuter","getOuterStyle","activeBorder","outerSize","borderColor","styleInner","getInnerStyle","backgroundColor","styleWrapper","getWrapperStyle","outerLeft","outerTop","wrapper","getPopupOppositeDirection","popupDirection","direction","TypeError","left","top","width","height","borderWitdth","popupRect","pinSize","pinOffset","bordersDelta","getPinLeftCoordinate","align","innerTop","innerLeft","getPinTopCoordinate","Error","pinHeight","Component","__KONTUR_REACT_UI__","propTypes","string","number","any"],"mappings":"gIAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;;;AAIA,SAASC,WAAT,QAAkD,eAAlD;AACA,SAASC,QAAT,QAAyB,mBAAzB;;AAEA,IAAMC,YAAY,GAAG;AACnBC,EAAAA,QAAQ,EAAE,UADS;AAEnBC,EAAAA,WAAW,EAAE,OAFM;AAGnBC,EAAAA,cAAc,EAAE,aAHG;AAInBC,EAAAA,iBAAiB,EAAE,aAJA;AAKnBC,EAAAA,eAAe,EAAE,aALE;AAMnBC,EAAAA,gBAAgB,EAAE,aANC,EAArB;;;;;;;;;;;;;AAmBA,WAAaC,QAAb;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0CSC,EAAAA,MA1CT,GA0CE,kBAAgB;AACd,QAAI,CAAC,KAAKC,KAAL,CAAWC,YAAhB,EAA8B;AAC5B,aAAO,IAAP;AACD;;AAED,QAAMC,OAAO,GAAG,KAAKC,aAAL;AACdd,IAAAA,WAAW,CAACe,sBAAZ,CAAmC,KAAKJ,KAAL,CAAWC,YAA9C,CADc;AAEdZ,IAAAA,WAAW,CAACgB,iBAAZ,CAA8B,KAAKL,KAAL,CAAWM,aAAzC,CAFc;AAGd,SAAKN,KAAL,CAAWO,IAHG;AAId,SAAKP,KAAL,CAAWQ,MAJG;AAKd,SAAKR,KAAL,CAAWS,WALG,CAAhB;;;AAQA,QAAMC,UAA+B,GAAG,KAAKC,aAAL;AACtCT,IAAAA,OAAO,CAACU,YAD8B;AAEtCV,IAAAA,OAAO,CAACW,SAF8B;AAGtC,SAAKb,KAAL,CAAWc,WAH2B,CAAxC;;;AAMA,QAAMC,UAA+B,GAAG,KAAKC,aAAL;AACtCd,IAAAA,OAAO,CAACU,YAD8B;AAEtC,SAAKZ,KAAL,CAAWO,IAF2B;AAGtC,SAAKP,KAAL,CAAWiB,eAH2B,CAAxC;;;AAMA,QAAMC,YAAY,GAAG,KAAKC,eAAL,CAAqBjB,OAAO,CAACkB,SAA7B,EAAwClB,OAAO,CAACmB,QAAhD,EAA0DnB,OAAO,CAACW,SAAlE,CAArB;;AAEA;AACE,mCAAK,SAAS,EAAEvB,QAAQ,CAACgC,OAAT,EAAhB,EAAoC,KAAK,EAAEJ,YAA3C;AACE,mCAAK,KAAK,EAAER,UAAZ;AACE,mCAAK,KAAK,EAAEK,UAAZ,GADF,CADF,CADF;;;;AAOD,GA5EH;;AA8EUQ,EAAAA,yBA9EV,GA8EE,qCAAyE;AACvE,QAAMC,cAAc,GAAGnC,WAAW,CAACgB,iBAAZ,CAA8B,KAAKL,KAAL,CAAWM,aAAzC,EAAwDmB,SAA/E;AACA,YAAQD,cAAR;AACE,WAAK,KAAL;AACE,eAAO,QAAP;AACF,WAAK,QAAL;AACE,eAAO,KAAP;AACF,WAAK,MAAL;AACE,eAAO,OAAP;AACF,WAAK,OAAL;AACE,eAAO,MAAP;AACF;AACE,cAAM,IAAIE,SAAJ,CAAc,uBAAuBF,cAArC,CAAN,CAVJ;;AAYD,GA5FH;;AA8FUL,EAAAA,eA9FV,GA8FE,yBAAwBQ,IAAxB,EAAsCC,GAAtC,EAAmDnB,WAAnD,EAAwE;AACtE,QAAMgB,SAAS,GAAG,KAAKF,yBAAL,EAAlB;AACA,YAAQE,SAAR;AACE,WAAK,KAAL;AACA,WAAK,QAAL;AACE;AACGA,QAAAA,SADH,IACe,CAAChB,WAAD,GAAe,IAD9B;AAEEkB,QAAAA,IAFF,GAEQA,IAAI,GAAG,IAFf;AAGEE,QAAAA,KAHF,GAGSpB,WAAW,GAAG,CAAd,GAAkB,IAH3B;AAIEqB,QAAAA,MAJF,GAIUrB,WAAW,GAAG,IAJxB;;AAMF,WAAK,MAAL;AACA,WAAK,OAAL;AACE;AACGgB,QAAAA,SADH,IACe,CAAChB,WAAD,GAAe,IAD9B;AAEEmB,QAAAA,GAFF,GAEOA,GAAG,GAAG,IAFb;AAGEE,QAAAA,MAHF,GAGUrB,WAAW,GAAG,CAAd,GAAkB,IAH5B;AAIEoB,QAAAA,KAJF,GAISpB,WAAW,GAAG,IAJvB;;AAMF;AACE,cAAM,IAAIiB,SAAJ,CAAc,uBAAuBD,SAArC,CAAN,CAlBJ;;AAoBD,GApHH;;AAsHUd,EAAAA,aAtHV,GAsHE,uBAAsBC,YAAtB,EAA4CmB,YAA5C,EAAkEjB,WAAlE,EAA4G;AAC1G,QAAMW,SAAS,GAAG,KAAKF,yBAAL,EAAlB;AACA,YAAQE,SAAR;AACE,WAAK,KAAL;AACA,WAAK,QAAL;AACE;AACKlC,QAAAA,YADL;AAEGkC,QAAAA,SAFH,IAEe,CAACM,YAAD,GAAgB,IAF/B;AAGEJ,QAAAA,IAHF,GAGQ,KAHR;AAIElB,QAAAA,WAJF,GAIesB,YAAY,GAAG,IAJ9B;AAKG,mBAAWnB,YAAX,GAA0B,OAL7B,IAKuCE,WALvC;;AAOF,WAAK,MAAL;AACA,WAAK,OAAL;AACE;AACKvB,QAAAA,YADL;AAEGkC,QAAAA,SAFH,IAEe,CAACM,YAAD,GAAgB,IAF/B;AAGEH,QAAAA,GAHF,GAGO,KAHP;AAIEnB,QAAAA,WAJF,GAIesB,YAAY,GAAG,IAJ9B;AAKG,mBAAWnB,YAAX,GAA0B,OAL7B,IAKuCE,WALvC;;AAOF;AACE,cAAM,IAAIY,SAAJ,CAAc,uBAAuBD,SAArC,CAAN,CApBJ;;AAsBD,GA9IH;;AAgJUT,EAAAA,aAhJV,GAgJE,uBAAsBJ,YAAtB,EAA4CmB,YAA5C,EAAkEjB,WAAlE,EAA4G;AAC1G,QAAMW,SAAS,GAAG,KAAKF,yBAAL,EAAlB;AACA,YAAQE,SAAR;AACE,WAAK,KAAL;AACA,WAAK,QAAL;AACE;AACKlC,QAAAA,YADL;AAEGkC,QAAAA,SAFH,IAEe,CAACM,YAAD,GAAgB,CAAhB,GAAoB,IAFnC;AAGEJ,QAAAA,IAHF,GAGQ,CAACI,YAAD,GAAgB,IAHxB;AAIEtB,QAAAA,WAJF,GAIesB,YAAY,GAAG,IAJ9B;AAKG,mBAAWnB,YAAX,GAA0B,OAL7B,IAKuCE,WALvC;;AAOF,WAAK,MAAL;AACA,WAAK,OAAL;AACE;AACKvB,QAAAA,YADL;AAEGkC,QAAAA,SAFH,IAEe,CAACM,YAAD,GAAgB,CAAhB,GAAoB,IAFnC;AAGEH,QAAAA,GAHF,GAGO,CAACG,YAAD,GAAgB,IAHvB;AAIEtB,QAAAA,WAJF,GAIesB,YAAY,GAAG,IAJ9B;AAKG,mBAAWnB,YAAX,GAA0B,OAL7B,IAKuCE,WALvC;;AAOF;AACE,cAAM,IAAIY,SAAJ,CAAc,uBAAuBD,SAArC,CAAN,CApBJ;;AAsBD,GAxKH;;AA0KUtB,EAAAA,aA1KV,GA0KE;AACE6B,EAAAA,SADF;AAEE1B,EAAAA,aAFF;AAGE2B,EAAAA,OAHF;AAIEC,EAAAA,SAJF;AAKEzB,EAAAA,WALF;AAME;AACA,QAAM0B,YAAY,GAAG,IAAI1B,WAAzB;AACA,QAAMI,SAAS,GAAGoB,OAAO,GAAGE,YAA5B;;AAEA,YAAQ7B,aAAa,CAACmB,SAAtB;AACE,WAAK,KAAL;AACE,eAAO;AACLJ,UAAAA,QAAQ,EAAEW,SAAS,CAACF,MADf;AAELV,UAAAA,SAAS,EAAE,KAAKgB,oBAAL,CAA0BJ,SAA1B,EAAqC1B,aAAa,CAAC+B,KAAnD,EAA0DJ,OAA1D,EAAmEC,SAAnE,IAAgFC,YAFtF;AAGLG,UAAAA,QAAQ,EAAE,CAACzB,SAHN;AAIL0B,UAAAA,SAAS,EAAE,CAAC1B,SAAD,GAAasB,YAJnB;AAKLvB,UAAAA,YAAY,EAAE,KALT;AAMLC,UAAAA,SAAS,EAATA,SANK,EAAP;;AAQF,WAAK,QAAL;AACE,eAAO;AACLQ,UAAAA,QAAQ,EAAE,CAAC,CAAD,GAAKR,SADV;AAELO,UAAAA,SAAS,EAAE,KAAKgB,oBAAL,CAA0BJ,SAA1B,EAAqC1B,aAAa,CAAC+B,KAAnD,EAA0DJ,OAA1D,EAAmEC,SAAnE,IAAgFC,YAFtF;AAGLG,UAAAA,QAAQ,EAAE,CAACzB,SAAD,GAAa,IAAIsB,YAHtB;AAILI,UAAAA,SAAS,EAAE,CAAC1B,SAAD,GAAasB,YAJnB;AAKLvB,UAAAA,YAAY,EAAE,QALT;AAMLC,UAAAA,SAAS,EAATA,SANK,EAAP;;AAQF,WAAK,MAAL;AACE,eAAO;AACLQ,UAAAA,QAAQ,EAAE,KAAKmB,mBAAL,CAAyBR,SAAzB,EAAoC1B,aAAa,CAAC+B,KAAlD,EAAyDJ,OAAzD,EAAkEC,SAAlE,IAA+EC,YADpF;AAELf,UAAAA,SAAS,EAAEY,SAAS,CAACH,KAFhB;AAGLS,UAAAA,QAAQ,EAAE,CAACzB,SAAD,GAAasB,YAHlB;AAILI,UAAAA,SAAS,EAAE,CAAC1B,SAJP;AAKLD,UAAAA,YAAY,EAAE,MALT;AAMLC,UAAAA,SAAS,EAATA,SANK,EAAP;;AAQF,WAAK,OAAL;AACE,eAAO;AACLQ,UAAAA,QAAQ,EAAE,KAAKmB,mBAAL,CAAyBR,SAAzB,EAAoC1B,aAAa,CAAC+B,KAAlD,EAAyDJ,OAAzD,EAAkEC,SAAlE,IAA+EC,YADpF;AAELf,UAAAA,SAAS,EAAE,CAAC,CAAD,GAAKP,SAFX;AAGLyB,UAAAA,QAAQ,EAAE,CAACzB,SAAD,GAAasB,YAHlB;AAILI,UAAAA,SAAS,EAAE,CAAC1B,SAAD,GAAa,IAAIsB,YAJvB;AAKLvB,UAAAA,YAAY,EAAE,OALT;AAMLC,UAAAA,SAAS,EAATA,SANK,EAAP;;AAQF;AACE,cAAM,IAAI4B,KAAJ,CAAU,mDAAV,CAAN,CAtCJ;;AAwCD,GA5NH;;AA8NUD,EAAAA,mBA9NV,GA8NE,6BAA4BR,SAA5B,EAA6CK,KAA7C,EAA4DK,SAA5D,EAA+ER,SAA/E,EAAkG;AAChG,YAAQG,KAAR;AACE,WAAK,KAAL;AACE,eAAOH,SAAP;AACF,WAAK,QAAL;AACE,eAAOF,SAAS,CAACF,MAAV,GAAmB,CAAnB,GAAuBY,SAA9B;AACF,WAAK,QAAL;AACE,eAAOV,SAAS,CAACF,MAAV,GAAmBI,SAAnB,GAA+B,IAAIQ,SAA1C;AACF;AACE,cAAM,IAAID,KAAJ,wBAA+BJ,KAA/B,OAAN,CARJ;;AAUD,GAzOH;;AA2OUD,EAAAA,oBA3OV,GA2OE,8BAA6BJ,SAA7B,EAA8CK,KAA9C,EAA6DK,SAA7D,EAAgFR,SAAhF,EAAmG;AACjG,YAAQG,KAAR;AACE,WAAK,MAAL;AACE,eAAOH,SAAP;AACF,WAAK,QAAL;AACE,eAAOF,SAAS,CAACH,KAAV,GAAkB,CAAlB,GAAsBa,SAA7B;AACF,WAAK,OAAL;AACE,eAAOV,SAAS,CAACH,KAAV,GAAkBK,SAAlB,GAA8B,IAAIQ,SAAzC;AACF;AACE,cAAM,IAAID,KAAJ,wBAA+BJ,KAA/B,OAAN,CARJ;;AAUD,GAtPH,mBAA8BlD,KAAK,CAACwD,SAApC,EAAa7C,Q,CACG8C,mB,GAAsB,U,CADzB9C,Q,CAGG+C,S,GAAY,EACxB;;2GAGA5B,eAAe,EAAE7B,SAAS,CAAC0D,MAJH,EAMxB;;iJAGAhC,WAAW,EAAE1B,SAAS,CAAC0D,MATC,EAWxB;;mLAGArC,WAAW,EAAErB,SAAS,CAAC2D,MAdC,EAgBxB;;qNAGAvC,MAAM,EAAEpB,SAAS,CAAC2D,MAnBM,EAqBxB;;kPAGA9C,YAAY,EAAEb,SAAS,CAAC4D,GAxBA,EA0BxB;;kRAGA1C,aAAa,EAAElB,SAAS,CAAC0D,MA7BD,EA+BxB;;;;sTAKAvC,IAAI,EAAEnB,SAAS,CAAC2D,MApCQ,E","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { Nullable } from '../../typings/utility-types';\r\n\r\nimport { PopupHelper, PositionObject, Rect } from './PopupHelper';\r\nimport { jsStyles } from './PopupPin.styles';\r\n\r\nconst borderStyles = {\r\n  position: 'absolute',\r\n  borderStyle: 'solid',\r\n  borderTopColor: 'transparent',\r\n  borderBottomColor: 'transparent',\r\n  borderLeftColor: 'transparent',\r\n  borderRightColor: 'transparent',\r\n};\r\n\r\ninterface Props {\r\n  backgroundColor: string;\r\n  borderColor: string;\r\n  borderWidth: number;\r\n  offset: number;\r\n  popupElement: Nullable<HTMLElement>;\r\n  popupPosition: string;\r\n  size: number;\r\n}\r\n\r\nexport class PopupPin extends React.Component<Props> {\r\n  public static __KONTUR_REACT_UI__ = 'PopupPin';\r\n\r\n  public static propTypes = {\r\n    /**\r\n     * Цвет фон пина\r\n     */\r\n    backgroundColor: PropTypes.string,\r\n\r\n    /**\r\n     * Цвет границы пина\r\n     */\r\n    borderColor: PropTypes.string,\r\n\r\n    /**\r\n     * Ширина границы пина\r\n     */\r\n    borderWidth: PropTypes.number,\r\n\r\n    /**\r\n     * Смещение пина от края попапа. Край задаётся в пропе position вторым словом\r\n     */\r\n    offset: PropTypes.number,\r\n\r\n    /**\r\n     * Ссылка на попап\r\n     */\r\n    popupElement: PropTypes.any,\r\n\r\n    /**\r\n     * Позиция поапа, по которой будет вычеслено положение пина\r\n     */\r\n    popupPosition: PropTypes.string,\r\n\r\n    /**\r\n     * Сторона пина без учёта границы.\r\n     * Пин представляет собой равносторонний треугольник, высота от попапа\r\n     * до \"носика\" пина будет соответствовать формуле (size* √3)/2\r\n     */\r\n    size: PropTypes.number,\r\n  };\r\n\r\n  public render() {\r\n    if (!this.props.popupElement) {\r\n      return null;\r\n    }\r\n\r\n    const options = this.getPinOptions(\r\n      PopupHelper.getElementAbsoluteRect(this.props.popupElement),\r\n      PopupHelper.getPositionObject(this.props.popupPosition),\r\n      this.props.size,\r\n      this.props.offset,\r\n      this.props.borderWidth,\r\n    );\r\n\r\n    const styleOuter: React.CSSProperties = this.getOuterStyle(\r\n      options.activeBorder,\r\n      options.outerSize,\r\n      this.props.borderColor,\r\n    );\r\n\r\n    const styleInner: React.CSSProperties = this.getInnerStyle(\r\n      options.activeBorder,\r\n      this.props.size,\r\n      this.props.backgroundColor,\r\n    );\r\n\r\n    const styleWrapper = this.getWrapperStyle(options.outerLeft, options.outerTop, options.outerSize);\r\n\r\n    return (\r\n      <div className={jsStyles.wrapper()} style={styleWrapper}>\r\n        <div style={styleOuter}>\r\n          <div style={styleInner} />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  private getPopupOppositeDirection(): 'bottom' | 'top' | 'left' | 'right' {\r\n    const popupDirection = PopupHelper.getPositionObject(this.props.popupPosition).direction;\r\n    switch (popupDirection) {\r\n      case 'top':\r\n        return 'bottom';\r\n      case 'bottom':\r\n        return 'top';\r\n      case 'left':\r\n        return 'right';\r\n      case 'right':\r\n        return 'left';\r\n      default:\r\n        throw new TypeError('Unknown direction ' + popupDirection);\r\n    }\r\n  }\r\n\r\n  private getWrapperStyle(left: number, top: number, borderWidth: number) {\r\n    const direction = this.getPopupOppositeDirection();\r\n    switch (direction) {\r\n      case 'top':\r\n      case 'bottom':\r\n        return {\r\n          [direction]: -borderWidth + 'px',\r\n          left: left + 'px',\r\n          width: borderWidth * 2 + 'px',\r\n          height: borderWidth + 'px',\r\n        };\r\n      case 'left':\r\n      case 'right':\r\n        return {\r\n          [direction]: -borderWidth + 'px',\r\n          top: top + 'px',\r\n          height: borderWidth * 2 + 'px',\r\n          width: borderWidth + 'px',\r\n        };\r\n      default:\r\n        throw new TypeError('Unknown direction ' + direction);\r\n    }\r\n  }\r\n\r\n  private getOuterStyle(activeBorder: string, borderWitdth: number, borderColor: string): React.CSSProperties {\r\n    const direction = this.getPopupOppositeDirection();\r\n    switch (direction) {\r\n      case 'top':\r\n      case 'bottom':\r\n        return {\r\n          ...borderStyles,\r\n          [direction]: -borderWitdth + 'px',\r\n          left: '0px',\r\n          borderWidth: borderWitdth + 'px',\r\n          ['border' + activeBorder + 'Color']: borderColor,\r\n        } as React.CSSProperties;\r\n      case 'left':\r\n      case 'right':\r\n        return {\r\n          ...borderStyles,\r\n          [direction]: -borderWitdth + 'px',\r\n          top: '0px',\r\n          borderWidth: borderWitdth + 'px',\r\n          ['border' + activeBorder + 'Color']: borderColor,\r\n        } as React.CSSProperties;\r\n      default:\r\n        throw new TypeError('Unknown direction ' + direction);\r\n    }\r\n  }\r\n\r\n  private getInnerStyle(activeBorder: string, borderWitdth: number, borderColor: string): React.CSSProperties {\r\n    const direction = this.getPopupOppositeDirection();\r\n    switch (direction) {\r\n      case 'top':\r\n      case 'bottom':\r\n        return {\r\n          ...borderStyles,\r\n          [direction]: -borderWitdth + 2 + 'px',\r\n          left: -borderWitdth + 'px',\r\n          borderWidth: borderWitdth + 'px',\r\n          ['border' + activeBorder + 'Color']: borderColor,\r\n        } as React.CSSProperties;\r\n      case 'left':\r\n      case 'right':\r\n        return {\r\n          ...borderStyles,\r\n          [direction]: -borderWitdth + 2 + 'px',\r\n          top: -borderWitdth + 'px',\r\n          borderWidth: borderWitdth + 'px',\r\n          ['border' + activeBorder + 'Color']: borderColor,\r\n        } as React.CSSProperties;\r\n      default:\r\n        throw new TypeError('Unknown direction ' + direction);\r\n    }\r\n  }\r\n\r\n  private getPinOptions(\r\n    popupRect: Rect,\r\n    popupPosition: PositionObject,\r\n    pinSize: number,\r\n    pinOffset: number,\r\n    borderWidth: number,\r\n  ) {\r\n    const bordersDelta = 2 * borderWidth;\r\n    const outerSize = pinSize + bordersDelta;\r\n\r\n    switch (popupPosition.direction) {\r\n      case 'top':\r\n        return {\r\n          outerTop: popupRect.height,\r\n          outerLeft: this.getPinLeftCoordinate(popupRect, popupPosition.align, pinSize, pinOffset) - bordersDelta,\r\n          innerTop: -outerSize,\r\n          innerLeft: -outerSize + bordersDelta,\r\n          activeBorder: 'Top',\r\n          outerSize,\r\n        };\r\n      case 'bottom':\r\n        return {\r\n          outerTop: -2 * outerSize,\r\n          outerLeft: this.getPinLeftCoordinate(popupRect, popupPosition.align, pinSize, pinOffset) - bordersDelta,\r\n          innerTop: -outerSize + 2 * bordersDelta,\r\n          innerLeft: -outerSize + bordersDelta,\r\n          activeBorder: 'Bottom',\r\n          outerSize,\r\n        };\r\n      case 'left':\r\n        return {\r\n          outerTop: this.getPinTopCoordinate(popupRect, popupPosition.align, pinSize, pinOffset) - bordersDelta,\r\n          outerLeft: popupRect.width,\r\n          innerTop: -outerSize + bordersDelta,\r\n          innerLeft: -outerSize,\r\n          activeBorder: 'Left',\r\n          outerSize,\r\n        };\r\n      case 'right':\r\n        return {\r\n          outerTop: this.getPinTopCoordinate(popupRect, popupPosition.align, pinSize, pinOffset) - bordersDelta,\r\n          outerLeft: -2 * outerSize,\r\n          innerTop: -outerSize + bordersDelta,\r\n          innerLeft: -outerSize + 2 * bordersDelta,\r\n          activeBorder: 'Right',\r\n          outerSize,\r\n        };\r\n      default:\r\n        throw new Error('Direction must be one of top, right, bottom, left');\r\n    }\r\n  }\r\n\r\n  private getPinTopCoordinate(popupRect: Rect, align: string, pinHeight: number, pinOffset: number) {\r\n    switch (align) {\r\n      case 'top':\r\n        return pinOffset;\r\n      case 'middle':\r\n        return popupRect.height / 2 - pinHeight;\r\n      case 'bottom':\r\n        return popupRect.height - pinOffset - 2 * pinHeight;\r\n      default:\r\n        throw new Error(`Unexpected align '${align}'`);\r\n    }\r\n  }\r\n\r\n  private getPinLeftCoordinate(popupRect: Rect, align: string, pinHeight: number, pinOffset: number) {\r\n    switch (align) {\r\n      case 'left':\r\n        return pinOffset;\r\n      case 'center':\r\n        return popupRect.width / 2 - pinHeight;\r\n      case 'right':\r\n        return popupRect.width - pinOffset - 2 * pinHeight;\r\n      default:\r\n        throw new Error(`Unexpected align '${align}'`);\r\n    }\r\n  }\r\n}\r\n"]}