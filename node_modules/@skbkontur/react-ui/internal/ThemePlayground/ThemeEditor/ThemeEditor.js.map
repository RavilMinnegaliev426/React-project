{"version":3,"sources":["ThemeEditor.tsx"],"names":["React","ThemeFactory","Gapped","Loader","VariableValue","VARIABLES_GROUPS","jsStyles","ThemeEditor","state","groups","isLoading","updateTimeout","renderGroups","props","editingTheme","currentTheme","currentErrors","onValueChange","keys","getKeys","map","i","title","filter","isCommon","isCommonVariable","bind","reduce","prefixesReducer","isGroupVariable","prefix","render","loaderWrapper","loader","componentDidMount","window","setTimeout","setState","componentWillUnmount","clearTimeout","Component","Group","variables","length","editorGroupHeader","variable","value","isError","getBaseVariables","name","splitPrefix","split","item","startsWith","trim","prefixes","acc","current","theme","Object","getPrototypeOf","prototype","hasOwnProperty","call","descriptor","getOwnPropertyDescriptor","get","getterBody","toString","variableNameMatchArray","match","v","replace"],"mappings":"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","sourcesContent":["import React from 'react';\r\n\r\nimport { ThemeFactory } from '../../lib/theming/ThemeFactory';\r\nimport { Theme } from '../../lib/theming/Theme';\r\nimport { Gapped } from '../../components/Gapped';\r\nimport { Loader } from '../../components/Loader';\r\n\r\nimport { VariableValue } from './VariableValue';\r\nimport { VARIABLES_GROUPS } from './constants';\r\nimport { ThemeErrorsType } from './ThemeContextPlayground';\r\nimport { jsStyles } from './Playground.styles';\r\n\r\ninterface ThemeEditorProps {\r\n  editingTheme: Theme;\r\n  currentTheme: Theme;\r\n  currentErrors: ThemeErrorsType;\r\n  onValueChange: (variable: keyof Theme, value: string) => void;\r\n}\r\ninterface ThemeEditorState {\r\n  groups: Group[];\r\n  isLoading: boolean;\r\n}\r\ninterface Group {\r\n  title: string;\r\n  prefix: string;\r\n  isCommon?: boolean;\r\n}\r\nexport class ThemeEditor extends React.Component<ThemeEditorProps, ThemeEditorState> {\r\n  public state = {\r\n    groups: [],\r\n    isLoading: true,\r\n  };\r\n  private updateTimeout?: number;\r\n\r\n  public render() {\r\n    return this.state.isLoading ? (\r\n      <div className={jsStyles.loaderWrapper()}>\r\n        <Loader type=\"big\" active className={jsStyles.loader()} />\r\n      </div>\r\n    ) : (\r\n      this.renderGroups()\r\n    );\r\n  }\r\n\r\n  public componentDidMount() {\r\n    this.updateTimeout = window.setTimeout(() => {\r\n      this.setState({ groups: VARIABLES_GROUPS, isLoading: false });\r\n    }, 500);\r\n  }\r\n\r\n  public componentWillUnmount(): void {\r\n    clearTimeout(this.updateTimeout);\r\n  }\r\n\r\n  private renderGroups = () => {\r\n    const { editingTheme, currentTheme, currentErrors, onValueChange } = this.props;\r\n    const keys = ThemeFactory.getKeys(editingTheme);\r\n\r\n    return (\r\n      <Gapped wrap verticalAlign=\"middle\">\r\n        {this.state.groups.map((i: Group) => (\r\n          <Group\r\n            editingTheme={editingTheme}\r\n            currentTheme={currentTheme}\r\n            currentErrors={currentErrors}\r\n            onValueChange={onValueChange}\r\n            title={i.title}\r\n            variables={keys.filter(\r\n              i.isCommon\r\n                ? isCommonVariable.bind(null, this.state.groups.reduce(prefixesReducer, []))\r\n                : isGroupVariable.bind(null, i.prefix),\r\n            )}\r\n            key={i.title}\r\n          />\r\n        ))}\r\n      </Gapped>\r\n    );\r\n  };\r\n}\r\n\r\ninterface GroupProps {\r\n  editingTheme: Theme;\r\n  currentTheme: Theme;\r\n  currentErrors: ThemeErrorsType;\r\n  title: string;\r\n  variables: Array<keyof Theme>;\r\n  onValueChange: (variable: keyof Theme, value: string) => void;\r\n}\r\nconst Group = (props: GroupProps) => {\r\n  const { editingTheme, currentTheme, currentErrors, onValueChange, title, variables } = props;\r\n\r\n  return variables.length > 0 ? (\r\n    <React.Fragment>\r\n      <h2 className={jsStyles.editorGroupHeader(currentTheme)}>{title}</h2>\r\n      <Gapped gap={16} wrap verticalAlign=\"middle\">\r\n        {variables.map(variable => {\r\n          const value = editingTheme[variable] as string;\r\n          const isError = currentErrors[variable];\r\n          return (\r\n            <VariableValue\r\n              theme={currentTheme}\r\n              onChange={onValueChange}\r\n              value={value}\r\n              isError={isError || false}\r\n              variable={variable}\r\n              key={variable}\r\n              baseVariables={getBaseVariables(editingTheme, variable)}\r\n            />\r\n          );\r\n        })}\r\n      </Gapped>\r\n    </React.Fragment>\r\n  ) : null;\r\n};\r\n\r\nconst isGroupVariable = (prefix: string, name: string) => {\r\n  const splitPrefix = prefix.split(' ') || [];\r\n\r\n  for (const item of splitPrefix) {\r\n    if (name.startsWith(item.trim())) {\r\n      return true;\r\n    }\r\n  }\r\n  return false;\r\n};\r\nconst isCommonVariable = (prefixes: string[], name: string) => {\r\n  for (const item of prefixes) {\r\n    if (name.startsWith(item.trim())) {\r\n      return false;\r\n    }\r\n  }\r\n  return true;\r\n};\r\nconst prefixesReducer = (acc: string[], current: { title: string; prefix: string }): string[] => {\r\n  const splitPrefix = current.prefix.split(' ');\r\n  return [...acc, ...splitPrefix];\r\n};\r\nconst getBaseVariables = (theme: Theme, variable: keyof Theme): Array<keyof Theme> => {\r\n  for (; theme != null; theme = Object.getPrototypeOf(theme)) {\r\n    if (Object.prototype.hasOwnProperty.call(theme, variable)) {\r\n      const descriptor = Object.getOwnPropertyDescriptor(theme, variable);\r\n\r\n      if (descriptor && typeof descriptor.get !== 'undefined') {\r\n        const getterBody = descriptor.get.toString();\r\n        const variableNameMatchArray = getterBody.match(/this\\.(\\w+)\\b/gm) || [];\r\n        return (variableNameMatchArray || []).map(v => v.replace(/this\\./g, '')) as Array<keyof Theme>;\r\n      }\r\n      break;\r\n    }\r\n  }\r\n  return [];\r\n};\r\n"]}