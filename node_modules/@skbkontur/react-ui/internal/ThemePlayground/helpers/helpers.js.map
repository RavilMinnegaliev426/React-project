{"version":3,"sources":["helpers.tsx"],"names":["React","Checkbox","getComponentsFromPropsList","component","propsList","reduce","result","props","index","isCheckbox","type","checkboxProps","focused","ref","el","setState","focusedByTab","elementWithProps","cloneElement","key"],"mappings":"0DAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,SAASC,QAAT,QAAyB,2BAAzB;;AAEA,OAAO,IAAMC,0BAA0B,GAAG,SAA7BA,0BAA6B,CAAeC,SAAf,EAAiDC,SAAjD,EAAoE;AAC5G,SAAOA,SAAS,CAACC,MAAV,CAAiB,UAACC,MAAD,EAAuCC,KAAvC,EAA8CC,KAA9C,EAAwD;AAC9E;AACA;AACA,QAAMC,UAAU,GAAGN,SAAS,CAACO,IAAV,KAAmBT,QAAtC;AACA,QAAIQ,UAAJ,EAAgB;AACd,UAAME,aAAa,GAAIJ,KAAvB;AACA,UAAII,aAAa,CAACC,OAAlB,EAA2B;AACzBD,QAAAA,aAAa,CAACE,GAAd,GAAoB,UAAAC,EAAE,EAAI;AACxB,cAAIA,EAAJ,EAAQ;AACNA,YAAAA,EAAE,CAACC,QAAH,CAAY,EAAEC,YAAY,EAAE,IAAhB,EAAZ;AACD;AACF,SAJD;AAKA,eAAOL,aAAa,CAACC,OAArB;AACD;AACF;;AAED,QAAMK,gBAAgB,GAAGjB,KAAK,CAACkB,YAAN,CAAmBf,SAAnB,eAAmCI,KAAnC,IAA0CY,GAAG,EAAEX,KAA/C,IAAzB;;AAEA,qBAAWF,MAAX,GAAmBW,gBAAnB;AACD,GAnBM,EAmBJ,EAnBI,CAAP;AAoBD,CArBM","sourcesContent":["import React from 'react';\r\n\r\nimport { Checkbox } from '../../components/Checkbox';\r\n\r\nexport const getComponentsFromPropsList = <P extends {}>(component: React.ReactElement<P>, propsList: P[]) => {\r\n  return propsList.reduce((result: Array<React.ReactElement<P>>, props, index) => {\r\n    // NOTE: все это ради чекбокса с фокусом, т.к. нет ни focused, ни autofocus; а ref+focus() снаружи нестабилен\r\n    // @ts-ignore\r\n    const isCheckbox = component.type === Checkbox;\r\n    if (isCheckbox) {\r\n      const checkboxProps = (props as unknown) as { ref: (el: Checkbox) => void; focused: boolean };\r\n      if (checkboxProps.focused) {\r\n        checkboxProps.ref = el => {\r\n          if (el) {\r\n            el.setState({ focusedByTab: true });\r\n          }\r\n        };\r\n        delete checkboxProps.focused;\r\n      }\r\n    }\r\n\r\n    const elementWithProps = React.cloneElement(component, { ...props, key: index });\r\n\r\n    return [...result, elementWithProps];\r\n  }, []);\r\n};\r\n"]}