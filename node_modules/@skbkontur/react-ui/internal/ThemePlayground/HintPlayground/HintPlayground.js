import _inheritsLoose from "@babel/runtime/helpers/esm/inheritsLoose";
import React from 'react';
import { Gapped } from "../../../components/Gapped";
import { Button } from "../../../components/Button";
import { Hint } from "../../../components/Hint";
import { Toast } from "../../../components/Toast";
export var HintPlayground =
/*#__PURE__*/
function (_React$Component) {
  _inheritsLoose(HintPlayground, _React$Component);

  function HintPlayground() {
    var _this;

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;

    _this.pushToast = function () {
      Toast.push('Текст сообщения');
    };

    _this.pushToastWithAction = function () {
      Toast.push('Текст сообщения', {
        label: 'Ссылка',
        handler: function handler() {
          return null;
        }
      });
    };

    return _this;
  }

  var _proto = HintPlayground.prototype;

  _proto.render = function render() {
    return React.createElement(Gapped, {
      gap: 10
    }, React.createElement(Hint, {
      manual: true,
      opened: true,
      text: 'Показать тост'
    }, React.createElement(Button, {
      onClick: this.pushToast
    }, "Toast")), React.createElement(Hint, {
      manual: true,
      opened: true,
      text: 'Показать тост с ссылкой',
      pos: 'right'
    }, React.createElement(Button, {
      onClick: this.pushToastWithAction
    }, "Toast with link")));
  };

  return HintPlayground;
}(React.Component);