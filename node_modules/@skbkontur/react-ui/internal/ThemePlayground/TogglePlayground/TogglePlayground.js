import _inheritsLoose from "@babel/runtime/helpers/esm/inheritsLoose";
import React, { Component } from 'react';
import { Gapped } from "../../../components/Gapped";
import { Toggle } from "../../../components/Toggle";
export var TogglePlayground =
/*#__PURE__*/
function (_Component) {
  _inheritsLoose(TogglePlayground, _Component);

  function TogglePlayground() {
    var _this;

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _Component.call.apply(_Component, [this].concat(args)) || this;
    _this.state = {
      checked: false,
      loadingActive: false,
      loading: false
    };
    return _this;
  }

  var _proto = TogglePlayground.prototype;

  _proto.render = function render() {
    return React.createElement(Gapped, {
      vertical: true
    }, React.createElement(Gapped, {
      gap: 10
    }, React.createElement(Toggle, null), React.createElement("div", null, "Toggle")), React.createElement(Gapped, {
      gap: 10
    }, React.createElement(Toggle, {
      disabled: true
    }), React.createElement("div", null, "Disabled toggle")));
  };

  return TogglePlayground;
}(Component);