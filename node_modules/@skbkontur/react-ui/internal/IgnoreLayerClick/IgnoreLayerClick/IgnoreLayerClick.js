import _inheritsLoose from "@babel/runtime/helpers/esm/inheritsLoose";
import React from 'react';
import { findDOMNode } from 'react-dom';
export var IgnoreLayerClick =
/*#__PURE__*/
function (_React$Component) {
  _inheritsLoose(IgnoreLayerClick, _React$Component);

  function IgnoreLayerClick() {
    return _React$Component.apply(this, arguments) || this;
  }

  var _proto = IgnoreLayerClick.prototype;

  _proto.render = function render() {
    var child = React.Children.only(this.props.children);
    return this.props.active ? React.createElement(IgnoreLayerClickWrapper, null, child) : child;
  };

  return IgnoreLayerClick;
}(React.Component); // NOTE Используется только в команде Контур.Бухгалтерия

var IgnoreLayerClickWrapper =
/*#__PURE__*/
function (_React$Component2) {
  _inheritsLoose(IgnoreLayerClickWrapper, _React$Component2);

  function IgnoreLayerClickWrapper() {
    var _this;

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _React$Component2.call.apply(_React$Component2, [this].concat(args)) || this;
    _this.element = null;

    _this.handleMouseDown = function (event) {
      event.stopPropagation();
    };

    return _this;
  }

  var _proto2 = IgnoreLayerClickWrapper.prototype;

  _proto2.componentDidMount = function componentDidMount() {
    var element = findDOMNode(this);

    if (element && element instanceof Element) {
      element.addEventListener('mousedown', this.handleMouseDown);
      this.element = element;
    }
  };

  _proto2.componentWillUnmount = function componentWillUnmount() {
    if (this.element) {
      this.element.removeEventListener('mousedown', this.handleMouseDown);
      this.element = null;
    }
  };

  _proto2.render = function render() {
    return React.Children.only(this.props.children);
  };

  return IgnoreLayerClickWrapper;
}(React.Component);

IgnoreLayerClickWrapper.__KONTUR_REACT_UI__ = 'IgnoreLayerClick';