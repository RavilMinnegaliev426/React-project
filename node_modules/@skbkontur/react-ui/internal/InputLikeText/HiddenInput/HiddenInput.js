import _extends from "@babel/runtime/helpers/esm/extends";
import _objectWithoutPropertiesLoose from "@babel/runtime/helpers/esm/objectWithoutPropertiesLoose";
import _inheritsLoose from "@babel/runtime/helpers/esm/inheritsLoose";
import _taggedTemplateLiteralLoose from "@babel/runtime/helpers/esm/taggedTemplateLiteralLoose";

function _templateObject() {
  var data = _taggedTemplateLiteralLoose(["\n  position: absolute;\n  width: 1px;\n  height: 0;\n  border: 0;\n  outline: 0;\n  margin: 0;\n  padding: 0;\n  overflow: hidden;\n  opacity: 0;\n"]);

  _templateObject = function _templateObject() {
    return data;
  };

  return data;
}

import React from 'react';
import { css } from "../../../lib/theming/Emotion";

var cap = function cap(e) {
  return e.stopPropagation();
};

var className = css(_templateObject());
/**
                                         * В **IE11** событие `onPaste` вызывается только у редактируемых элементов: `input`, `textarea`, `[contenteditable]`.
                                         * Для решения этой проблемы, перед "вставкой" фокусируемся на инпуте
                                         * после этого `onPaste` вызывается у инпута и всплывает.
                                         */

export var HiddenInput =
/*#__PURE__*/
function (_React$Component) {
  _inheritsLoose(HiddenInput, _React$Component);

  function HiddenInput() {
    return _React$Component.apply(this, arguments) || this;
  }

  var _proto = HiddenInput.prototype;

  _proto.render = function render() {
    var _this$props = this.props,
        nodeRef = _this$props.nodeRef,
        props = _objectWithoutPropertiesLoose(_this$props, ["nodeRef"]);

    return React.createElement("input", _extends({}, props, {
      ref: nodeRef,
      type: "text",
      tabIndex: -1,
      onBlur: cap,
      onFocus: cap,
      onChange: cap,
      className: className
    }));
  };

  return HiddenInput;
}(React.Component);