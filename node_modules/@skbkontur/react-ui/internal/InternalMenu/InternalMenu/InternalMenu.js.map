{"version":3,"sources":["InternalMenu.tsx"],"names":["React","ReactDOM","cn","isKeyArrowDown","isKeyArrowUp","isKeyEnter","ScrollContainer","isMenuItem","isMenuHeader","createPropsGetter","ThemeContext","jsStyles","isActiveElement","InternalMenu","state","highlightedIndex","maxHeight","props","scrollState","theme","scrollContainer","highlighted","rootElement","header","footer","getProps","defaultProps","renderHeader","el","fixedHeader","renderFooter","fixedFooter","focusOnRootElement","focus","shouldRecalculateMaxHeight","prevProps","children","prevMaxHeight","prevHeader","prevFooter","prevChildrenCount","Children","count","calculateMaxHeight","parsedMaxHeight","window","rootElementMaxHeight","getComputedStyle","parseFloat","calculatedMaxHeight","getBoundingClientRect","height","setState","setInitialSelection","i","initialSelectedItemIndex","moveDown","refScrollContainer","scrollToSelected","scrollTo","findDOMNode","highlightItem","index","unhighlight","moveUp","move","handleKeyDown","e","onKeyDown","defaultPrevented","preventDefault","onClick","handleScrollStateChange","componentDidMount","componentDidUpdate","prevState","UNSAFE_componentWillReceiveProps","nextProps","render","renderMain","enableIconPadding","toArray","some","x","isValidElement","icon","isEmpty","root","shadow","hasShadow","width","element","preventWindowScroll","map","child","type","cloneElement","_enableIconPadding","highlight","ref","originalRef","menuItem","refHighlighted","select","bind","onMouseEnter","event","onMouseLeave","current","shouldHandleHref","item","childrenToArray","href","target","open","location","onItemClick","step","cyclicSelection","length","filter","isExist","Component","__KONTUR_REACT_UI__","value","undefined","ret","forEach","push"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport cn from 'classnames';\r\n\r\nimport { isKeyArrowDown, isKeyArrowUp, isKeyEnter } from '../../lib/events/keyboard/identifiers';\r\nimport { ScrollContainer, ScrollContainerScrollState } from '../../components/ScrollContainer';\r\nimport { isMenuItem, MenuItem, MenuItemProps } from '../../components/MenuItem';\r\nimport { isMenuHeader } from '../../components/MenuHeader';\r\nimport { createPropsGetter } from '../../lib/createPropsGetter';\r\nimport { Nullable } from '../../typings/utility-types';\r\nimport { ThemeContext } from '../../lib/theming/ThemeContext';\r\nimport { Theme } from '../../lib/theming/Theme';\r\n\r\nimport { jsStyles } from './InternalMenu.styles';\r\nimport { isActiveElement } from './isActiveElement';\r\n\r\ninterface MenuProps {\r\n  children?: React.ReactNode;\r\n  hasShadow?: boolean;\r\n  maxHeight?: number | string;\r\n  onItemClick?: (event: React.SyntheticEvent<HTMLElement>) => void;\r\n  width?: number | string;\r\n  preventWindowScroll?: boolean;\r\n  onKeyDown?: (event: React.KeyboardEvent<HTMLElement>) => void;\r\n\r\n  header?: React.ReactNode;\r\n  footer?: React.ReactNode;\r\n\r\n  // Циклический перебор айтемов меню (по-дефолтну включен)\r\n  cyclicSelection?: boolean;\r\n  initialSelectedItemIndex?: number;\r\n}\r\n\r\ninterface MenuState {\r\n  highlightedIndex: number;\r\n  maxHeight: number | string;\r\n  scrollState: ScrollContainerScrollState;\r\n}\r\n\r\nexport class InternalMenu extends React.Component<MenuProps, MenuState> {\r\n  public static __KONTUR_REACT_UI__ = 'InternalMenu';\r\n\r\n  public static defaultProps = {\r\n    width: 'auto',\r\n    maxHeight: 300,\r\n    hasShadow: true,\r\n    preventWindowScroll: true,\r\n    cyclicSelection: true,\r\n    initialSelectedItemIndex: -1,\r\n  };\r\n\r\n  public state: MenuState = {\r\n    highlightedIndex: -1,\r\n    maxHeight: this.props.maxHeight || 'none',\r\n    scrollState: 'top',\r\n  };\r\n\r\n  private theme!: Theme;\r\n  private scrollContainer: Nullable<ScrollContainer>;\r\n  private highlighted: Nullable<MenuItem>;\r\n  private rootElement: Nullable<HTMLDivElement>;\r\n  private header: Nullable<HTMLDivElement>;\r\n  private footer: Nullable<HTMLDivElement>;\r\n  private getProps = createPropsGetter(InternalMenu.defaultProps);\r\n\r\n  public componentDidMount() {\r\n    this.setInitialSelection();\r\n    this.calculateMaxHeight();\r\n  }\r\n\r\n  public componentDidUpdate(prevProps: MenuProps, prevState: MenuState) {\r\n    if (this.shouldRecalculateMaxHeight(prevProps)) {\r\n      this.calculateMaxHeight();\r\n    }\r\n  }\r\n\r\n  public UNSAFE_componentWillReceiveProps(nextProps: MenuProps) {\r\n    if (nextProps.maxHeight !== this.props.maxHeight) {\r\n      this.setState({\r\n        maxHeight: nextProps.maxHeight || 'none',\r\n      });\r\n    }\r\n  }\r\n\r\n  public focus() {\r\n    this.focusOnRootElement();\r\n  }\r\n\r\n  public render() {\r\n    return (\r\n      <ThemeContext.Consumer>\r\n        {theme => {\r\n          this.theme = theme;\r\n          return this.renderMain();\r\n        }}\r\n      </ThemeContext.Consumer>\r\n    );\r\n  }\r\n\r\n  private renderMain() {\r\n    const enableIconPadding = React.Children.toArray(this.props.children).some(\r\n      x => React.isValidElement(x) && x.props.icon,\r\n    );\r\n\r\n    if (this.isEmpty()) {\r\n      return null;\r\n    }\r\n\r\n    return (\r\n      <div\r\n        className={cn({\r\n          [jsStyles.root(this.theme)]: true,\r\n          [jsStyles.shadow()]: this.props.hasShadow,\r\n        })}\r\n        style={{\r\n          width: this.props.width,\r\n          maxHeight: this.state.maxHeight,\r\n        }}\r\n        onKeyDown={this.handleKeyDown}\r\n        ref={element => {\r\n          this.rootElement = element;\r\n        }}\r\n        tabIndex={0}\r\n      >\r\n        {this.props.header ? this.renderHeader() : null}\r\n        <ScrollContainer\r\n          ref={this.refScrollContainer}\r\n          maxHeight={this.props.maxHeight}\r\n          preventWindowScroll={this.props.preventWindowScroll}\r\n          onScrollStateChange={this.handleScrollStateChange}\r\n        >\r\n          {React.Children.map(this.props.children, (child, index) => {\r\n            if (typeof child === 'string' || typeof child === 'number' || child == null) {\r\n              return child;\r\n            }\r\n            if (React.isValidElement(child) && typeof child.type === 'string') {\r\n              return child;\r\n            }\r\n\r\n            if (enableIconPadding && (isMenuItem(child) || isMenuHeader(child))) {\r\n              child = React.cloneElement(child, {\r\n                _enableIconPadding: true,\r\n              });\r\n            }\r\n\r\n            if (isActiveElement(child)) {\r\n              const highlight = this.state.highlightedIndex === index;\r\n\r\n              let ref = child.ref;\r\n              const originalRef = ref;\r\n              if (highlight) {\r\n                ref = menuItem => this.refHighlighted(originalRef, menuItem);\r\n              }\r\n\r\n              return React.cloneElement<MenuItemProps, MenuItem>(child, {\r\n                ref,\r\n                state: highlight ? 'hover' : child.props.state,\r\n                onClick: this.select.bind(this, index, false),\r\n                onMouseEnter: event => {\r\n                  this.highlightItem(index);\r\n                  if (isMenuItem(child) && child.props.onMouseEnter) {\r\n                    child.props.onMouseEnter(event);\r\n                  }\r\n                },\r\n                onMouseLeave: event => {\r\n                  this.unhighlight();\r\n                  if (isMenuItem(child) && child.props.onMouseLeave) {\r\n                    child.props.onMouseLeave(event);\r\n                  }\r\n                },\r\n              });\r\n            }\r\n\r\n            return child;\r\n          })}\r\n        </ScrollContainer>\r\n        {this.props.footer ? this.renderFooter() : null}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  private renderHeader = () => {\r\n    return (\r\n      <div\r\n        ref={el => (this.header = el)}\r\n        className={cn({\r\n          [jsStyles.header()]: true,\r\n          [jsStyles.fixedHeader()]: this.state.scrollState !== 'top',\r\n        })}\r\n      >\r\n        {this.props.header}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  private renderFooter = () => {\r\n    return (\r\n      <div\r\n        ref={el => (this.footer = el)}\r\n        className={cn({\r\n          [jsStyles.footer()]: true,\r\n          [jsStyles.fixedFooter()]: this.state.scrollState !== 'bottom',\r\n        })}\r\n      >\r\n        {this.props.footer}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  private focusOnRootElement = (): void => {\r\n    if (this.rootElement) {\r\n      this.rootElement.focus();\r\n    }\r\n  };\r\n\r\n  private shouldRecalculateMaxHeight = (prevProps: MenuProps): boolean => {\r\n    const { maxHeight, header, footer, children } = this.props;\r\n    const prevMaxHeight = prevProps.maxHeight;\r\n    const prevHeader = prevProps.header;\r\n    const prevFooter = prevProps.footer;\r\n    const prevChildrenCount = React.Children.count(prevProps.children);\r\n\r\n    return (\r\n      maxHeight !== prevMaxHeight ||\r\n      footer !== prevFooter ||\r\n      header !== prevHeader ||\r\n      React.Children.count(children) !== prevChildrenCount\r\n    );\r\n  };\r\n\r\n  private calculateMaxHeight = () => {\r\n    const { maxHeight } = this.props;\r\n    let parsedMaxHeight = maxHeight;\r\n\r\n    if (typeof maxHeight === 'string' && typeof window !== 'undefined' && this.rootElement) {\r\n      const rootElementMaxHeight = window.getComputedStyle(this.rootElement).maxHeight;\r\n\r\n      if (rootElementMaxHeight) {\r\n        parsedMaxHeight = parseFloat(rootElementMaxHeight);\r\n      }\r\n    }\r\n\r\n    const calculatedMaxHeight =\r\n      typeof parsedMaxHeight === 'number'\r\n        ? parsedMaxHeight +\r\n          ((this.header && this.header.getBoundingClientRect().height) || 0) +\r\n          ((this.footer && this.footer.getBoundingClientRect().height) || 0)\r\n        : maxHeight;\r\n\r\n    this.setState({\r\n      maxHeight: calculatedMaxHeight || 'none',\r\n    });\r\n  };\r\n\r\n  private setInitialSelection = () => {\r\n    for (let i = this.getProps().initialSelectedItemIndex; i > -1; i--) {\r\n      this.moveDown();\r\n    }\r\n  };\r\n\r\n  private refScrollContainer = (scrollContainer: Nullable<ScrollContainer>) => {\r\n    this.scrollContainer = scrollContainer;\r\n  };\r\n\r\n  private refHighlighted(\r\n    originalRef: string | ((instance: MenuItem | null) => void) | React.RefObject<MenuItem> | null | undefined,\r\n    menuItem: MenuItem | null,\r\n  ) {\r\n    this.highlighted = menuItem;\r\n\r\n    if (!originalRef || typeof originalRef === 'string') {\r\n      return;\r\n    }\r\n\r\n    if (typeof originalRef === 'function') {\r\n      originalRef(menuItem);\r\n    } else if (typeof originalRef === 'object') {\r\n      // @ts-ignore see issue https://github.com/DefinitelyTyped/DefinitelyTyped/issues/31065\r\n      originalRef.current = menuItem;\r\n    }\r\n  }\r\n\r\n  private scrollToSelected = () => {\r\n    if (this.scrollContainer && this.highlighted) {\r\n      this.scrollContainer.scrollTo(ReactDOM.findDOMNode(this.highlighted) as HTMLElement);\r\n    }\r\n  };\r\n\r\n  private select(index: number, shouldHandleHref: boolean, event: React.SyntheticEvent<HTMLElement>): boolean {\r\n    const item = childrenToArray(this.props.children)[index];\r\n\r\n    if (isActiveElement(item)) {\r\n      if (shouldHandleHref && item.props.href) {\r\n        if (item.props.target) {\r\n          window.open(item.props.href, item.props.target);\r\n        } else {\r\n          location.href = item.props.href;\r\n        }\r\n      }\r\n      if (item.props.onClick) {\r\n        item.props.onClick(event as React.MouseEvent<HTMLElement>);\r\n      }\r\n      if (this.props.onItemClick) {\r\n        this.props.onItemClick(event);\r\n      }\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  private highlightItem = (index: number): void => {\r\n    this.setState({ highlightedIndex: index });\r\n    if (this.rootElement) {\r\n      this.rootElement.focus();\r\n    }\r\n  };\r\n\r\n  private unhighlight = () => {\r\n    this.setState({ highlightedIndex: -1 });\r\n  };\r\n\r\n  private move(step: number) {\r\n    this.setState((state, props) => {\r\n      const children = childrenToArray(props.children);\r\n      if (!children.some(isActiveElement)) {\r\n        return null;\r\n      }\r\n      let index = state.highlightedIndex;\r\n      do {\r\n        index += step;\r\n        if (!props.cyclicSelection && (index < 0 || index > children.length)) {\r\n          return null;\r\n        }\r\n\r\n        if (index < 0) {\r\n          index = children.length - 1;\r\n        } else if (index > children.length) {\r\n          index = 0;\r\n        }\r\n\r\n        const child = children[index];\r\n        if (isActiveElement(child)) {\r\n          return { highlightedIndex: index };\r\n        }\r\n      } while (index !== state.highlightedIndex);\r\n      return null;\r\n    }, this.scrollToSelected);\r\n  }\r\n\r\n  private moveUp = () => {\r\n    this.move(-1);\r\n  };\r\n\r\n  private moveDown = () => {\r\n    this.move(1);\r\n  };\r\n\r\n  private isEmpty() {\r\n    const { children } = this.props;\r\n    return !children || !childrenToArray(children).filter(isExist).length;\r\n  }\r\n\r\n  private handleKeyDown = (e: React.KeyboardEvent<HTMLDivElement>): void => {\r\n    if (typeof this.props.onKeyDown === 'function') {\r\n      this.props.onKeyDown(e);\r\n    }\r\n\r\n    if (e.defaultPrevented) {\r\n      return;\r\n    }\r\n\r\n    if (isKeyArrowUp(e)) {\r\n      e.preventDefault();\r\n      this.moveUp();\r\n    } else if (isKeyArrowDown(e)) {\r\n      e.preventDefault();\r\n      this.moveDown();\r\n    } else if (isKeyEnter(e)) {\r\n      if (this.highlighted && this.highlighted.props.onClick) {\r\n        this.highlighted.props.onClick(e);\r\n      }\r\n    }\r\n  };\r\n\r\n  private handleScrollStateChange = (scrollState: ScrollContainerScrollState) => {\r\n    if (this.state.scrollState !== scrollState) {\r\n      this.setState({ scrollState });\r\n    }\r\n  };\r\n}\r\n\r\nfunction isExist(value: any): value is any {\r\n  return value !== null && value !== undefined;\r\n}\r\n\r\nfunction childrenToArray(children: React.ReactNode): React.ReactNode[] {\r\n  const ret: React.ReactNode[] = [];\r\n  // Use forEach instead of map to avoid cloning for key unifying.\r\n  React.Children.forEach(children, child => {\r\n    ret.push(child);\r\n  });\r\n  return ret;\r\n}\r\n"]}