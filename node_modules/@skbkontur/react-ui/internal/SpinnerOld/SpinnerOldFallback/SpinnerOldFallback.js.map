{"version":3,"sources":["SpinnerOldFallback.tsx"],"names":["React","PropTypes","SPINNER_CLOUD_SIZE","fallbackImage_mini","fallbackImage_mini_dimmed","fallbackImage_big","fallbackImage_normal","jsStyles","types","big","mini","normal","SpinnerOldFallback","state","frame","mounted","_framesCount","dimmed","imageUrls","animate","framesCount","getSpriteSettingsKey","nextFrame","setState","setTimeout","props","type","componentDidMount","componentWillUnmount","render","renderCircle","renderCloud","cssSet","backgroundImage","height","width","marginBottom","marginLeft","marginRight","process","env","enableReactTesting","backgroundPosition","fallback","multiply","top","Component","__KONTUR_REACT_UI__","propTypes","oneOf","Object","keys","bool"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport * as PropTypes from 'prop-types';\r\n\r\nimport { SPINNER_CLOUD_SIZE } from '../icons/SpinnerOldIcon';\r\n\r\nimport fallbackImage_mini from './fallback_circle.png';\r\nimport fallbackImage_mini_dimmed from './fallback_circle_dimmed.png';\r\nimport fallbackImage_big from './fallback_cloud_big.png';\r\nimport fallbackImage_normal from './fallback_cloud_normal.png';\r\nimport { jsStyles } from './SpinnerOld.styles';\r\nimport { SpinnerOldType } from './SpinnerOld';\r\n\r\nexport const types: {\r\n  [key: string]: SpinnerOldType;\r\n} = {\r\n  big: 'big',\r\n  mini: 'mini',\r\n  normal: 'normal',\r\n};\r\n\r\nexport interface SpinnerOldFallbackProps {\r\n  type: SpinnerOldType;\r\n  dimmed?: boolean;\r\n}\r\n\r\nexport class SpinnerOldFallback extends React.Component<SpinnerOldFallbackProps> {\r\n  public static __KONTUR_REACT_UI__ = 'SpinnerOldFallback';\r\n\r\n  public static propTypes = {\r\n    type: PropTypes.oneOf(Object.keys(types)),\r\n\r\n    dimmed: PropTypes.bool,\r\n  };\r\n\r\n  public state = {\r\n    frame: 0,\r\n  };\r\n\r\n  private mounted = false;\r\n\r\n  private _framesCount = {\r\n    [types.mini]: 180,\r\n    [types.normal]: 60,\r\n    [types.big]: 60,\r\n    dimmed: 60,\r\n  };\r\n\r\n  private imageUrls = {\r\n    [types.mini]: fallbackImage_mini,\r\n    [types.normal]: fallbackImage_normal,\r\n    [types.big]: fallbackImage_big,\r\n    dimmed: fallbackImage_mini_dimmed,\r\n  };\r\n\r\n  public componentDidMount() {\r\n    this.mounted = true;\r\n    this.animate();\r\n  }\r\n\r\n  public componentWillUnmount() {\r\n    this.mounted = false;\r\n  }\r\n\r\n  public render() {\r\n    return this.props.type === 'mini' ? this.renderCircle() : this.renderCloud();\r\n  }\r\n\r\n  private renderCircle() {\r\n    const { dimmed } = this.props;\r\n    const { frame } = this.state;\r\n\r\n    const cssSet: React.CSSProperties = {\r\n      backgroundImage: `url('${this.imageUrls[dimmed ? 'dimmed' : 'mini']}')`,\r\n      height: 16,\r\n      width: 16,\r\n      marginBottom: -3,\r\n      marginLeft: -1,\r\n      marginRight: -1,\r\n    };\r\n\r\n    if (!process.env.enableReactTesting) {\r\n      cssSet.backgroundPosition = `0 -${frame * 16}px`;\r\n    }\r\n\r\n    return <span className={jsStyles.fallback()} style={cssSet} />;\r\n  }\r\n\r\n  private renderCloud() {\r\n    const { type } = this.props;\r\n    const { frame } = this.state;\r\n    const multiply = type === 'big' ? 2 : 1;\r\n    const cssSet: React.CSSProperties = {\r\n      backgroundImage: `url('${this.imageUrls[type]}')`,\r\n      height: SPINNER_CLOUD_SIZE.height * multiply,\r\n      top: 0,\r\n      width: SPINNER_CLOUD_SIZE.width * multiply,\r\n    };\r\n\r\n    if (!process.env.enableReactTesting) {\r\n      cssSet.backgroundPosition = `0 -${frame * SPINNER_CLOUD_SIZE.height * multiply}px`;\r\n    }\r\n\r\n    return <span className={jsStyles.fallback()} style={cssSet} />;\r\n  }\r\n\r\n  private animate = () => {\r\n    if (!this.mounted) {\r\n      return;\r\n    }\r\n\r\n    const { frame } = this.state;\r\n    const framesCount = this._framesCount[this.getSpriteSettingsKey()];\r\n    const nextFrame = frame < framesCount ? frame + 1 : 0;\r\n    this.setState({ frame: nextFrame });\r\n\r\n    setTimeout(this.animate, 1000 / 25);\r\n  };\r\n\r\n  private getSpriteSettingsKey = () =>\r\n    this.props.type === types.mini && this.props.dimmed ? 'dimmed' : this.props.type;\r\n}\r\n"]}