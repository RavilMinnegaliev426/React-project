{"version":3,"sources":["extractCode.ts"],"names":["KeyboardEventCodes","Codes","KeyboardMapKeys","extractCode","e","nativeEvent","code","keyCode","which","location","mapped","Object","entries","find","set","some","_keyCode","_location","Unidentified"],"mappings":";;AAEA,SAASA,kBAAkB,IAAIC,KAA/B,QAA4C,sBAA5C;AACA,SAASC,eAAT,QAAmD,mBAAnD;;AAEA,OAAO,SAASC,WAAT,CAAqBC,CAArB,EAAiF;AACtFA,EAAAA,CAAC,GAAIA,CAAD,CAAwCC,WAAxC,IAAuDD,CAA3D;AACA,MAAIA,CAAC,CAACE,IAAN,EAAY;AACV,WAAOF,CAAC,CAACE,IAAT;AACD;AACD,MAAMC,OAAO,GAAGH,CAAC,CAACG,OAAF,IAAaH,CAAC,CAACI,KAA/B;AACA,MAAMC,QAAQ,GAAGL,CAAC,CAACK,QAAnB;AACA,MAAMC,MAAM,GAAIC,MAAM,CAACC,OAAR,CAA+DV,eAA/D,EAAgFW,IAAhF,CAAqF,qBAAIC,GAAJ;AAClGA,MAAAA,GAAG,CAACC,IAAJ,CAAS,sBAAEC,QAAF,YAAYC,SAAZ,mBAA2BD,QAAQ,KAAKT,OAAb,IAAwBU,SAAS,KAAKR,QAAjE,EAAT,CADkG,GAArF,CAAf;;AAGA,SAAOC,MAAM,GAAGA,MAAM,CAAC,CAAD,CAAT,GAAeT,KAAK,CAACiB,YAAlC;AACD","sourcesContent":["import { Entries } from '../../../typings/utility-types';\r\n\r\nimport { KeyboardEventCodes as Codes } from './KeyboardEventCodes';\r\nimport { KeyboardMapKeys, KeyCode, Location } from './KeyboardMapKeys';\r\n\r\nexport function extractCode(e: React.KeyboardEvent<HTMLElement> | KeyboardEvent): Codes {\r\n  e = (e as React.KeyboardEvent<HTMLElement>).nativeEvent || e;\r\n  if (e.code) {\r\n    return e.code as Codes;\r\n  }\r\n  const keyCode = e.keyCode || e.which;\r\n  const location = e.location;\r\n  const mapped = (Object.entries as Entries<Codes, Array<[KeyCode, Location]>>)(KeyboardMapKeys).find(([, set]) =>\r\n    set.some(([_keyCode, _location]) => _keyCode === keyCode && _location === location),\r\n  );\r\n  return mapped ? mapped[0] : Codes.Unidentified;\r\n}\r\n"]}