{"version":3,"sources":["ColorFunctions.ts"],"names":["clamp","floatFromPercent","ColorFactory","DEFAULT_DARK","create","DEFAULT_LIGHT","ColorFunctionsCache","Object","buildCacheKey","name","args","join","shiftColor","colorString","a","sign","method","toLowerCase","amount","endsWith","parseFloat","color","hsl","toHSL","l","newColor","alpha","h","s","toColorString","type","lighten","key","undefined","darken","contrast","darkString","lightString","threshold","dark","light","luma","toRGBString","toHEXString","red","rgb","green","blue","isValid","e","fade"],"mappings":"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","sourcesContent":["import { clamp, floatFromPercent } from './ColorHelpers';\r\nimport { ColorFactory } from './ColorFactory';\r\nimport { ColorObject } from './ColorObject';\r\n\r\ntype SignType = '+' | '-';\r\ntype MethodType = 'absolute' | 'relative';\r\n\r\nconst DEFAULT_DARK = ColorFactory.create('#000');\r\nconst DEFAULT_LIGHT = ColorFactory.create('#fff');\r\nconst ColorFunctionsCache: { [key: string]: string } = Object.create(null);\r\n\r\nconst buildCacheKey = (name: string, ...args: any[]) => `${name}(${args.join()})`;\r\n\r\nconst shiftColor = (colorString: string, a: number | string, sign: SignType, method?: MethodType) => {\r\n  if (!colorString) {\r\n    return '';\r\n  }\r\n\r\n  if (colorString.toLowerCase() === 'transparent') {\r\n    return 'transparent';\r\n  }\r\n\r\n  let amount: number;\r\n  if (typeof a === 'string') {\r\n    amount = a.endsWith('%') ? floatFromPercent(a) : parseFloat(a);\r\n  } else {\r\n    amount = a;\r\n  }\r\n  amount = clamp(amount, 1);\r\n\r\n  const color = ColorFactory.create(colorString);\r\n  const hsl = color.toHSL();\r\n\r\n  if (sign === '+') {\r\n    hsl.l += method === 'relative' ? hsl.l * amount : amount;\r\n  } else {\r\n    hsl.l -= method === 'relative' ? hsl.l * amount : amount;\r\n  }\r\n\r\n  hsl.l = clamp(hsl.l);\r\n\r\n  let newColor: ColorObject;\r\n  if (color.alpha < 1) {\r\n    newColor = ColorFactory.create(`hsla(${hsl.h}, ${hsl.s}, ${hsl.l}, ${hsl.a})`);\r\n  } else {\r\n    newColor = ColorFactory.create(`hsl(${hsl.h}, ${hsl.s}, ${hsl.l})`);\r\n  }\r\n  return newColor.toColorString(color.type);\r\n};\r\n\r\nexport function lighten(colorString: string, amount: number | string, method?: MethodType) {\r\n  const key = buildCacheKey('lighten', colorString, amount, method);\r\n  if (ColorFunctionsCache[key] === undefined) {\r\n    ColorFunctionsCache[key] = shiftColor(colorString, amount, '+', method);\r\n    return ColorFunctionsCache[key];\r\n  }\r\n  return ColorFunctionsCache[key];\r\n}\r\nexport function darken(colorString: string, amount: number | string, method?: MethodType) {\r\n  const key = buildCacheKey('darken', colorString, amount, method);\r\n  if (ColorFunctionsCache[key] === undefined) {\r\n    ColorFunctionsCache[key] = shiftColor(colorString, amount, '-', method);\r\n    return ColorFunctionsCache[key];\r\n  }\r\n\r\n  return ColorFunctionsCache[key];\r\n}\r\nexport function contrast(colorString: string, darkString?: string, lightString?: string, threshold = 0.43) {\r\n  const key = buildCacheKey('contrast', colorString, darkString, lightString, threshold);\r\n  if (!colorString) {\r\n    ColorFunctionsCache[key] = '';\r\n  }\r\n  if (ColorFunctionsCache[key] === undefined) {\r\n    const color = ColorFactory.create(colorString);\r\n    let dark = typeof darkString === 'undefined' ? DEFAULT_DARK : ColorFactory.create(darkString);\r\n    let light = typeof lightString === 'undefined' ? DEFAULT_LIGHT : ColorFactory.create(lightString);\r\n\r\n    // Figure out which is actually light and dark:\r\n    if (dark.luma() > light.luma()) {\r\n      [dark, light] = [light, dark];\r\n    }\r\n\r\n    if (color.luma() < threshold) {\r\n      ColorFunctionsCache[key] = light.alpha < 1 ? light.toRGBString() : light.toHEXString();\r\n    } else {\r\n      ColorFunctionsCache[key] = dark.alpha < 1 ? dark.toRGBString() : dark.toHEXString();\r\n    }\r\n  }\r\n  return ColorFunctionsCache[key]!;\r\n}\r\n\r\nexport const red = (colorString: string) => {\r\n  const color = ColorFactory.create(colorString);\r\n  return color.rgb[0];\r\n};\r\nexport const green = (colorString: string) => {\r\n  const color = ColorFactory.create(colorString);\r\n  return color.rgb[1];\r\n};\r\nexport const blue = (colorString: string) => {\r\n  const color = ColorFactory.create(colorString);\r\n  return color.rgb[2];\r\n};\r\nexport const alpha = (colorString: string) => {\r\n  const color = ColorFactory.create(colorString);\r\n  return color.alpha;\r\n};\r\nexport const isValid = (colorString: string) => {\r\n  try {\r\n    ColorFactory.create(colorString);\r\n    return true;\r\n  } catch (e) {\r\n    return false;\r\n  }\r\n};\r\nexport const fade = (colorString: string, alpha: number) => {\r\n  const key = buildCacheKey('fade', colorString, alpha);\r\n\r\n  if (ColorFunctionsCache[key] === undefined) {\r\n    const color = ColorFactory.create(colorString);\r\n    color.alpha = alpha;\r\n    ColorFunctionsCache[key] = color.toColorString(color.type === 'hex' ? 'rgba' : color.type);\r\n  }\r\n  return ColorFunctionsCache[key];\r\n};\r\n"]}