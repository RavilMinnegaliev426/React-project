{"version":3,"sources":["ColorObject.ts"],"names":["warning","clamp","roundToPrecision","ColorObject","rgb","alpha","type","luma","r","g","b","Math","pow","toHEXString","map","c","round","toString","join","toRGB","a","toRGBString","toHSL","max","min","hDeg","s","l","d","h","toHSLString","hsl","toColorString"],"mappings":"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","sourcesContent":["import warning from 'warning';\r\n\r\nimport { clamp, roundToPrecision } from './ColorHelpers';\r\nimport { ColorKeywords } from './ColorKeywords';\r\n\r\nexport type RGBTuple = [number, number, number];\r\nexport type ColorKeywordsType = keyof typeof ColorKeywords;\r\nexport type ColorType = 'rgb' | 'rgba' | 'hsl' | 'hsla' | 'hex' | 'transparent' | ColorKeywordsType;\r\n\r\ninterface ColorHSLA {\r\n  h: number;\r\n  s: number;\r\n  l: number;\r\n  a: number;\r\n}\r\n\r\ninterface ColorRGBA {\r\n  r: number;\r\n  g: number;\r\n  b: number;\r\n  a: number;\r\n}\r\n\r\nexport interface ColorObjectType {\r\n  rgb: RGBTuple;\r\n  alpha: number;\r\n  type: ColorType;\r\n  luma(): number;\r\n  toRGB(): ColorRGBA;\r\n  toHSL(): ColorHSLA;\r\n  toHEXString(): string;\r\n  toRGBString(): string;\r\n  toHSLString(): string;\r\n}\r\n\r\nexport class ColorObject implements ColorObjectType {\r\n  public rgb: RGBTuple;\r\n  public alpha: number;\r\n  public type: ColorType;\r\n\r\n  constructor(rgb: RGBTuple, alpha: number, type: ColorType) {\r\n    this.rgb = rgb;\r\n    this.alpha = alpha;\r\n    this.type = type;\r\n  }\r\n\r\n  public luma() {\r\n    let r = this.rgb[0] / 255;\r\n    let g = this.rgb[1] / 255;\r\n    let b = this.rgb[2] / 255;\r\n\r\n    r = r <= 0.03928 ? r / 12.92 : Math.pow((r + 0.055) / 1.055, 2.4);\r\n    g = g <= 0.03928 ? g / 12.92 : Math.pow((g + 0.055) / 1.055, 2.4);\r\n    b = b <= 0.03928 ? b / 12.92 : Math.pow((b + 0.055) / 1.055, 2.4);\r\n\r\n    return 0.2126 * r + 0.7152 * g + 0.0722 * b;\r\n  }\r\n\r\n  public toHEXString() {\r\n    warning(this.alpha === 1, `There is an alpha channel=${this.alpha}, converting to HEX will discard opacity`);\r\n\r\n    return (\r\n      '#' +\r\n      this.rgb\r\n        .map(c => {\r\n          c = clamp(Math.round(c), 255);\r\n          return (c < 16 ? '0' : '') + c.toString(16);\r\n        })\r\n        .join('')\r\n    );\r\n  }\r\n\r\n  public toRGB() {\r\n    return { r: this.rgb[0], g: this.rgb[1], b: this.rgb[2], a: this.alpha };\r\n  }\r\n\r\n  public toRGBString() {\r\n    return this.alpha < 1\r\n      ? `rgba(${this.rgb[0]}, ${this.rgb[1]}, ${this.rgb[2]}, ${this.alpha})`\r\n      : `rgb(${this.rgb[0]}, ${this.rgb[1]}, ${this.rgb[2]})`;\r\n  }\r\n\r\n  public toHSL() {\r\n    const r = this.rgb[0] / 255;\r\n    const g = this.rgb[1] / 255;\r\n    const b = this.rgb[2] / 255;\r\n    const max = Math.max(r, g, b);\r\n    const min = Math.min(r, g, b);\r\n\r\n    let hDeg = 0;\r\n    let s = 0;\r\n    const l = (max + min) / 2;\r\n\r\n    if (max !== min) {\r\n      const d = max - min;\r\n      s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\r\n      switch (max) {\r\n        case r:\r\n          hDeg = (g - b) / d + (g < b ? 6 : 0);\r\n          break;\r\n        case g:\r\n          hDeg = (b - r) / d + 2;\r\n          break;\r\n        case b:\r\n          hDeg = (r - g) / d + 4;\r\n          break;\r\n      }\r\n      hDeg = Math.round(hDeg * 60);\r\n    }\r\n\r\n    return {\r\n      h: hDeg,\r\n      s: roundToPrecision(s, 2),\r\n      l: roundToPrecision(l, 2),\r\n      a: this.alpha,\r\n    };\r\n  }\r\n\r\n  public toHSLString() {\r\n    const hsl = this.toHSL();\r\n    return hsl.a < 1\r\n      ? `hsla(${hsl.h}, ${hsl.s * 100}%, ${hsl.l * 100}%, ${hsl.a})`\r\n      : `hsl(${hsl.h}, ${hsl.s * 100}%, ${hsl.l * 100}%)`;\r\n  }\r\n\r\n  public toColorString(type: ColorType = this.type) {\r\n    switch (type) {\r\n      case 'rgb':\r\n      case 'rgba': {\r\n        return this.toRGBString();\r\n      }\r\n      case 'hsl':\r\n      case 'hsla': {\r\n        return this.toHSLString();\r\n      }\r\n      case 'transparent': {\r\n        return `transparent`;\r\n      }\r\n      default:\r\n        return this.toHEXString();\r\n    }\r\n  }\r\n}\r\n"]}