{"version":3,"sources":["InternalDateGetter.ts"],"names":["MAX_DATE","MAX_MONTH","MAX_YEAR","MIN_DATE","MIN_MONTH","MIN_YEAR","InternalDateComponentType","InternalDateGetter","getMaxDaysInMonth","month","year","isLeapYear","undefined","getValueDateComponent","type","components","Year","Month","date","getDefaultMin","Date","getDefaultMax","getTodayComponents","getDate","getMonth","getFullYear","max","datesCustom","sort","a","b","toNumber","min"],"mappings":"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","sourcesContent":["import { MAX_DATE, MAX_MONTH, MAX_YEAR, MIN_DATE, MIN_MONTH, MIN_YEAR } from './constants';\r\nimport { InternalDate } from './InternalDate';\r\nimport {\r\n  InternalDateComponentType,\r\n  InternalDateComponentsRaw,\r\n  InternalDateComponentRaw,\r\n  InternalDateComponents,\r\n} from './types';\r\n\r\nexport class InternalDateGetter {\r\n  public static max = (datesCustom: InternalDate[]): InternalDate =>\r\n    datesCustom.sort((a, b) => b.toNumber() - a.toNumber())[0];\r\n\r\n  public static min = (datesCustom: InternalDate[]): InternalDate =>\r\n    datesCustom.sort((a, b) => a.toNumber() - b.toNumber())[0];\r\n\r\n  public static getMaxDaysInMonth(month: number, year?: number): number {\r\n    if (month === 2) {\r\n      const isLeapYear = (year !== undefined && ((year % 4 === 0 && year % 100 !== 0) || year % 400 === 0)) || false;\r\n      return isLeapYear ? 29 : 28;\r\n    }\r\n    if (month <= 7) {\r\n      month++;\r\n    }\r\n    return month % 2 === 0 ? 31 : 30;\r\n  }\r\n\r\n  public static getValueDateComponent(\r\n    type: InternalDateComponentType | null,\r\n    components: InternalDateComponentsRaw,\r\n  ): InternalDateComponentRaw {\r\n    if (type === InternalDateComponentType.Year) {\r\n      return components.year;\r\n    } else if (type === InternalDateComponentType.Month) {\r\n      return components.month;\r\n    }\r\n    return components.date;\r\n  }\r\n\r\n  public static getDefaultMin(type: InternalDateComponentType): number {\r\n    if (type === InternalDateComponentType.Year) {\r\n      return MIN_YEAR;\r\n    } else if (type === InternalDateComponentType.Month) {\r\n      return MIN_MONTH;\r\n    } else if (type === InternalDateComponentType.Date) {\r\n      return MIN_DATE;\r\n    }\r\n    return MIN_DATE;\r\n  }\r\n\r\n  public static getDefaultMax(type: InternalDateComponentType, components?: InternalDateComponents): number {\r\n    if (type === InternalDateComponentType.Year) {\r\n      return MAX_YEAR;\r\n    } else if (type === InternalDateComponentType.Month) {\r\n      return MAX_MONTH;\r\n    } else if (type === InternalDateComponentType.Date) {\r\n      if (components === undefined) {\r\n        return MAX_DATE;\r\n      }\r\n      const { year, month } = components;\r\n      return year && month ? InternalDateGetter.getMaxDaysInMonth(month, year) : MAX_DATE;\r\n    }\r\n    return MAX_DATE;\r\n  }\r\n\r\n  public static getTodayComponents() {\r\n    const date = new Date();\r\n    return {\r\n      date: date.getDate(),\r\n      month: date.getMonth() + 1,\r\n      year: date.getFullYear(),\r\n    };\r\n  }\r\n}\r\n"]}