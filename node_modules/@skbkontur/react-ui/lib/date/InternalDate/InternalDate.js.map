{"version":3,"sources":["InternalDate.ts"],"names":["defaultLangCode","defaultDateComponentsOrder","defaultDateComponentsSeparator","emptyDateComponents","InternalDateCalculator","InternalDateGetter","InternalDateSetter","InternalDateTransformer","InternalDateValidator","internalDateLocale","InternalDateComponentType","InternalDateOrder","InternalDateValidateCheck","isInternalDateValidateCheck","InternalDate","order","separator","langCode","value","components","start","end","undefined","parseInternalValue","getComponentsRaw","getComponentsLikeNumber","dateComponentsStringToNumber","getSeparator","getOrder","getYear","year","getMonth","month","getDate","date","getRangeStart","getRangeEnd","setOrder","setSeparator","setComponents","isNativeMonth","clone","shiftMonth","validate","checks","Native","setYear","setMonth","setDate","shiftYear","step","isLoop","isRange","isCutFeb","min","getMinValue","Year","max","getMaxValue","calcShiftValueDateComponent","Month","shiftDate","Date","setRangeStart","internalDate","setRangeEnd","get","type","getValueDateComponent","set","setValueDateComponent","shift","settings","shiftValueDateComponent","parseValue","parseValueToDate","DMY","nextValue","Object","values","filter","self","includes","NotNull","checkForNull","Number","every","testParseToNumber","Limits","checkLimits","compareWithNativeDate","Range","checkRangePiecemeal","checkRangeFully","toNumber","toFragments","dateToFragments","YMD","withPad","map","valueWithPad","join","toString","withSeparator","Separator","toInternalString","dateToInternalString","toNativeFormat","duplicateOf","pattern","restore","prev","today","getTodayComponents","restoreYear","All","cutOffExcess","isIncomplete","isEmpty","some","component","isEqualComponentDate","compared","isEqual","isEqualDateValues","isEqualDateFormats","calcRangeStartDateComponent","getDefaultMin","calcRangeEndDateComponent","getDefaultMax"],"mappings":"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","sourcesContent":["import { defaultLangCode } from '../locale/constants';\r\n\r\nimport { defaultDateComponentsOrder, defaultDateComponentsSeparator, emptyDateComponents } from './constants';\r\nimport { InternalDateCalculator } from './InternalDateCalculator';\r\nimport { InternalDateGetter } from './InternalDateGetter';\r\nimport { InternalDateSetter } from './InternalDateSetter';\r\nimport { InternalDateTransformer } from './InternalDateTransformer';\r\nimport { InternalDateValidator } from './InternalDateValidator';\r\nimport { internalDateLocale } from './localeSets';\r\nimport {\r\n  InternalDateChangeSettings,\r\n  InternalDateComponentRaw,\r\n  InternalDateComponentsNumber,\r\n  InternalDateComponentsRaw,\r\n  InternalDateComponentType,\r\n  InternalDateConstructorProps,\r\n  InternalDateFragment,\r\n  InternalDateOrder,\r\n  InternalDateSeparator,\r\n  InternalDateToFragmentsSettings,\r\n  InternalDateValidateCheck,\r\n  isInternalDateValidateCheck,\r\n} from './types';\r\n\r\nexport class InternalDate {\r\n  private order: InternalDateOrder;\r\n  private separator: InternalDateSeparator;\r\n  private components: InternalDateComponentsRaw = { ...emptyDateComponents };\r\n\r\n  private start: InternalDate | null = null;\r\n  private end: InternalDate | null = null;\r\n\r\n  public constructor({ order, separator, langCode = defaultLangCode, value }: InternalDateConstructorProps = {}) {\r\n    this.order = order ?? internalDateLocale[langCode].order;\r\n    this.separator = separator ?? internalDateLocale[langCode].separator;\r\n    if (value !== undefined) {\r\n      this.parseInternalValue(value);\r\n    }\r\n  }\r\n\r\n  public getComponentsRaw(): InternalDateComponentsRaw {\r\n    return { ...this.components };\r\n  }\r\n\r\n  public getComponentsLikeNumber(): InternalDateComponentsNumber {\r\n    return InternalDateTransformer.dateComponentsStringToNumber(this.getComponentsRaw());\r\n  }\r\n\r\n  public getSeparator(): InternalDateSeparator {\r\n    return this.separator;\r\n  }\r\n\r\n  public getOrder(): InternalDateOrder {\r\n    return this.order;\r\n  }\r\n\r\n  public getYear(): InternalDateComponentRaw {\r\n    return this.components.year;\r\n  }\r\n\r\n  public getMonth(): InternalDateComponentRaw {\r\n    return this.components.month;\r\n  }\r\n\r\n  public getDate(): InternalDateComponentRaw {\r\n    return this.components.date;\r\n  }\r\n\r\n  public getRangeStart(): InternalDate | null {\r\n    return this.start;\r\n  }\r\n\r\n  public getRangeEnd(): InternalDate | null {\r\n    return this.end;\r\n  }\r\n\r\n  public setOrder(order: InternalDateOrder = defaultDateComponentsOrder): InternalDate {\r\n    this.order = order;\r\n    return this;\r\n  }\r\n\r\n  public setSeparator(separator: InternalDateSeparator = defaultDateComponentsSeparator): InternalDate {\r\n    this.separator = separator;\r\n    return this;\r\n  }\r\n\r\n  public setComponents(components: InternalDateComponentsRaw | null, isNativeMonth = false): InternalDate {\r\n    if (components && isNativeMonth) {\r\n      const clone = this.clone()\r\n        .setComponents(components)\r\n        .shiftMonth(1);\r\n      if (clone.validate({ checks: [InternalDateValidateCheck.Native] })) {\r\n        this.components = { ...clone.getComponentsLikeNumber() };\r\n      }\r\n      return this;\r\n    }\r\n    this.components = components || { ...emptyDateComponents };\r\n    return this;\r\n  }\r\n\r\n  public setYear(year: InternalDateComponentRaw): InternalDate {\r\n    this.components.year = year;\r\n    return this;\r\n  }\r\n\r\n  public setMonth(month: InternalDateComponentRaw): InternalDate {\r\n    this.components.month = month;\r\n    return this;\r\n  }\r\n\r\n  public setDate(date: InternalDateComponentRaw): InternalDate {\r\n    this.components.date = date;\r\n    return this;\r\n  }\r\n\r\n  public shiftYear(step: number, { isLoop, isRange, isCutFeb }: InternalDateChangeSettings = {}): InternalDate {\r\n    const min = this.getMinValue(InternalDateComponentType.Year, isRange);\r\n    const max = this.getMaxValue(InternalDateComponentType.Year, { isRange, isCutFeb });\r\n    const { year } = this.getComponentsLikeNumber();\r\n    this.components.year = InternalDateCalculator.calcShiftValueDateComponent(step, year, min, max, isLoop);\r\n    return this;\r\n  }\r\n\r\n  public shiftMonth(step: number, { isLoop, isRange, isCutFeb }: InternalDateChangeSettings = {}): InternalDate {\r\n    const min = this.getMinValue(InternalDateComponentType.Month, isRange);\r\n    const max = this.getMaxValue(InternalDateComponentType.Month, { isRange, isCutFeb });\r\n    const { month } = this.getComponentsLikeNumber();\r\n    this.components.month = InternalDateCalculator.calcShiftValueDateComponent(step, month, min, max, isLoop);\r\n    return this;\r\n  }\r\n\r\n  public shiftDate(step: number, { isLoop, isRange, isCutFeb }: InternalDateChangeSettings = {}): InternalDate {\r\n    const min = this.getMinValue(InternalDateComponentType.Date, isRange);\r\n    const max = this.getMaxValue(InternalDateComponentType.Date, { isRange, isCutFeb });\r\n    const { date } = this.getComponentsLikeNumber();\r\n    this.components.date = InternalDateCalculator.calcShiftValueDateComponent(step, date, min, max, isLoop);\r\n    return this;\r\n  }\r\n\r\n  public setRangeStart(internalDate: InternalDate | null): InternalDate {\r\n    this.start = internalDate;\r\n    return this;\r\n  }\r\n\r\n  public setRangeEnd(internalDate: InternalDate | null): InternalDate {\r\n    this.end = internalDate;\r\n    return this;\r\n  }\r\n\r\n  public get(type: InternalDateComponentType | null): InternalDateComponentRaw {\r\n    return type !== null ? InternalDateGetter.getValueDateComponent(type, this.getComponentsRaw()) : null;\r\n  }\r\n\r\n  public set(type: InternalDateComponentType | null, value: InternalDateComponentRaw): InternalDate {\r\n    return type !== null ? InternalDateSetter.setValueDateComponent(this, type, value) : this;\r\n  }\r\n\r\n  public shift(\r\n    type: InternalDateComponentType | null,\r\n    step: number,\r\n    settings?: InternalDateChangeSettings,\r\n  ): InternalDate {\r\n    return type !== null ? InternalDateSetter.shiftValueDateComponent(this, type, step, settings) : this;\r\n  }\r\n\r\n  public parseValue(value: string | null = ''): InternalDate {\r\n    const components = InternalDateTransformer.parseValueToDate(value, this.order) || { ...emptyDateComponents };\r\n    this.setComponents(components);\r\n    return this;\r\n  }\r\n\r\n  public parseInternalValue(value: string | null = ''): InternalDate {\r\n    const components = InternalDateTransformer.parseValueToDate(value, InternalDateOrder.DMY) || {\r\n      ...emptyDateComponents,\r\n    };\r\n    this.setComponents(components);\r\n    return this;\r\n  }\r\n\r\n  public validate({\r\n    type,\r\n    nextValue,\r\n    checks = Object.values(InternalDateValidateCheck).filter<InternalDateValidateCheck>(isInternalDateValidateCheck),\r\n  }: {\r\n    type?: InternalDateComponentType;\r\n    nextValue?: InternalDateComponentRaw;\r\n    checks?: InternalDateValidateCheck[];\r\n  } = {}): boolean {\r\n    // eslint-disable-next-line @typescript-eslint/no-this-alias\r\n    let self: InternalDate = this;\r\n    if (type !== undefined) {\r\n      const clone = this.clone();\r\n      if (nextValue !== undefined) {\r\n        clone.set(type, nextValue);\r\n      }\r\n      self = clone;\r\n    }\r\n    if (\r\n      checks.includes(InternalDateValidateCheck.NotNull) &&\r\n      !InternalDateValidator.checkForNull(self.getComponentsRaw(), type)\r\n    ) {\r\n      return false;\r\n    }\r\n    if (\r\n      checks.includes(InternalDateValidateCheck.Number) &&\r\n      !Object.values(self.getComponentsRaw()).every(InternalDateValidator.testParseToNumber)\r\n    ) {\r\n      return false;\r\n    }\r\n    if (\r\n      checks.includes(InternalDateValidateCheck.Limits) &&\r\n      !InternalDateValidator.checkLimits(self.getComponentsLikeNumber(), type)\r\n    ) {\r\n      return false;\r\n    }\r\n    if (\r\n      checks.includes(InternalDateValidateCheck.Native) &&\r\n      !InternalDateValidator.compareWithNativeDate(self.getComponentsLikeNumber())\r\n    ) {\r\n      return false;\r\n    }\r\n    if (checks.includes(InternalDateValidateCheck.Range)) {\r\n      return type !== undefined\r\n        ? InternalDateValidator.checkRangePiecemeal(\r\n            type,\r\n            self.getComponentsLikeNumber(),\r\n            self.start && self.start.getComponentsLikeNumber(),\r\n            self.end && self.end.getComponentsLikeNumber(),\r\n          )\r\n        : InternalDateValidator.checkRangeFully(\r\n            self.toNumber(),\r\n            self.start && self.start.toNumber(),\r\n            self.end && self.end.toNumber(),\r\n          );\r\n    }\r\n    return true;\r\n  }\r\n\r\n  public toFragments(\r\n    settings: InternalDateToFragmentsSettings = {},\r\n    components: InternalDateComponentsRaw = this.getComponentsRaw(),\r\n  ): InternalDateFragment[] {\r\n    return InternalDateTransformer.dateToFragments(components, {\r\n      order: this.order,\r\n      separator: this.separator,\r\n      ...settings,\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Перевод даты в числовое представление (**НЕ** аналог `timestamp`)\r\n   * Предназначено для быстрого сравнивания дат `<=>`\r\n   */\r\n  public toNumber(): number {\r\n    return Number(\r\n      this.toFragments({ order: InternalDateOrder.YMD, withPad: true })\r\n        .map(({ valueWithPad }) => valueWithPad)\r\n        .join(''),\r\n    );\r\n  }\r\n\r\n  public toString(settings: InternalDateToFragmentsSettings = {}): string {\r\n    return this.toFragments({ withPad: true, withSeparator: true, ...settings })\r\n      .filter(({ value }) => value !== null)\r\n      .map(({ type, valueWithPad, value }) =>\r\n        settings.withPad && type !== InternalDateComponentType.Separator ? valueWithPad : value,\r\n      )\r\n      .join('');\r\n  }\r\n\r\n  public toInternalString(): string {\r\n    return InternalDateTransformer.dateToInternalString(this.getComponentsRaw());\r\n  }\r\n\r\n  public toNativeFormat(): InternalDateComponentsNumber | null {\r\n    const components = this.getComponentsLikeNumber();\r\n    if (InternalDateValidator.compareWithNativeDate(components)) {\r\n      return { ...components, month: components.month - 1 };\r\n    }\r\n    return null;\r\n  }\r\n\r\n  public clone(): InternalDate {\r\n    return new InternalDate({ order: this.order, separator: this.separator })\r\n      .setComponents({ ...this.components })\r\n      .setRangeStart(this.start && this.start.clone())\r\n      .setRangeEnd(this.end && this.end.clone());\r\n  }\r\n\r\n  public duplicateOf(pattern: InternalDate): InternalDate {\r\n    return this.setComponents(pattern.getComponentsRaw());\r\n  }\r\n\r\n  public restore(type: InternalDateComponentType | null = null): InternalDate {\r\n    const prev = this.getComponentsRaw();\r\n    const today = InternalDateGetter.getTodayComponents();\r\n\r\n    if (prev.year === null && prev.month === null && prev.date === null) {\r\n      return this;\r\n    }\r\n\r\n    const restoreYear =\r\n      prev.year !== null && InternalDateValidator.testParseToNumber(prev.year)\r\n        ? prev.year > 50 && prev.year < 100\r\n          ? Number(prev.year) + 1900\r\n          : prev.year > 0 && prev.year < 51\r\n          ? Number(prev.year) + 2000\r\n          : prev.year\r\n        : today.year;\r\n    if (\r\n      (type === null && restoreYear !== prev.year) ||\r\n      type === InternalDateComponentType.Year ||\r\n      type === InternalDateComponentType.All\r\n    ) {\r\n      this.setYear(restoreYear);\r\n    }\r\n    if (\r\n      (type === null && prev.month === null) ||\r\n      type === InternalDateComponentType.Month ||\r\n      type === InternalDateComponentType.All\r\n    ) {\r\n      this.setMonth(today.month);\r\n    }\r\n    if (\r\n      (type === null && prev.date === null) ||\r\n      type === InternalDateComponentType.Date ||\r\n      type === InternalDateComponentType.All\r\n    ) {\r\n      this.setDate(today.date);\r\n    }\r\n    return this;\r\n  }\r\n\r\n  public cutOffExcess(\r\n    type: InternalDateComponentType | null = null,\r\n    { isLoop = false, isRange, isCutFeb = false }: InternalDateChangeSettings = {},\r\n  ): InternalDate {\r\n    const { year, month, date } = this.components;\r\n    if ((type === null || type === InternalDateComponentType.Year) && InternalDateValidator.testParseToNumber(year)) {\r\n      this.shiftYear(0, { isLoop, isRange, isCutFeb });\r\n    }\r\n    if ((type === null || type === InternalDateComponentType.Month) && InternalDateValidator.testParseToNumber(month)) {\r\n      this.shiftMonth(0, { isLoop, isRange, isCutFeb });\r\n    }\r\n    if ((type === null || type === InternalDateComponentType.Date) && InternalDateValidator.testParseToNumber(date)) {\r\n      this.shiftDate(0, { isLoop, isRange, isCutFeb });\r\n    }\r\n    return this;\r\n  }\r\n\r\n  public isIncomplete(): boolean {\r\n    return !this.isEmpty() && Object.values(this.components).some(component => component === null);\r\n  }\r\n\r\n  public isEmpty(): boolean {\r\n    return Object.values(this.components).every(component => component === null);\r\n  }\r\n\r\n  public isEqualComponentDate(type: InternalDateComponentType | null, compared: InternalDate): boolean {\r\n    return this.get(type) === compared.get(type);\r\n  }\r\n\r\n  public isEqual(compared: InternalDate): boolean {\r\n    return (\r\n      InternalDateValidator.isEqualDateValues(this, compared) &&\r\n      InternalDateValidator.isEqualDateFormats(this, compared)\r\n    );\r\n  }\r\n\r\n  private getMinValue(type: InternalDateComponentType, isRange?: boolean): number {\r\n    if (isRange === true && this.start !== null) {\r\n      return Number(\r\n        InternalDateCalculator.calcRangeStartDateComponent(\r\n          type,\r\n          this.getComponentsLikeNumber(),\r\n          this.start.getComponentsLikeNumber(),\r\n        ),\r\n      );\r\n    }\r\n    return InternalDateGetter.getDefaultMin(type);\r\n  }\r\n\r\n  private getMaxValue(\r\n    type: InternalDateComponentType,\r\n    { isRange, isCutFeb }: { isRange?: boolean; isCutFeb?: boolean } = {},\r\n  ): number {\r\n    if (isRange && this.end !== null) {\r\n      return Number(\r\n        InternalDateCalculator.calcRangeEndDateComponent(\r\n          type,\r\n          this.getComponentsLikeNumber(),\r\n          this.end.getComponentsLikeNumber(),\r\n        ),\r\n      );\r\n    }\r\n    if (!isCutFeb) {\r\n      return InternalDateGetter.getDefaultMax(type);\r\n    }\r\n    return InternalDateGetter.getDefaultMax(type, this.getComponentsLikeNumber());\r\n  }\r\n}\r\n"]}