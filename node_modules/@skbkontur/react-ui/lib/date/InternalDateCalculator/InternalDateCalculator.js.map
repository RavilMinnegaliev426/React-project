{"version":3,"sources":["InternalDateCalculator.ts"],"names":["InternalDateGetter","InternalDateComponentType","InternalDateCalculator","calcRangeStartDateComponent","type","year","month","date","startYear","startMonth","startDate","Year","Month","getDefaultMin","calcRangeEndDateComponent","endYear","endMonth","endDate","getDefaultMax","calcShiftValueDateComponent","step","prevValue","start","end","isLoop","value","Number","Math","abs"],"mappings":"AAAA,SAASA,kBAAT,QAAmC,sBAAnC;AACA;;;;AAIEC,yBAJF;AAKO,SALP;;AAOA,WAAaC,sBAAb;AACgBC,EAAAA,2BADhB,GACE;AACEC,EAAAA,IADF;;;AAIyB,OAFrBC,IAEqB,QAFrBA,IAEqB,CAFfC,KAEe,QAFfA,KAEe,CAFRC,IAEQ,QAFRA,IAEQ,KADfC,SACe,SADrBH,IACqB,CADGI,UACH,SADJH,KACI,CADqBI,SACrB,SADeH,IACf;AACvB,QAAIH,IAAI,KAAKH,yBAAyB,CAACU,IAAvC,EAA6C;AAC3C,aAAOH,SAAP;AACD,KAFD,MAEO,IAAIJ,IAAI,KAAKH,yBAAyB,CAACW,KAAvC,EAA8C;AACnD,aAAOP,IAAI,KAAKG,SAAT,GAAqBC,UAArB,GAAkCT,kBAAkB,CAACa,aAAnB,CAAiCT,IAAjC,CAAzC;AACD;AACD,WAAOC,IAAI,KAAKG,SAAT,IAAsBF,KAAK,KAAKG,UAAhC,GAA6CC,SAA7C,GAAyDV,kBAAkB,CAACa,aAAnB,CAAiCT,IAAjC,CAAhE;AACD,GAZH;;AAcgBU,EAAAA,yBAdhB,GAcE;AACEV,EAAAA,IADF;;;AAIyB,OAFrBC,IAEqB,SAFrBA,IAEqB,CAFfC,KAEe,SAFfA,KAEe,CAFRC,IAEQ,SAFRA,IAEQ,KADfQ,OACe,SADrBV,IACqB,CADCW,QACD,SADNV,KACM,CADiBW,OACjB,SADWV,IACX;AACvB,QAAIH,IAAI,KAAKH,yBAAyB,CAACU,IAAvC,EAA6C;AAC3C,aAAOI,OAAP;AACD,KAFD,MAEO,IAAIX,IAAI,KAAKH,yBAAyB,CAACW,KAAvC,EAA8C;AACnD,aAAOP,IAAI,KAAKU,OAAT,GAAmBC,QAAnB,GAA8BhB,kBAAkB,CAACkB,aAAnB,CAAiCd,IAAjC,CAArC;AACD;AACD,WAAOC,IAAI,KAAKU,OAAT,IAAoBT,KAAK,KAAKU,QAA9B;AACHC,IAAAA,OADG;AAEHjB,IAAAA,kBAAkB,CAACkB,aAAnB,CAAiCd,IAAjC,EAAuC,EAAEC,IAAI,EAAJA,IAAF,EAAQC,KAAK,EAALA,KAAR,EAAeC,IAAI,EAAJA,IAAf,EAAvC,CAFJ;AAGD,GA3BH;;AA6BgBY,EAAAA,2BA7BhB,GA6BE;AACEC,EAAAA,IADF;AAEEC,EAAAA,SAFF;AAGEC,EAAAA,KAHF;AAIEC,EAAAA,GAJF;AAKEC,EAAAA,MALF;AAMyB,OADvBA,MACuB,cADvBA,MACuB,GADd,IACc;AACvB,QAAMC,KAAK,GAAGL,IAAI,GAAGM,MAAM,CAACL,SAAD,CAA3B;AACA,QAAID,IAAI,KAAK,CAAT,KAAeE,KAAK,GAAGG,KAAR,GAAgBE,IAAI,CAACC,GAAL,CAASR,IAAT,CAAhB,IAAkCK,KAAK,GAAGF,GAAR,GAAcI,IAAI,CAACC,GAAL,CAASR,IAAT,CAA/D,CAAJ,EAAoF;AAClF,aAAOA,IAAI,GAAG,CAAP,GAAWG,GAAX,GAAiBD,KAAxB;AACD;AACD,QAAIE,MAAJ,EAAY;AACV,aAAOC,KAAK,GAAGH,KAAR,GAAgBC,GAAhB,GAAsBE,KAAK,GAAGF,GAAR,GAAcD,KAAd,GAAsBG,KAAnD;AACD;AACD,WAAOA,KAAK,GAAGH,KAAR,GAAgBA,KAAhB,GAAwBG,KAAK,GAAGF,GAAR,GAAcA,GAAd,GAAoBE,KAAnD;AACD,GA5CH","sourcesContent":["import { InternalDateGetter } from './InternalDateGetter';\r\nimport {\r\n  InternalDateComponent,\r\n  InternalDateComponentRaw,\r\n  InternalDateComponents,\r\n  InternalDateComponentType,\r\n} from './types';\r\n\r\nexport class InternalDateCalculator {\r\n  public static calcRangeStartDateComponent(\r\n    type: InternalDateComponentType,\r\n    { year, month, date }: InternalDateComponents,\r\n    { year: startYear, month: startMonth, date: startDate }: InternalDateComponents,\r\n  ): InternalDateComponent {\r\n    if (type === InternalDateComponentType.Year) {\r\n      return startYear;\r\n    } else if (type === InternalDateComponentType.Month) {\r\n      return year === startYear ? startMonth : InternalDateGetter.getDefaultMin(type);\r\n    }\r\n    return year === startYear && month === startMonth ? startDate : InternalDateGetter.getDefaultMin(type);\r\n  }\r\n\r\n  public static calcRangeEndDateComponent(\r\n    type: InternalDateComponentType,\r\n    { year, month, date }: InternalDateComponents,\r\n    { year: endYear, month: endMonth, date: endDate }: InternalDateComponents,\r\n  ): InternalDateComponent {\r\n    if (type === InternalDateComponentType.Year) {\r\n      return endYear;\r\n    } else if (type === InternalDateComponentType.Month) {\r\n      return year === endYear ? endMonth : InternalDateGetter.getDefaultMax(type);\r\n    }\r\n    return year === endYear && month === endMonth\r\n      ? endDate\r\n      : InternalDateGetter.getDefaultMax(type, { year, month, date });\r\n  }\r\n\r\n  public static calcShiftValueDateComponent(\r\n    step: number,\r\n    prevValue: InternalDateComponentRaw,\r\n    start: number,\r\n    end: number,\r\n    isLoop = true,\r\n  ): InternalDateComponent {\r\n    const value = step + Number(prevValue);\r\n    if (step !== 0 && (start - value > Math.abs(step) || value - end > Math.abs(step))) {\r\n      return step < 0 ? end : start;\r\n    }\r\n    if (isLoop) {\r\n      return value < start ? end : value > end ? start : value;\r\n    }\r\n    return value < start ? start : value > end ? end : value;\r\n  }\r\n}\r\n"]}