{"version":3,"sources":["extractKeyboardAction.ts"],"names":["KeyboardActionExctracterBuilder","actionMatchers","_actionMatchers","add","type","check","concat","build","defaultAction","event","action","find","x"],"mappings":";;;;;;;;;AASA,WAAaA,+BAAb;;;AAGE,2CAAYC,cAAZ,EAAkE,KAAtDA,cAAsD,cAAtDA,cAAsD,GAAJ,EAAI,OAF1DC,eAE0D;AAChE,SAAKA,eAAL,GAAuBD,cAAvB;AACD,GALH;;AAOSE,EAAAA,GAPT,GAOE,aAAkBC,IAAlB,EAA2BC,KAA3B,EAAmF;AACjF,WAAO,IAAIL,+BAAJ,CAAoC,KAAKE,eAAL,CAAqBI,MAArB,CAA4B,EAAEF,IAAI,EAAJA,IAAF,EAAQC,KAAK,EAALA,KAAR,EAA5B,CAApC,CAAP;AACD,GATH;;AAWSE,EAAAA,KAXT,GAWE,eAAoBC,aAApB,EAAmF;AACjF,WAAO,UAAAC,KAAK,EAAI;AACd,UAAMC,MAAM,GAAG,KAAI,CAACR,eAAL,CAAqBS,IAArB,CAA0B,UAAAC,CAAC,UAAIA,CAAC,CAACP,KAAF,CAAQI,KAAR,CAAJ,EAA3B,CAAf;AACA,aAAQC,MAAM,IAAIA,MAAM,CAACN,IAAlB,IAA2BI,aAAlC;AACD,KAHD;AAID,GAhBH","sourcesContent":["import React from 'react';\r\n\r\ntype ActionCheck = (x0: React.KeyboardEvent<HTMLElement>) => boolean;\r\n\r\ninterface KeyboardActionMatcher<Actions> {\r\n  type: Actions;\r\n  check: (x0: React.KeyboardEvent<HTMLElement>) => boolean;\r\n}\r\n\r\nexport class KeyboardActionExctracterBuilder<T> {\r\n  private _actionMatchers: Array<KeyboardActionMatcher<any>>;\r\n\r\n  constructor(actionMatchers: Array<KeyboardActionMatcher<T>> = []) {\r\n    this._actionMatchers = actionMatchers;\r\n  }\r\n\r\n  public add<P = T>(type: T, check: ActionCheck): KeyboardActionExctracterBuilder<T> {\r\n    return new KeyboardActionExctracterBuilder(this._actionMatchers.concat({ type, check }));\r\n  }\r\n\r\n  public build<P = T>(defaultAction: P): (x0: React.KeyboardEvent<HTMLElement>) => T {\r\n    return event => {\r\n      const action = this._actionMatchers.find(x => x.check(event));\r\n      return (action && action.type) || defaultAction;\r\n    };\r\n  }\r\n}\r\n"]}