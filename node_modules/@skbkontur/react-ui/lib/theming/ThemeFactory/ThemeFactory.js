import { DefaultThemeInternal } from "../../../internal/themes/DefaultTheme";
var IS_THEME_KEY = '__IS_REACT_UI_THEME__';
Object.defineProperty(DefaultThemeInternal, IS_THEME_KEY, {
  value: true,
  writable: false,
  enumerable: false,
  configurable: false
});
export var ThemeFactory =
/*#__PURE__*/
function () {
  function ThemeFactory() {}

  ThemeFactory.create = function create(theme, baseTheme) {
    if (baseTheme === void 0) {
      baseTheme = DefaultThemeInternal;
    }

    return Object.freeze(Object.setPrototypeOf(theme, baseTheme));
  };

  ThemeFactory.isFullTheme = function isFullTheme(theme) {
    // @ts-ignore
    return theme[IS_THEME_KEY] === true;
  };

  ThemeFactory.overrideDefaultTheme = function overrideDefaultTheme(theme) {
    Object.keys(theme).forEach(function (variableName) {
      var descriptor = Object.getOwnPropertyDescriptor(theme, variableName);
      Object.defineProperty(DefaultThemeInternal, variableName, descriptor);
    });
  };

  ThemeFactory.getKeys = function getKeys(theme) {
    var keys = [];

    while (theme != null) {
      Object.keys(theme).forEach(function (key) {
        if (!keys.includes(key)) {
          keys.push(key);
        }
      });
      theme = Object.getPrototypeOf(theme);
    }

    return keys.sort();
  };

  return ThemeFactory;
}();