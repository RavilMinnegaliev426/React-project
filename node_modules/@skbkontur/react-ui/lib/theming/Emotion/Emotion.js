import createEmotion from 'create-emotion';
import extraScopePlugin from 'stylis-plugin-extra-scope';
import { Upgrade } from "../../Upgrades";
var PREFIX = 'react-ui';
var scope = new Array(Upgrade.getSpecificityLevel()).fill("." + PREFIX).join('');

var _createEmotion = createEmotion({
  key: PREFIX,
  stylisPlugins: scope ? [extraScopePlugin(scope)] : undefined
}),
    flush = _createEmotion.flush,
    hydrate = _createEmotion.hydrate,
    cx = _createEmotion.cx,
    merge = _createEmotion.merge,
    getRegisteredStyles = _createEmotion.getRegisteredStyles,
    injectGlobal = _createEmotion.injectGlobal,
    keyframes = _createEmotion.keyframes,
    css = _createEmotion.css,
    sheet = _createEmotion.sheet,
    cache = _createEmotion.cache;

export { flush, hydrate, cx, merge, getRegisteredStyles, injectGlobal, keyframes, css, sheet, cache };
export var cssName = function cssName(className) {
  return "." + className;
};

function isZeroArgs(fn) {
  return fn.length == 0;
}

var memoize = function memoize(fn) {
  if (isZeroArgs(fn)) {
    var isCalled = false;
    var result;
    return function () {
      if (!isCalled) {
        isCalled = true;
        result = fn();
      }

      return result;
    };
  }

  var cache = new WeakMap();
  return function (arg) {
    if (!cache.has(arg)) cache.set(arg, fn(arg));
    return cache.get(arg);
  };
};

export var memoizeStyle = function memoizeStyle(styles) {
  Object.keys(styles).forEach(function (className) {
    return styles[className] = memoize(styles[className]);
  });
  return styles;
};